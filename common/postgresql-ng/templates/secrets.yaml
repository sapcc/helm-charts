---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-postgres-gen-pw
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
spec:
  template:
    spec:
      restartPolicy: Never
      serviceAccountName: generate-postgres-secret
      containers:
      - name: channel-config
        # at the time of writing, kubectl is only available in edge
        image: "{{ $.Values.global.dockerHubMirror }}/library/alpine:edge"
        command:
          - ash
          - -c
          - |
            set -eou pipefail
            apk add --no-cache --no-progress kubectl

            # if we already have a secret, we can stop here
            if [[ "$(kubectl get secrets postgres-password --ignore-not-found)" != "" ]]; then
              exit 0
            fi

            head -c 30 </dev/urandom | base64 > postgres-password
            kubectl create secret generic postgres-password --from-file=postgres-password

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-postgres-gen-pw
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - get

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-postgres-gen-pw
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: generate-postgres-secret
subjects:
  - kind: ServiceAccount
    name: generate-postgres-secret

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-postgres-gen-pw
  annotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-5"
    helm.sh/hook-delete-policy: hook-succeeded
