apiVersion: v1
kind: ServiceAccount
metadata:
  # This service account is used by the postgres pod itself.
  name: {{ template "postgres.fullname" . }}

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ template "postgres.fullname" . }}-secrets
rules:
  # The init container of the postgres pods generates the
  # `$RELEASE-pguser-$USERNAME` secrets on first start.
  - apiGroups: [ "" ]
    resources: [ secrets ]
    verbs:     [ get, delete ]
    resourceNames:
      # duplicated with the code in configmap because the templating is to limited in its features
      {{- $users := .Values.users }}
      {{- if .Values.persistence.createBackupUser }}
        {{- $users := merge $users (dict "backup" (dict)) }}
      {{- end }}
      {{- if .Values.createMetricsUser }}
        {{- $users := merge $users (dict "metrics" (dict)) }}
      {{- end }}

      {{- range $user, $settings := $users }}
      - {{ $.Release.Name }}-pguser-{{ $user }}
      {{- end }}

  # "create" permission cannot be restricted to specific resourceNames
  # Ref: <https://stackoverflow.com/a/65203104>
  - apiGroups: [ "" ]
    resources: [ secrets ]
    verbs:     [ create ]

  # need the UID of the postgres deployment to render an owner reference
  - apiGroups: [ apps ]
    resources: [ deployments ]
    verbs:     [ get ]
    resourceNames: [ {{ template "postgres.fullname" . }} ]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ template "postgres.fullname" . }}-secrets
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: {{ template "postgres.fullname" . }}-secrets
subjects:
  - kind: ServiceAccount
    name: {{ template "postgres.fullname" . }}
