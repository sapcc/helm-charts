# Default values for rabbitmq.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

global:
  user_suffix: ""
  master_password: ""

image: library/rabbitmq
imageTag: 3.6-management
clusterImageTag: 3.9-management
## Specify a imagePullPolicy
## 'Always' if imageTag is 'latest', else set to 'IfNotPresent'
## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
##
# imagePullPolicy:

# name of priorityClass to influence scheduling priority
# priority_class: "openstack-service-critical"

ports:
  public: 5672
  management: 15672
  clustering: 25672
  epmd: 4369
  metrics: 15692

# when not empty, exposes the RabbitMQ service to the outside of the cluster on these IPs
externalIPs: []

users:
  default:
    user: rabbitmq
    password: null
  admin:
    user: admin
    password: null

persistence:
  enabled: false
  accessMode: ReadWriteMany
  size: 10Gi
  # Re-use existing (unmanged) PVC
  # existingClaim: claimName

livenessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 10
readinessProbe:
  enabled: true
  failureThreshold: 3
  initialDelaySeconds: 15
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 5

resources:
  requests:
    memory: 512Mi
    cpu: 800m
  limits:
    cpu: 5000m

## Affinity for pod assignment
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
nodeAffinity: {}

metrics:
  enabled: true
  image: kbudde/rabbitmq-exporter
  imageTag: 0.16.0
  user: monitoring
  password: null
  port: 9150
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 64Mi
      cpu: 100m

# Default Prometheus alerts and rules.
alerts:
  enabled: true
  # Enables Critical alert if pod not ready for 10 mins.
  critical_readiness_enabled: true

  # Name of the Prometheus supposed to scrape the metrics and to which alerts are assigned.
  prometheus: openstack

  # The tier of the alert.
  tier: os

  # Configurable service label of the alerts. Defaults to `.Release.Name`.
  # service:

# replicas. Uses statefulset for multiple replicas.
# Cluster formation is enabled with cluster.enabled = true.
replicas: 1
cluster:
  enabled: false
  ha: false # Enables HA

pdr:
  enabled: true
  minAvailable: "51%" # 50% should technically be enough, but just to be safe

plugins:
  - rabbitmq_management
  - rabbitmq_tracing
  - rabbitmq_peer_discovery_k8s
  - rabbitmq_prometheus

# Enables management web ingress accessible via
# https://<service>-rabbitmq.<region>.cloud.sap
management_ingress: false

# RabbitMQ Policies
policies: []

# HA Policy
ha_policy:
  vhost: "/"
  name: ha
  pattern: ""
  apply-to: all
  definition:
    ha-mode: all
  priority: 0

upgrades:
  revisionHistory: 3
  podReplacementStrategy: Recreate
#  rollingUpdate:
#    maxUnavailable: 1
#    maxSurge: 3
