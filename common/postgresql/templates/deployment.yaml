{{- if and .Values.nameOverride (not (hasPrefix "grafanasix" .Release.Name)) -}}
  {{- fail ".Values.postgresql.nameOverride is not supported for new deployments (please stick to the standard naming scheme)" -}}
{{- end -}}

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        component: "{{ .Values.postgresDatabase }}"
        name: {{ template "fullname" . }} # just to make the ci pipeline easier, not actually used anywhere
        type: database
      annotations:
        kubectl.kubernetes.io/default-container: postgres
        checksum/secrets: {{ include (print $.Template.BasePath  "/secrets.yaml") . | sha256sum }}
        checksum/etc: {{ include (print $.Template.BasePath  "/etc-configmap.yaml") . | sha256sum }}
        {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: cloud.sap/maintenance-state
                operator: In
                values:
                - operational
      containers:
      - name: postgres
        image: "{{ include "preferredRegistry" . }}/postgres:{{ .Values.imageTag }}"
        imagePullPolicy: "IfNotPresent"
{{- if .Values.debug }}
        command: ["sleep", "inf"]
{{- else }}
        args: ["-c", "config_file=/postgresql-conf/postgresql.conf", "-c", "hba_file=/postgresql-conf/pg-hba.conf"]
{{- end }}
        env:
        - name: POSTGRES_USER
          value: {{ default "postgres" .Values.postgresUser | quote }}
          # Required for pg_isready in the health probes.
        - name: PGUSER
          value: {{ default "postgres" .Values.postgresUser | quote }}
        - name: POSTGRES_DB
          value: {{ default "" .Values.postgresDatabase | quote }}
        - name: PGDATA
          value: /postgresql/data
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: postgres-password
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: postgresql
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 120
          timeoutSeconds: {{ .Values.probe_timeout_secs }}
          failureThreshold: {{ .Values.probe_failure_threshold }}
        # We use the POD_IP to not have the pod become ready during the inital database setup
        # where the docker image briefly starts the db  for creating the user,
        # running custom setup scripts etc.
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - exec pg_isready --host $POD_IP
          initialDelaySeconds: 5
          timeoutSeconds: {{ .Values.probe_timeout_secs }}
        resources:
{{ toYaml (required "missing .resources" .Values.resources) | indent 10 }}
        volumeMounts:
        - name: data
          mountPath: /postgresql
        - name: postgres-etc
          mountPath: /postgresql-conf
{{- if .Values.dbInit }}
        - name: db-init
          mountPath: /docker-entrypoint-initdb.d
{{- end }}
{{- if .Values.dbMaintain }}
        - name: db-maintain
          mountPath: /docker-entrypoint-maintaindb.d
{{- end }}
{{- if .Values.sharedMemoryLimit }}
        - name: dev-shm
          mountPath: /dev/shm
{{- end }}
      volumes:
      - name: postgres-etc
        configMap:
          name: {{ template "fullname" . }}-etc
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.persistence.existingClaim | default (include "fullname" .) }}
      {{- else }}
        emptyDir: {}
      {{- end }}
{{- if .Values.dbInit }}
      - name: db-init
        configMap:
          name: {{ .Values.dbInit }}
{{- end }}
{{- if .Values.dbMaintain }}
      - name: db-maintain
        configMap:
          name: {{ .Values.dbMaintain }}
{{- end }}
{{- if .Values.sharedMemoryLimit }}
      - name: dev-shm
        emptyDir:
          medium: Memory
          sizeLimit: {{ .Values.sharedMemoryLimit }}
{{- end }}
