{{- $root := . }}
{{- if .Values.enabled }}
{{- range $name := coalesce .Values.names .Values.global.targets (list .Values.name) }}
---
apiVersion: monitoring.banzaicloud.io/v1alpha1
kind: Thanos
metadata:
  name: {{ include "thanos.fullName" (list $name $root) }}
spec:
  queryDiscovery: {{ $.Values.queryDiscovery }}
  clusterDomain: {{ include "clusterDomainOrDefault" $root }}
  query:
    {{- if ($.Values.authentication.enabled) }}
    GRPCClientCA: {{ include "thanos.fullName" (list $name $root) }}-grpcclient-ca
    GRPCClientCertificate: {{ include "thanos.fullName" (list $name $root) }}-grpcclient-crt
    {{- end }}
    logLevel: {{ $.Values.logLevel }}
    queryAutoDownsampling: true
    queryReplicaLabel:
      - prometheus_replica
    {{- if $.Values.deployWholeThanos }}
    webRoutePrefix: {{ required "$.Values.query.webRouteprefix missing" $.Values.query.webRouteprefix }}
    webExternalPrefix: {{ required "$.Values.query.webRouteprefix missing" $.Values.query.webRouteprefix }}
    {{- end }}
    {{- if or $.Values.deployWholeThanos (($.Values.query).stores) ($.Values.useQueryRegions) ($.Values.clusterTypes) }}
    stores:
    {{- end }}
    {{- if (($.Values.query).stores) }}
    # add stores manually
      {{- range $store := $.Values.query.stores }}
      - {{ $store.name }}.{{ $store.namespace }}.svc.{{ default "cluster.local" $.Values.clusterDomain }}:{{ $store.port }}
      {{- end }}
    {{- else if $.Values.deployWholeThanos }}
    # add stores for prometheus and thanos setup
      - prometheus-{{ include "thanos.name" (list $name $root) }}:10901
    {{- else if and $.Values.useQueryRegions $.Values.clusterTypes }}
    # add stores for global thanos
      {{- range $region := $.Values.queryRegions }}
        {{- range $cluster := $root.Values.clusterTypes }}
        - thanos-{{ $cluster }}-grpc.{{ $region }}.{{ $root.Values.global.tld }}:443
        {{- end }}
      {{- end }}
    {{- else if ($.Values.clusterTypes) }}
    # add stores for regional thanos
      {{- range $cluster := $.Values.clusterTypes }}
      - thanos-{{ $cluster }}-grpc.{{ $root.Values.global.region }}.{{ $root.Values.global.tld }}:443
      {{- end }}
    {{- end }}
    serviceOverrides:
      metadata:
        labels:
          thanos: {{ include "thanos.name" (list $name $root) }}
    deploymentOverrides:
      spec:
        template:
          spec:
            containers:
            - image: {{ include "thanosimage" $root }}
              name: query
  {{- if $.Values.deployWholeThanos }}
  storeGateway:
    logLevel: {{ $.Values.logLevel }}
    indexCacheSize: {{ required ".Values.store.indexCacheSize missing" $.Values.store.indexCacheSize }}
    chunkPoolSize: {{ required ".Values.store.chunkPoolSize missing" $.Values.store.chunkPoolSize }}
    storeGRPCSeriesMaxConcurrency: {{ required ".Values.store.seriesMaxConcurrency missing" $.Values.store.seriesMaxConcurrency }}
    serviceOverride:
      metadata:
        labels:
          thanos: {{ include "thanos.name" (list $name $root) }}
    deploymentOverrides:
      spec:
        template:
          spec:
            containers:
            - image: {{ include "thanosimage" $root }}
              name: store
  {{- end }}
{{- end }}
{{- end }}
