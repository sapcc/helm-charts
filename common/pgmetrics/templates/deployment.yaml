{{- $region  := .Values.global.region       | required "missing value for .Values.global.region" -}}
{{- $tld     := .Values.global.tld          | required "missing value for .Values.global.tld" -}}
{{- $mirror  := .Values.global.quayIoMirror | required "missing value for .Values.global.quayIoMirror" -}}
{{- $db_name := .Values.db_name             | default .Release.Name -}}
{{- $db_pass := .Values.db_password         | required "missing value for .Values.db_password" -}}
{{- $db_host := printf "%s-postgresql.%s.svc.kubernetes.%s.%s" .Release.Name .Release.Namespace $region $tld -}}

kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-pgmetrics
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ .Release.Name }}-pgmetrics
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-pgmetrics
        component: {{ $db_name }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        type: metrics
        {{- if .Values.alerts.enabled }}
        alert-tier: {{ required ".Values.alerts.tier missing" .Values.alerts.tier }}
        alert-service: {{ .Values.alerts.service | default .Release.Name }}
        {{- end }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
        prometheus.io/targets: {{ quote .Values.alerts.prometheus }}
    spec:
      containers:
      - name: metrics
        image: "{{ $mirror }}/prometheuscommunity/postgres-exporter:v0.10.1"
        imagePullPolicy: IfNotPresent
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://postgres:{{ $db_pass }}@{{ $db_host }}:5432/{{ $db_name }}?sslmode=disable
        ports:
          - name: metrics
            containerPort: 9187
        args: ["--extend.query-path", "/conf/custom-metrics.yaml", "--log.level", "info" ]
        volumeMounts:
          - name: custom-metrics
            mountPath: /conf
            readOnly: true
        resources:
          limits:
            cpu:    {{ quote .Values.resources.limits.cpu }}
            memory: {{ quote .Values.resources.limits.memory }}
          requests:
            cpu:    {{ quote .Values.resources.requests.cpu }}
            memory: {{ quote .Values.resources.requests.memory }}
      volumes:
      - name: custom-metrics
        configMap:
          name: {{ .Release.Name }}-pgmetrics-etc
          items:
          - key: custom-metrics.yaml
            path: custom-metrics.yaml
