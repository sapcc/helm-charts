apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "zookeeper.fullname" . }}
  labels:
    {{- include "zookeeper.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "zookeeper.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "zookeeper.fullname" . }}-headless
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        {{- include "zookeeper.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      initContainers:
      - name: volume-permissions
        image: "{{include "dockerHubMirror" .}}/library/busybox"
        command:
        - /bin/sh
        - -c
        - |
          chown -R 1000:1000 /data
        securityContext:
          runAsUser: 0
        volumeMounts:
          - mountPath: /data
            name: zookeeper-data
      containers:
        - name: zookeeper
          image: "{{include "dockerHubMirror" .}}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          ports:
            - name: client
              containerPort: {{ .Values.containerPorts.client }}
              protocol: TCP
            - name: follower
              containerPort: {{ .Values.containerPorts.follower }}
              protocol: TCP
            - name: election
              containerPort: {{ .Values.containerPorts.election }}
              protocol: TCP
            - name: admin-server
              containerPort: {{ .Values.containerPorts.adminServer }}
              protocol: TCP
          env:
            - name: ZOO_TICK_TIME
              value: "{{ .Values.tickTime }}"
            - name: ZOO_INIT_LIMIT
              value: "{{ .Values.initLimit }}"
            - name: ZOO_SYNC_LIMIT
              value: "{{ .Values.syncLimit }}"
            - name: ZOO_MAX_CLIENT_CNXNS
              value: "{{ .Values.maxClientCnxns }}"
            - name: ZOO_STANDALONE_ENABLED
              value: "true"
            - name: ZOO_ADMINSERVER_ENABLED
              value: "true"
            - name: ZOO_SERVERS
              value: '{{- range $i, $e := until (int .Values.replicaCount) }}server.{{ add $i 1 }}={{ include "zookeeper.fullname" $ }}-{{ $i }}.{{ include "zookeeper.fullname" $ }}-headless:{{ $.Values.containerPorts.follower }}:{{ $.Values.containerPorts.election }};{{ $.Values.containerPorts.client }}{{- end }}'
            - name: JVMFLAGS
              value: "-Xmx{{ .Values.heapSize }}m -Xms{{ .Values.heapSize }}m"
          command:
            - "sh"
            - "-exc"
            - |
              export ZOO_MY_ID=${HOSTNAME##*-}
              export ZOO_MY_ID=$((ZOO_MY_ID+1))
              exec /docker-entrypoint.sh zkServer.sh start-foreground
          volumeMounts:
            - name: zookeeper-data
              mountPath: /data
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: zookeeper-data
      spec:
        accessModes: {{ .Values.persistence.accessModes | toYaml | nindent 8 }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.storageClass }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
  {{- else }}
      volumes:
        - name: zookeeper-data
          emptyDir: {}
  {{- end }}
