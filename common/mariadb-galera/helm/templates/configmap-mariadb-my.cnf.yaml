{{- $wsrepProviderOptions := dict }}
{{- $nodeNamePrefix := (include "nodeNamePrefix" (dict "global" $ "component" "database")) -}}
{{- if $.Values.mariadb.galera.pcrecovery }}
  {{- $_ := set $wsrepProviderOptions "pc.recovery" "pc.recovery=TRUE"}}
{{- else  }}
  {{- $_ := set $wsrepProviderOptions "pc.recovery" "pc.recovery=FALSE"}}
{{- end }}
{{- if $.Values.mariadb.galera.gcache.recover }}
  {{- $_ := set $wsrepProviderOptions "gcache.recover" "gcache.recover=yes" }}
{{- else  }}
  {{- $_ := set $wsrepProviderOptions "gcache.recover" "gcache.recover=no" }}
{{- end }}
{{- $_ := set $wsrepProviderOptions "cert.log_conflicts" "cert.log_conflicts=ON"}}
{{- if $.Values.mariadb.galera.debug }}
  {{- $_ := set $wsrepProviderOptions "debug" "debug=YES"}}
{{- else  }}
  {{- $_ := set $wsrepProviderOptions "debug" "debug=NO"}}
{{- end }}
{{- $_ := set $wsrepProviderOptions "ist.recv_addr" (printf "ist.recv_addr=${CONTAINER_IP}:%d" ((include "getNetworkPort" (dict "global" $ "type" "backend" "name" "ist")) | int)) }}
{{- $_ := set $wsrepProviderOptions "pc.wait_prim_timeout" (printf "pc.wait_prim_timeout=PT%dS" ($.Values.mariadb.galera.waitForPrimaryTimeoutInSeconds | default 30 | int)) }}
{{- if hasKey $.Values.mariadb.galera "gtidDomainIdCount" }}
  {{- if or (lt ($.Values.mariadb.galera.gtidDomainIdCount | int) 1) (gt ($.Values.mariadb.galera.gtidDomainIdCount | int) 2) }}
  fail "mariadb.galera.gtidDomainIdCount has to be 1 or 2"
  {{- end }}
{{- end }}
{{- if hasKey $.Values.mariadb.galera "gtidDomainId" }}
  {{- if or (lt ($.Values.mariadb.galera.gtidDomainId | int) 1) (gt ($.Values.mariadb.galera.gtidDomainId | int) 2) }}
  fail "mariadb.galera.gtidDomainId has to be 1 or 2"
  {{- end }}
{{- end }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "commonPrefix" $ }}-mariadb-my-cnf
  namespace: {{ $.Release.Namespace }}
data:
{{- range $int, $err := until ($.Values.replicas.database|int) }}
  my.cnf.{{ $nodeNamePrefix }}-{{ $int }}.tpl: |-
    [mysqld]
    {{- if $.Values.mariadb.performance_schema }}
    # performance monitoring
    performance_schema=ON
    performance-schema-instrument='stage/%=ON'
    performance-schema-consumer-events-stages-current=ON
    performance-schema-consumer-events-stages-history=ON
    performance-schema-consumer-events-stages-history-long=ON
    {{- else }}
    performance_schema=OFF
    {{- end }}
    skip-name-resolve=1
    max_connect_errors=4294967295 #to avoid failed connections because of loadbalancer health checks https://mariadb.com/kb/en/server-system-variables/#max_connect_errors
    log_warnings={{ $.Values.mariadb.errorLogWarningVerbosity | default 2 | int }}

    [mariadb]
    wsrep-provider=/usr/lib/libgalera_smm.so
    plugin_load_add = wsrep_info #https://mariadb.com/kb/en/wsrep_info-plugin/
    binlog_format=ROW
    max_binlog_size=104857600
    log-bin=/opt/${SOFTWARE_NAME}/{{ $.Values.mariadb.binLogDir | default "data" }}/{{ (required "mariadb.galera.clustername is required to configure the log-bin option for MariaDB" $.Values.mariadb.galera.clustername) }}_binlog
    expire_logs_days=1
    sync_binlog={{ $.Values.mariadb.binLogSync | default 0 | int }}
    default_storage_engine=InnoDB
    innodb_autoinc_lock_mode=2
    innodb_flush_log_at_trx_commit={{ $.Values.mariadb.innodbFlushLogAtTrxCommit | default 0 | int }}
    {{- if $.Values.mariadb.galera.gtidStrictMode }}
    gtid-strict-mode=1
    {{- else }}
    gtid-strict-mode=0
    {{- end }}
    {{- /* https://mariadb.com/kb/en/using-mariadb-gtids-with-mariadb-galera-cluster/#enabling-wsrep-gtid-mode */}}
    wsrep_gtid_mode=on
    wsrep_gtid_domain_id={{ (printf "%d%d%d%d%d" ($.Values.mariadb.galera.gtidDomainId | default 1 | int) 0 8 1 5) | int }}
    gtid_domain_id={{ (printf "%d%d%d%d%d" ($.Values.mariadb.galera.gtidDomainId | default 1 | int) $int 8 1 6) | int }}
    expire_logs_days=1
    wsrep-cluster-name={{ (required "mariadb.galera.clustername is required to configure the wsrep-cluster-name option for MariaDB" $.Values.mariadb.galera.clustername) | quote }}
    wsrep_cluster_address={{ include "wsrepClusterAddress" (dict "global" $) }}
    {{- $_ := set $wsrepProviderOptions "pc.weight" (printf "pc.weight=${PC_WEIGHT_%d}" $int)}}
    wsrep_provider_options={{ (join ";" (values $wsrepProviderOptions | sortAlpha)) }}
    wsrep_node_address=${CONTAINER_IP}
    wsrep_node_name={{ $nodeNamePrefix }}-{{ $int }}
    wsrep-on=1
    wsrep_log_conflicts=ON
    {{- if eq $.Values.mariadb.galera.logLevel "debug" }}wsrep_debug=1{{- end }}
    {{- if eq $.Values.mariadb.galera.sst_method "mariabackup" }}
      {{- $validateVar := (required "GALERA_SST_USERNAME env var required if mariabackup is enabled" (include "getEnvVar" (dict "global" $ "name" "GALERA_SST_USERNAME"))) }}
      {{- $validateVar := (required "GALERA_SST_PASSWORD env var required if mariabackup is enabled" (include "getEnvVar" (dict "global" $ "name" "GALERA_SST_PASSWORD"))) }}
    wsrep_sst_method=mariabackup
    wsrep_sst_auth=${GALERA_SST_USERNAME}:${GALERA_SST_PASSWORD}
    {{- end }}
    wsrep_slave_threads={{ $.Values.mariadb.galera.slaveThreads | default 4 | int }}
    wsrep_auto_increment_control=0
    {{- /*
      calculate the auto increment value based on amount of pod replicas * Galera domain count to ensure unique values across all database nodes in all connected clusters
      replicas(3) * DomainCount(2) = 6
      replicas(3) * DomainCount(1) = 3
      replicas(5) * DomainCount(2) = 10
      replicas(5) * DomainCount(1) = 5
    */}}
    auto_increment_increment={{ mul ($.Values.replicas.database|int) ($.Values.mariadb.galera.gtidDomainIdCount| default 1 | int) }}
    {{- /*
      calculate the auto increment offset based on ((Galera domain count - Galera domain id) * amount of pod replicas + (current replica number + 1)) to ensure unique values across all database nodes in all connected clusters
      (DomainCount(2) - domainId(2) * replicas(3) + (replica(0) + 1) = 1
      (DomainCount(2) - domainId(2) * replicas(3) + (replica(1) + 1) = 2
      (DomainCount(2) - domainId(2) * replicas(3) + (replica(2) + 1) = 3
      (DomainCount(2) - domainId(1) * replicas(3) + (replica(0) + 1) = 4
      (DomainCount(2) - domainId(1) * replicas(3) + (replica(1) + 1) = 5
      (DomainCount(2) - domainId(1) * replicas(3) + (replica(2) + 1) = 6

      (DomainCount(2) - domainId(2) * replicas(5) + (replica(0) + 1) = 1
      (DomainCount(2) - domainId(2) * replicas(5) + (replica(1) + 1) = 2
      (DomainCount(2) - domainId(2) * replicas(5) + (replica(2) + 1) = 3
      (DomainCount(2) - domainId(2) * replicas(5) + (replica(3) + 1) = 4
      (DomainCount(2) - domainId(2) * replicas(5) + (replica(4) + 1) = 5
      (DomainCount(2) - domainId(1) * replicas(5) + (replica(0) + 1) = 6
      (DomainCount(2) - domainId(1) * replicas(5) + (replica(1) + 1) = 7
      (DomainCount(2) - domainId(1) * replicas(5) + (replica(2) + 1) = 8
      (DomainCount(2) - domainId(1) * replicas(5) + (replica(3) + 1) = 9
      (DomainCount(2) - domainId(1) * replicas(5) + (replica(4) + 1) = 10
    */}}
    auto_increment_offset={{ (add (mul (sub ($.Values.mariadb.galera.gtidDomainIdCount| default 1 | int) ($.Values.mariadb.galera.gtidDomainId | default 1 | int)) ($.Values.replicas.database|int)) (add1 ($int | int))) | int }}

    # async replication with MariaDB instances outside of the Galera cluster
    relay_log=/opt/${SOFTWARE_NAME}/{{ $.Values.mariadb.binLogDir | default "data" }}/{{ (required "mariadb.galera.clustername is required to configure the relay_log option for MariaDB" $.Values.mariadb.galera.clustername) }}_relaylog
    {{- /* https://mariadb.com/kb/en/using-mariadb-replication-with-mariadb-galera-cluster-using-mariadb-replica/#setting-the-same-server_id-on-each-cluster-node */}}
    server_id={{ $.Values.mariadb.galera.gtidDomainId | default 1 | int }}
    log_slave_updates=on
    {{- if and ($.Values.mariadb.asyncReplication.autostart) ($.Values.mariadb.asyncReplication.enabled) }}
    wsrep_restart_slave=on
    {{- else }}
    wsrep_restart_slave=off
    {{- end }}
    report-host={{ $nodeNamePrefix }}-{{ $int }}
    slave-parallel-threads={{ $.Values.mariadb.asyncReplication.slaveReplicaThreads | default 1 | int }}
    binlog-commit-wait-count={{ $.Values.mariadb.asyncReplication.slaveReplicaThreads | default 0 | int }}

{{- end }}
