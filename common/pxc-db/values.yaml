---
# Default values for percona-xtradb-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Enable linkerd annotations for services, pods and other cluster resources
linkerd:
  enabled: true

# -- Enable owner_info injector chart dependency to allow installation as stand-alone chart
owner_info:
  enabled: false

# -- Name of the cluster
# This is used as base name for all resources created by the chart
# Example: test
# This creates PerconaXtraDBCluster with name test-db
name: null

# -- Enable internal TLS
# https://docs.percona.com/percona-operator-for-mysql/pxc/TLS.html
# NOTE: We don't use internal TLS by default, because linkerd mesh is preferred
tls:
  enabled: false

#  -- Various configuration options to prevent users from configuring a cluster with unsafe parameters.
# Translates to https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html#unsafe-flags-section
# Example:
# unsafeFlags:
#   pxcSize: false
#   proxySize: false
#   backupIfUnhealthy: false
unsafeFlags: {}

# -- Image used by kubernetes-entrypoint init container
kubernetes_entrypoint:
  image:
    name: kubernetes-entrypoint
    tag: v0.3.1

### InitDB configuration
# -- Use CRD to create application users and set their passwords
# Enabled by default
custom_users: true
# -- Enable the creation of a local-only root user `ccroot` without a password
ccroot_user:
  enabled: false
# -- List of databases to create
# Example:
# databases:
#   - test
databases: {}
# -- List of users to create
users: {}
#  backup:
#    name: backup
#    password: null
#    limits:
#      max_user_connections: 4
#    grants:
#      - ALL PRIVILEGES ON *.*
#  example:
#    name: example1 # This looks repetitive, but the point is that they key is the name
#                   # you refer to in your charts, while the field 'name' is the actual name
#                   # used as credentials. It should be possible to change the latter,
#                   # without having to change the first.
#    password: null # Causes users not be be created, and even maybe to get locked
#    auth_plugin: 'caching_sha2_password'  # 'mysql_native_password' is deprecated
#    grants:
#    - ALL ON example.*
### End of InitDB configuration

job:
  initdb:
    # -- Whether to enable the init-db job
    # @default -- true
    enabled: true
    # -- Define the image used by the init-db job
    # @default -- operator image
    image:
      name: percona/percona-xtradb-cluster-operator
      tag: 1.17.0-pxc8.0-backup-pxb8.0.35
    # -- Set default character set in init.sql
    character_set_server: utf8mb4
    # -- Set default collation in init.sql
    collation_server: utf8mb4_0900_ai_ci
    # -- Define the init-db job backoff limit
    # @default -- 1
    backoffLimit:
    # -- Define how the init-db job pod [will be restarted](https://kubernetes.io/docs/concepts/workloads/controllers/job/#handling-pod-and-container-failures) in case of an error.
    # It can be on the same worker node or another
    # @default -- Never
    jobRestartPolicy:
    # -- Define the priority class for the maintenance job pod
    # @default -- critical-infrastructure
    priority_class:
    # -- Define the resource requests and limits for init-db job
    resources:
      requests:
        # -- Define how much memory the MariaDB init-db job container will request
        # @default -- 128Mi
        memory:
        # -- Define how much CPU the MariaDB init-db job container will request
        # @default -- 0.5
        cpu:
      limits:
        # -- Define memory limit for the MariaDB init-db job container
        # @default -- 128Mi
        memory:
        # -- Define CPU limit for the MariaDB init-db job container
        # @default -- 0.5
        cpu:

# -- Default system-level Percona XtraDB Cluster users
# All credentials are mandatory
# See https://docs.percona.com/percona-operator-for-mysql/pxc/users.html#system-users
system_users:
  root:
    password: null
  xtrabackup:
    password: null
  monitor:
    password: null
  proxyadmin:
    password: null
  operator:
    password: null
  replication:
    password: null

# -- Options to ignore injected labels and annotations
# https://docs.percona.com/percona-operator-for-mysql/pxc/annotations.html#specifying-labels-and-annotations-ignored-by-the-operator
# -- List of ignored annotations
ignoreAnnotations: []
# -- List of ignored labels
ignoreLabels:
  - ccloud/service
  - ccloud/support-group

# -- Additional labels to apply to PerconaXtraDBCluster resource
# https://docs.percona.com/percona-operator-for-mysql/pxc/annotations.html
annotations: {}

# -- Pause/resume Percona XtraDB Cluster
# https://docs.percona.com/percona-operator-for-mysql/pxc/pause.html
pause: false

# -- The initContainer section in the custom resource
# Allows to override the image used by the initContainer and configure resources limits and requests
# https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html#initcontainer-configuration-section
initContainer:
  image:
    name: percona-xtradb-cluster-operator
    tag: 1.17.0
    override: null
  resources:
    requests:
      memory: 100M
      cpu: 100m
    limits:
      memory: 200M
      cpu: 200m

# -- Configuration of the mysqld-exporter sidecar container
# Provides prometheus metrics for the Percona XtraDB Cluster
metrics:
  enabled: true
  flags:
    - collect.binlog_size
    - collect.info_schema.processlist
    - collect.info_schema.query_response_time
    - collect.info_schema.innodb_tablespaces
  image:
    name: prom/mysqld-exporter
    tag: v0.17.2
    override: null

# -- Percona XtraDB Cluster statefulset configuration
pxc:
  size: 3
  image:
    name: percona/percona-xtradb-cluster
    tag: 8.0.41-32.1
    override: null
  imagePullPolicy: IfNotPresent
  annotations: {}
  labels:
    system: openstack
    type: database
  readinessProbes:
    initialDelaySeconds: 15
    timeoutSeconds: 15
    periodSeconds: 30
    successThreshold: 1
    failureThreshold: 5
  livenessProbes:
    initialDelaySeconds: 300
    timeoutSeconds: 5
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  containerSecurityContext:
    privileged: false
  podSecurityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
    supplementalGroups: [1001]
    fsGroupChangePolicy: "Always"
  # -- Expose cluster pods as separate services
  # https://docs.percona.com/percona-operator-for-mysql/pxc/expose.html#service-per-pod
  expose:
    enabled: true
    type: ClusterIP
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    annotations: {}
  # -- Automatic crash recovery
  # https://docs.percona.com/percona-operator-for-mysql/pxc/recovery.html#automatic-crash-recovery
  autoRecovery: true
  # -- Custom my.cnf configuration
  # https://docs.percona.com/percona-operator-for-mysql/pxc/options.html
  configuration:
    performance_schema: true
    options:
      skip-name-resolve: 1
      wsrep_provider_options: "gcache.size=1G; gcache.recover=yes"
      wsrep_applier_threads: 4
      wsrep_retry_autocommit: 3
      wsrep_sst_allowed_methods: "xtrabackup-v2,clone"
      pxc_strict_mode: MASTER  # default is ENFORCING
      binlog_format: ROW
      binlog_expire_logs_seconds: "345600"  # default 30 days -> 4 days
      max_binlog_size: "104857600"  # default 1G -> 100M
      sync_binlog: 1  # default value for PXC
      net_read_timeout: 120
      net_write_timeout: 300  # net_write_timeout limits the maximum size of binlog sent to mysqlbinlog, 180s is required for 1G binlog
      connect_timeout: 30
      wait_timeout: 3800
      interactive_timeout: 1800
      innodb_lock_wait_timeout: 30  # default 50 seconds -> 30 seconds
      max_connections: 1024
      max_connect_errors: "4294967295"  # to avoid failed connections because of loadbalancer health checks
      innodb_flush_log_at_trx_commit: 1  # for better performance set (2): write at commit, flush once per second
      innodb_flush_method: O_DIRECT
      innodb_file_per_table: 1
      innodb_autoinc_lock_mode: 2
      innodb_buffer_pool_size: 1024M
      innodb_log_file_size: 512M
      innodb_open_files: 4000
      innodb_stats_on_metadata: 0
      innodb_thread_concurrency: 0
      innodb_read_io_threads: 8
      innodb_write_io_threads: 8
      innodb_print_all_deadlocks: 1
      join_buffer_size: 4M
      log_bin_trust_function_creators: 1
      slow_query_log: 1
      long_query_time: 5
      log_error_suppression_list: "MY-010055,MY-013360"
  priority_class: "critical-infrastructure"
  # -- Advanced affinity configuration for PXC database pods
  # https://docs.percona.com/percona-operator-for-mysql/pxc/constraints.html#simple-approach-use-topologykey-of-the-percona-operator-for-mysql
  affinity:
    advanced:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
                - key: cloud.sap/maintenance-state
                  operator: In
                  values:
                    - operational
            weight: 1
          - preference:
              matchExpressions:
                - key: cloud.sap/deployment-state
                  operator: NotIn
                  values:
                    - reinstalling
            weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - "{{ .Values.name }}-db"
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - pxc
              topologyKey: topology.kubernetes.io/zone
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - "{{ .Values.name }}-db"
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - pxc
              topologyKey: kubernetes.io/hostname
  # -- Resource configuration for cluster pods
  resources:
    requests:
      memory: 1G
      cpu: 500m
    limits: {}
  # -- Storage configuration for cluster nodes
  persistence:
    enabled: true
    ## percona data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteOnce
    size: 10Gi

# -- HAProxy statefulset configuration
haproxy:
  enabled: true
  size: 2
  image:
    name: percona/haproxy
    tag: 2.8.14
    override: null
  imagePullPolicy: Always
  annotations: {}
  labels:
    system: openstack
    type: database-proxy
  readinessProbes:
    initialDelaySeconds: 15
    timeoutSeconds: 1
    periodSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  livenessProbes:
    initialDelaySeconds: 60
    timeoutSeconds: 5
    periodSeconds: 30
    successThreshold: 1
    failureThreshold: 4
  containerSecurityContext:
    privileged: false
  podSecurityContext:
    runAsUser: 1001
    runAsGroup: 1001
    fsGroup: 1001
    supplementalGroups: [1001]
  service:
    # -- Primary HAProxy service configuration
    # Exposes *only one* primary cluster member
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#haproxyexposeprimaryenabled
    primary:
      enabled: true
      type: ClusterIP
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      annotations: {}
    # --  Replicas HAPRoxy service configuration
    # Exposes *all* cluster members
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#haproxyexposereplicasenabled
    replicas:
      enabled: true
      type: ClusterIP
      externalTrafficPolicy: Cluster
      internalTrafficPolicy: Cluster
      annotations: {}
  priority_class: "critical-infrastructure"
  # -- Advanced affinity configuration for HAProxy pods
  # https://docs.percona.com/percona-operator-for-mysql/pxc/constraints.html#simple-approach-use-topologykey-of-the-percona-operator-for-mysql
  affinity:
    advanced:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
                - key: cloud.sap/maintenance-state
                  operator: In
                  values:
                    - operational
            weight: 1
          - preference:
              matchExpressions:
                - key: cloud.sap/deployment-state
                  operator: NotIn
                  values:
                    - reinstalling
            weight: 1
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - "{{ .Values.name }}-db"
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - haproxy
              topologyKey: topology.kubernetes.io/zone
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - "{{ .Values.name }}-db"
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - haproxy
              topologyKey: kubernetes.io/hostname
  # -- Resource configuration for HAProxy pods
  resources:
    requests:
      memory: 100M
      cpu: 500m
    limits: {}

## - Scheduled backup configuration
backup:
  enabled: false
  annotations: {}
  labels: {}
  image:
    name: percona/percona-xtradb-cluster-operator
    tag: 1.17.0-pxc8.0-backup-pxb8.0.35
    override: null
  imagePullPolicy: Always
  # -- The number of retries to make a backup
  backoffLimit: 2
  # -- The timeout value in seconds, after which backup job will automatically fail.
  activeDeadlineSeconds: 3600
  # -- Priority class for the backup job
  priority_class: "critical-infrastructure"
  # -- Resources configuration for the backup job
  resources:
    requests: {}
    limits: {}
  #  -- Environment variables for the backup job container
  containerOptions:
  # env:
  #   - name: VERIFY_TLS
  #     value: "false"
  # -- PiTR configuration
  # When enabled, operator creates a PiTR binlog-collector deployment
  pitr:
    enabled: false
    storageName: s3-backups-binlogs
    # -- Seconds between running the binlog uploader.
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backuppitrtimebetweenuploads
    timeBetweenUploads: 300
    # -- Timeout in seconds for the binlog to be uploaded
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backuppitrtimeoutseconds
    timeoutSeconds: 60
    # -- Priority class for the binlog-collector deployment
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupstoragesstorage-namepriorityclassname
    priority_class: "critical-infrastructure"
    # -- Resource configuration for a PiTR binlog-collector deployment
    resources:
      requests: {}
      limits: {}
  # -- S3 backup storage configuration
  s3:
    # -- General configuration, that is being deep copied to the custom resource
    #
    config:
      # -- S3 credential name
      # Default value should stay the same as the secret name created by the chart
      # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupstoragesstorage-names3credentialssecret
      credentialsSecret: "pxc-db-{{ .Values.name }}-backup-s3"
      # -- S3 region name
      # Default value is being taken from global variables
      # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupstoragesstorage-names3region
      region: "{{ .Values.global.region }}"
      # -- S3 API endpoint URL
      # This option must be set explicitly
      # Example: https://objectstore-3.REGION.DOMAIN
      # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupstoragesstorage-names3endpointurl
      endpointUrl: "https://objectstore-3.{{ .Values.global.region }}.{{ .Values.global.tld }}"
    # -- S3 credentials
    # This map is being used by the chart k8s secret creation
    secrets:
      aws_access_key_id: null
      aws_secret_access_key: null
    # -- S3 storages list
    # Contains bucket name for each type of storage and enables/disables value
    # The name of the storage adds backup configuration secrtion with `s3-backups` prefix
    # Example: s3-backups-daily
    # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupstoragesstorage-names3bucket
    storages:
      # -- Binlogs storage is being used by binglog-collector (PiTR)
      binlogs:
        enabled: true
        bucket: "pxc-backup-{{ .Values.global.region }}/binlogs/{{.Values.name}}/"
      # -- Daily backups storage is enabled by default
      daily:
        enabled: true
        bucket: "pxc-backup-{{ .Values.global.region }}/backups/{{ .Values.name }}/daily"
      # -- Hourly backups storage is disabled by default
      hourly:
        enabled: false
        bucket: "pxc-backup-{{ .Values.global.region }}/backups/{{ .Values.name }}/hourly"
      # -- Custom backup storage is supposed to be used for manual backups
      custom:
        enabled: false
        bucket: "pxc-backup-{{ .Values.global.region }}/backups/{{ .Values.name }}/custom"
  # -- Example of the backup schedule configuration
  schedule:
    - name: "daily-backup"
      # -- Scheduled time to make a backup specified in the crontab format .
      # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupscheduleschedule
      schedule: "0 0 * * *"
      # -- The amount of most recent backups to store. Older backups are automatically deleted.
      # https://docs.percona.com/percona-operator-for-mysql/pxc/operator.html?#backupschedulekeep
      keep: 5
      # -- The name of the storage for the backups configured in the storages subsection
      storageName: s3-backups-daily

# -- Default Prometheus alerts and rules.
alerts:
  enabled: true

  # Name of the Prometheus supposed to scrape the metrics and to which alerts are assigned.
  prometheus: openstack

  # The tier of the alert.
  tier: os

  # The support group label of the alerts. Must be given in values.yaml of parent chart.
  # support_group:

  # Configurable service label of the alerts. Defaults to `.Release.Name`.
  # service:
