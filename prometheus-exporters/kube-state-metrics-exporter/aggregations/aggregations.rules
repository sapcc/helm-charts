groups:
  - name: kube-state-metrics-normalization.rules
    rules:
      - record: kube_node_info_normalized
        expr: max by(cluster, region, cluster_type, container_runtime_version, kernel_version, kubelet_version, kubeproxy_version, node, os_image) (kube_node_info)

      - record: kube_node_status_condition_normalized
        expr: max by(cluster, region, cluster_type, node, condition, status) (kube_node_status_condition)

      - record: kube_pod_info_normalized
        expr: max by (region, cluster, cluster_type, namespace, pod, node) (kube_pod_info)

        # Join the node name to the kube_pod_info metric.
      - record: kube_pod_status_ready_normalized
        expr: max by(region, cluster, cluster_type, namespace, pod, condition) (kube_pod_status_ready) * on(pod, namespace) group_left(node) max by (pod, namespace, node) (kube_pod_info)

      - record: kube_pod_status_phase_normalized
        expr: max by(region, cluster, cluster_type, namespace, pod, node, phase) (kube_pod_status_phase) * on(pod, namespace) group_left(node) max by (node, namespace, pod) (kube_pod_info)

      - record: kube_pod_container_resource_requests_memory_bytes_average
        expr: |
            avg(
                count_over_time(kube_pod_container_resource_requests_memory_bytes{container!="",container!="POD", node!=""}[5m])
                *
                avg_over_time(kube_pod_container_resource_requests_memory_bytes{container!="",container!="POD", node!=""}[5m])
            ) by (namespace, container, pod, node, cluster)

      - record: kube_pod_container_resource_requests_cpu_cores_average
        expr: |
            avg(
                count_over_time(kube_pod_container_resource_requests_cpu_cores{container!="",container!="POD", node!=""}[5m])
                *
                avg_over_time(kube_pod_container_resource_requests_cpu_cores{container!="",container!="POD", node!=""}[5m])
            ) by (namespace, container, pod, node, cluster)

      - record: kube_persistentvolumeclaim_resource_requests_storage_bytes_average
        expr: |
            avg(kube_persistentvolumeclaim_info) by (persistentvolumeclaim, storageclass, namespace, volumename, cluster)
            *
            on (persistentvolumeclaim, namespace, cluster) group_right(storageclass, volumename)
            sum(kube_persistentvolumeclaim_resource_requests_storage_bytes) by (persistentvolumeclaim, namespace, cluster)
