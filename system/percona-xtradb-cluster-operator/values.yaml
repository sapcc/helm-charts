---
pxc-operator:
  # Default values for pxc-operator.
  # This is a YAML-formatted file.
  # Declare variables to be passed into your templates.


  replicaCount: 1

  operatorImageRepository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/percona/percona-xtradb-cluster-operator
  imagePullPolicy: IfNotPresent
  image: ""

  # set if you want to specify a namespace to watch
  # defaults to `.Release.namespace` if left blank
  # multiple namespaces can be specified and separated by comma
  # watchNamespace:
  # set if you want that watched namespaces are created by helm
  # createNamespace: false

  # set if operator should be deployed in cluster wide mode. defaults to false
  watchAllNamespaces: true

  # rbac: settings for deployer RBAC creation
  rbac:
    # rbac.create: if false RBAC resources should be in place
    create: true

  # serviceAccount: settings for Service Accounts used by the deployer
  serviceAccount:
    # serviceAccount.create: Whether to create the Service Accounts or not
    create: true

  # set if you want to use a different operator name
  # defaults to `percona-xtradb-cluster-operator`
  # operatorName:

  imagePullSecrets: []
  nameOverride: "percona-xtradb-cluster-operator"
  fullnameOverride: "percona-xtradb-cluster-operator"

  resources:
    limits:
      cpu: 2000m
      memory: 500Mi
    requests:
      cpu: 100m
      memory: 20Mi

  containerSecurityContext: {}

  nodeSelector: {}

  tolerations: []

  affinity:
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - preference:
          matchExpressions:
          - key: cloud.sap/maintenance-state
            operator: In
            values:
            - operational
        weight: 1
      - preference:
          matchExpressions:
          - key: cloud.sap/deployment-state
            operator: NotIn
            values:
            - reinstalling
        weight: 1

  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8080"
    prometheus.io/targets: "openstack"
    linkerd.io/inject: enabled

  logStructured: true
  logLevel: "INFO"
  disableTelemetry: true

  extraEnvVars:
    - name: CC_FIX_PERMISSIONS
      value: "true"

alerts:
  enabled: true

kube-state-metrics:
  image:
    registry: keppel.global.cloud.sap/ccloud-registry-k8s-io-mirror
    repository: kube-state-metrics/kube-state-metrics
  rbac:
    create: true  # NOTE: need to create a custom role instead with access only to custom resources
    extraRules:
      - apiGroups: ["pxc.percona.com"]
        resources:
          - "perconaxtradbclusters"
          - "perconaxtradbclusterbackups"
          - "perconaxtradbclusterrestores"
        verbs:
          - "list"
          - "watch"

  customLabels:
    app: kube-state-metrics

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

  selfMonitor:
    enabled: true

  collectors: null

  extraArgs:
    - --custom-resource-state-only=true
  customResourceState:
    enabled: true
    config:
      kind: CustomResourceStateMetrics
      spec:
        resources:
          - groupVersionKind:
              group: pxc.percona.com
              version: v1
              kind: PerconaXtraDBCluster
            labelsFromPath:
              "*": ["metadata", "labels"]
              name: ["metadata", "name"]
              namespace: ["metadata", "namespace"]
            metrics:
              - name: perconaxtradbcluster_info
                help: "Exposes details about the configuration of PerconaXtraDBCluster: CR version and PXC version"
                each:
                  type: Info
                  info:
                    labelsFromPath:
                      pxc_version: ["status", "pxc", "version"]
                      cr_version: ["spec", "crVersion"]
              - name: perconaxtradbcluster_created
                help: "Exposes the creation date of this cluster"
                each:
                  type: Gauge
                  gauge:
                    path: ["metadata", "creationTimestamp"]
              - name: perconaxtradbcluster_status
                help: "Status of PerconaXtraDBCluster"
                each:
                  type: StateSet
                  stateSet:
                    labelName: state
                    path: ["status", "state"]
                    list:
                      - "unknown"
                      - "initializing"
                      - "paused"
                      - "stopping"
                      - "ready"
                      - "error"
              - name: perconaxtradbcluster_pxc_status
                help: "Status of PerconaXtraDBCluster PXC component"
                each:
                  type: StateSet
                  stateSet:
                    labelName: state
                    path: ["status", "pxc", "status"]
                    list:
                      - "unknown"
                      - "initializing"
                      - "paused"
                      - "stopping"
                      - "ready"
                      - "error"
              - name: perconaxtradbcluster_pxc_size
                help: "Total size of PerconaXtraDBCluster"
                each:
                  type: Gauge
                  gauge:
                    path: ["status", "pxc", "size"]
              - name: perconaxtradbcluster_pxc_ready
                help: "Number of ready PXC nodes in the cluster"
                each:
                  type: Gauge
                  gauge:
                    path: ["status", "pxc", "ready"]
          - groupVersionKind:
              group: pxc.percona.com
              version: v1
              kind: PerconaXtraDBClusterBackup
            labelsFromPath:
              "*": ["metadata", "labels"]
              name: ["metadata", "name"]
              namespace: ["metadata", "namespace"]
            metrics:
              - name: perconaxtradbclusterbackup_info
                help: "Information about PerconaXtraDBClusterBackup"
                each:
                  type: Info
                  info:
                    labelsFromPath:
                      "*": ["status", "s3"]
              - name: perconaxtradbclusterbackup_created
                help: "Creation timestamp of the backup"
                each:
                  type: Gauge
                  gauge:
                    path: ["metadata", "creationTimestamp"]
              - name: perconaxtradbclusterbackup_completed
                help: "Completion timestamp of the backup"
                each:
                  type: Gauge
                  gauge:
                    path: ["status", "completed"]
              - name: perconaxtradbclusterbackup_status
                help: "Status of PerconaXtraDBClusterBackup"
                each:
                  type: StateSet
                  stateSet:
                    labelName: state
                    path: ["status", "state"]
                    list:
                      - ""              # BackupNew
                      - "Starting"
                      - "Running"
                      - "Failed"
                      - "Succeeded"

  # collect metrics from ALL namespaces
  namespaces: ""

  # deploy a ServiceMonitor so the metrics are collected by Prometheus
  prometheus:
    monitor:
      enabled: true

owner-info:
  support-group: network-api
  maintainers:
    - Vladislav Gusev
    - Bashar Alkhateeb
    - Birk Bohne
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/system/percona-xtradb-cluster-operator
