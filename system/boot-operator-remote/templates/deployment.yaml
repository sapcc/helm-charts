apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boot-operator-remote.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
  {{- include "boot-operator-remote.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controllerManager.replicas }}
  strategy:
    type: {{ .Values.controllerManager.strategy.type | quote }}
  selector:
    matchLabels:
      app.kubernetes.io/name: boot-operator
      control-plane: controller-manager
    {{- include "boot-operator-remote.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: boot-operator
        control-plane: controller-manager
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-private-networks: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.resources.gardener.cloud/to-all-istio-ingresses-istio-ingressgateway-tcp-9443: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
      {{- include "boot-operator-remote.selectorLabels" . | nindent 8 }}
      annotations:
        kubectl.kubernetes.io/default-container: manager
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: {{ quote .Values.controllerManager.manager.env.kubernetesServiceHost }}
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 8082
          name: ipxe
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources: {{- toYaml .Values.controllerManager.manager.resources | nindent 10
          }}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: remote-kubeconfig
          readOnly: true
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: default
      terminationGracePeriodSeconds: 10
      volumes:
      - name: remote-kubeconfig
        secret:
          items:
          - key: token
            path: token
          - key: bundle.crt
            path: ca.crt
          secretName: boot-operator-remote-kubeconfig
