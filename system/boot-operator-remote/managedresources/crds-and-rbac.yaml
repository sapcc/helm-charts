---
# Source: boot-operator/templates/rbac/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-controller-manager
  namespace: kube-system
---
# Source: boot-operator/templates/crd/boot.ironcore.dev_httpbootconfigs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: httpbootconfigs.boot.ironcore.dev
spec:
  group: boot.ironcore.dev
  names:
    kind: HTTPBootConfig
    listKind: HTTPBootConfigList
    plural: httpbootconfigs
    singular: httpbootconfig
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: HTTPBootConfig is the Schema for the httpbootconfigs API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: HTTPBootConfigSpec defines the desired state of HTTPBootConfig
              properties:
                ignitionSecretRef:
                  description: IgnitionSecretRef is a reference to the secret containing Ignition configuration.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                systemIPs:
                  description: SystemIPs is a list of IP addresses assigned to the server.
                  items:
                    type: string
                  type: array
                systemUUID:
                  description: SystemUUID is the unique identifier (UUID) of the server.
                  type: string
                ukiURL:
                  description: UKIURL is the URL where the UKI (Unified Kernel Image) is hosted.
                  type: string
              type: object
            status:
              description: HTTPBootConfigStatus defines the observed state of HTTPBootConfig
              properties:
                state:
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: boot-operator/templates/crd/boot.ironcore.dev_ipxebootconfigs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: ipxebootconfigs.boot.ironcore.dev
spec:
  group: boot.ironcore.dev
  names:
    kind: IPXEBootConfig
    listKind: IPXEBootConfigList
    plural: ipxebootconfigs
    singular: ipxebootconfig
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: IPXEBootConfig is the Schema for the ipxebootconfigs API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: IPXEBootConfigSpec defines the desired state of IPXEBootConfig
              properties:
                ignitionSecretRef:
                  description: IgnitionSecretRef is a reference to the secret containing the Ignition configuration.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                image:
                  description: Image is deprecated and will be removed.
                  type: string
                initrdURL:
                  description: InitrdURL is the URL where the Initrd (initial RAM disk) of the OS is hosted, eg. the URL to the Initrd layer of the OS OCI image.
                  type: string
                ipxeScriptSecretRef:
                  description: IPXEScriptSecretRef is a reference to the secret containing the custom IPXE script.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                ipxeServerURL:
                  description: IPXEServerURL is deprecated and will be removed.
                  type: string
                kernelURL:
                  description: KernelURL is the URL where the kernel of the OS is hosted, eg. the URL to the Kernel layer of the OS OCI image.
                  type: string
                squashfsURL:
                  description: SquashfsURL is the URL where the Squashfs of the OS is hosted, eg.  the URL to the Squashfs layer of the OS OCI image.
                  type: string
                systemIPs:
                  description: SystemIPs is a list of IP addresses assigned to the server.
                  items:
                    type: string
                  type: array
                systemUUID:
                  description: SystemUUID is the unique identifier (UUID) of the server.
                  type: string
              type: object
            status:
              description: IPXEBootConfigStatus defines the observed state of IPXEBootConfig
              properties:
                state:
                  description: 'Important: Run "make" to regenerate code after modifying this file'
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: boot-operator/templates/rbac/auth_proxy_client_clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-metrics-reader
rules:
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/auth_proxy_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: proxy-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: boot-operator/templates/rbac/httpbootconfig_editor_role.yaml
# permissions for end users to edit httpbootconfigs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: httpbootconfig-editor-role
rules:
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs/status
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/httpbootconfig_viewer_role.yaml
# permissions for end users to view httpbootconfigs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: httpbootconfig-viewer-role
rules:
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs/status
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/ipxebootconfig_editor_role.yaml
# permissions for end users to edit ipxebootconfigs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: ipxebootconfig-editor-role
rules:
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - ipxebootconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - ipxebootconfigs/status
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/ipxebootconfig_viewer_role.yaml
# permissions for end users to view ipxebootconfigs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: ipxebootconfig-viewer-role
rules:
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - ipxebootconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - ipxebootconfigs/status
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/metrics_auth_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-metrics-auth-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: boot-operator/templates/rbac/metrics_reader_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-metrics-reader
rules:
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: boot-operator/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfig
      - ipxebootconfig
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfig/status
      - ipxebootconfig/status
    verbs:
      - get
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs
      - ipxebootconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs/finalizers
      - ipxebootconfigs/finalizers
    verbs:
      - update
  - apiGroups:
      - boot.ironcore.dev
    resources:
      - httpbootconfigs/status
      - ipxebootconfigs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations
      - servers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations/finalizers
    verbs:
      - update
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations/status
    verbs:
      - get
      - patch
      - update
---
# Source: boot-operator/templates/rbac/auth_proxy_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: proxy-role
subjects:
  - kind: ServiceAccount
    name: boot-operator-controller-manager
    namespace: kube-system
---
# Source: boot-operator/templates/rbac/metrics_auth_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: boot-operator-metrics-auth-role
subjects:
  - kind: ServiceAccount
    name: boot-operator-controller-manager
    namespace: kube-system
---
# Source: boot-operator/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  name: boot-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: boot-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: boot-operator-controller-manager
    namespace: kube-system
---
# Source: boot-operator/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  namespace: kube-system
  name: boot-operator-leader-election-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: boot-operator/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-3364588-crds"
    app.kubernetes.io/name: boot-operator
    app.kubernetes.io/instance: boot-operator
    app.kubernetes.io/managed-by: Helm
  namespace: kube-system
  name: boot-operator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: boot-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: boot-operator-controller-manager
    namespace: kube-system
