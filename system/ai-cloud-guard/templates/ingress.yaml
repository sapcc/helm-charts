---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: end-user-rule
  annotations:
    disco: "true"
    kubernetes.io/tls-acme: "true"
{{ toYaml .Values.aicloudguard.ingress.annotations | indent 4 }}
{{- $hostname :=  print .Release.Name "." .Values.aicloudguard.domain }}
spec:
  rules:
    - host: {{ $hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ai-cloud-guard
                port:
                  name: webhook
  tls:
    - hosts: [{{ $hostname }}]
      secretName: tls-{{ .Release.Name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager-rule
  annotations:
    disco: "true"
    kubernetes.io/tls-acme: "true"
    ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-secret: {{ required ".Values.aicloudguard.secrets.name missing" .Values.aicloudguard.secrets.name }}
    nginx.ingress.kubernetes.io/auth-secret: {{ required ".Values.aicloudguard.secrets.name missing" .Values.aicloudguard.secrets.name }}
{{- $hostname :=  print .Release.Name "-backoffice." .Values.aicloudguard.domain }}
spec:
  rules:
    - host: {{ $hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ai-cloud-guard
                port:
                  name: webhook
  tls:
    - hosts: [{{ $hostname }}]
      secretName: tls-{{ .Release.Name }}-backoffice
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: slack-rule
  annotations:
    disco: "true"
    kubernetes.io/tls-acme: "true"
{{- $hostname :=  print .Release.Name "-slack." .Values.aicloudguard.domain }}
spec:
  rules:
    - host: {{ $hostname }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: ai-cloud-guard
                port:
                  name: webhook
  tls:
    - hosts: [{{ $hostname }}]
      secretName: tls-{{ .Release.Name }}-slack
