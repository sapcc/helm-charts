apiVersion: apps/v1
kind: Deployment
metadata:
  name: secrets-injector
  namespace: {{ .Release.Namespace }}
  labels:
    app: secrets-injector
spec:
  selector:
    matchLabels:
      app: secrets-injector
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: secrets-injector
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: secrets-injector
        prometheus.io/scrape: "true"
        prometheus.io/targets: kubernetes
        {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      serviceAccountName: secrets-injector
      containers:
      - image: "{{required ".Values.global.registry is missing" .Values.global.registry }}/{{ .Values.image.repository }}:{{required ".Values.image.tag is missing" .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: secrets-injector
        command: ["/secrets-injector"]
        args:
        - -cert-path=/certs
        env:
        {{ range $index, $account := .Values.config.accounts -}}
        - name: VAULT_ROLE_ID_{{- $index }}
          valueFrom:
            secretKeyRef:
              name: secrets-injector
              key: VAULT_ROLE_ID_{{- $index }}
        - name: VAULT_SECRET_ID_{{- $index }}
          valueFrom:
            secretKeyRef:
              name: secrets-injector
              key: VAULT_SECRET_ID_{{- $index }}
        {{ end -}}
        volumeMounts:
        - name: certificate
          mountPath: "/certs"
          readOnly: true
        - name: config
          mountPath: "/config"
          readOnly: true
        ports:
        - name: metrics
          containerPort: 8080
        - name: webhook
          containerPort: 9443
      {{ if ne .Values.topologyKey "" -}}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - secrets-injector
            topologyKey: {{ .Values.topologyKey }}
      {{ end -}}
      volumes:
        - name: certificate
          secret:
            secretName: secrets-injector-server-cert
        - name: config
          configMap:
            name: secrets-injector
