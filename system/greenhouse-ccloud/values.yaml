mappedOrgAdminIdPGroup:

# enabeling pluginPreset.enabled will render PluginPresest
# These will deploy DigiCert Issuer, CertManager, KubeMonitoring to 
# all Clusters with label greenhouse.sap/cluster-presets-enabled: "true"
pluginPreset:
  enabled: false

teams: {}
  # team1:
  #   description: Team number 1
  #   mappedIdPGroup: Identity provider group name.
  #   isSupportGroup: true|false

teamRoleBindings:
  []
  # - teamRef: team1
  #   teamRoleRef: role1
  #   clusterSelector:
  #     matchLabels:
  #       cluster-type: compute
  #       environment: production
  #   namespaces: # optional, for namespace'd access instead of cluster-wide
  #     - kube-system

oidc:
  issuer:
  redirectURL:
  clientID:
  clientSecret:
scim:
  enabled: false
  # baseURL: 
  # username:
  # password

alerts:
  enabled: false
  # Supernova options
  filterLabels:
    - app
    - cluster
    - cluster_type
    - context
    - job
    - region
    - service
    - severity
    - status
    - support_group
    - tier
    - type
  silenceExcludedLabels:
    - pod
    - pod_name
    - instance
  predefinedFilters:
    - name: "prod"
      displayName: "Prod"
      matchers:
        region: "^(?!qa-de-).*"
    - name: "prod-qa"
      displayName: "Prod + QA"
      matchers:
        region: "^(?!qa-de-(?!1$)\\d+).*"
    - name: "labs"
      displayName: "Labs"
      matchers:
        region: "^qa-de-(?!1$)\\d+"
    - name: "all"
      displayName: "All"
      matchers:
        region: ".*"
  # silenceTemplates: --> defined in the _silence.conf.tpl

  # Alertmanager options.
  alertmanager:
    # Do not deploy the alertmanager.
    enabled: false
    hosts: []

digicert:
  enabled: false
  provisioner:
    apiToken:
    organizationID:
    # organizationUnits:
      # - OrgName

kubeconfigGenerator:
  enabled: false
  oidc:
    clientID:
    clientSecret:
  swift:
    username:
    domain:
    projectID:
    container:
    region:
    password:

kubeMonitoring:
  enabled: false
  ssoCert:
  ssoKey:
  cephClusters:
    st1-qa-de-1:
      thanos: true
    st1-eu-de-2:
      thanos: true
    st1-na-us-2:
      thanos: true
  computeClusters:
    cc273-qa-de-1:
      thanos: false
    cc274-qa-de-1:
      thanos: false
    cc275-qa-de-1:
      thanos: false

openTelemetry:
  enabled: false
# set via secrets
  # prometheus:
  # clusters:
    # - region:
    #   cluster:
    #   username:
    #   password:
    #   endpoint:
  logsCollector:
    enabled: true
  metricsCollector:
    enabled: true
  prometheus:
    podMonitor:
      enabled: true
    serviceMonitor:
      enabled: true
  admissionWebhooks:
    certManager: 
      enabled: false
    autoGenerateCert:
      enabled: true
      recreate: false
  kubeRBACProxy:
    enabled: false
  manager:
    prometheusRule:
      defaultRules:
        enabled: false
      enabled: false
  
thanos:
  enabled: false

logshipping:
  # clusters:
# only specify username & password on the first cluster if multiple in the same region use the same creds
    # - region:
    #   cluster:
    #   username:
    #   password:
teams2slack:
  displayName: Slack
  enabled: false
  dryRun: false
  endpoint:
  infoChannelID:
  slackToken:
  groupNamePrefix: CCloud
  groupNameSuffix: greenhouse-team

doop:
  enabled: false
  displayName: Violations
  apiEndpoint:
  showDebugSeverities: false

doopKubernikus:
  enabled: false
  displayName: Kubernikus
  apiEndpoint:
  showDebugSeverities: false

heureka:
  enabled: false
  displayName: Heureka
  apiEndpoint:
