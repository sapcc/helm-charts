{{- if and .Values.kubeMonitoring.enabled .Values.pluginPreset.enabled -}}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Chart.Name }}-prometheus-sso-cert
  namespace: {{ .Release.Namespace }}
data:
  tls.crt: {{ required ".Values.kubeMonitoring.ssoCert missing" .Values.kubeMonitoring.ssoCert | b64enc }}
  tls.key: {{ required ".Values.kubeMonitoring.ssoKey missing" .Values.kubeMonitoring.ssoKey | b64enc }}
---
apiVersion: greenhouse.sap/v1alpha1
kind: PluginPreset
metadata:
  name: kube-monitoring
  namespace: {{ .Release.Namespace }}
spec:
  clusterOptionOverrides:
  {{- range $cluster, $thanos := .Values.kubeMonitoring.cephClusters }}
  - clusterName: {{ $cluster }}
    overrides:
    - name: global.commonLabels
      value:
        service: ceph
        support_group: storage
    - name: kubeMonitoring.prometheus.prometheusSpec.externalLabels
      value:
        cluster: '{{ "{{ .Values.global.greenhouse.clusterName }}" }}'
        cluster_type: storage
        organization: ccloud
        region: '{{ "{{ .Values.global.greenhouse.clusterName | trunc -7 }}" }}'
    - name: kubeMonitoring.prometheus.prometheusSpec.externalUrl
      value: '{{ "https://prometheus.st1.{{ .Values.global.greenhouse.clusterName | trunc -7 }}.cloud.sap" }}'
    - name: kubeMonitoring.kube-state-metrics.prometheus.monitor.http.metricRelabelings
      value:
      - action: replace
        regex: .*
        replacement: {{ $cluster }}
        sourceLabels:
        - __name__
        targetLabel: cluster
    # NFS volumes need more permissions to work
    - name: kubeMonitoring.prometheus.prometheusSpec.securityContext
      value:
        fsGroup: 0
        runAsNonRoot: false
        runAsUser: 0
  {{- if index $thanos "thanos" }}
    - name: kubeMonitoring.prometheus.prometheusSpec.thanos.objectStorageConfig.existingSecret.name
      value: thanos-{{ $cluster }}-metrics-objectstore
    - name: kubeMonitoring.prometheus.prometheusSpec.thanos.objectStorageConfig.existingSecret.key
      value: thanos.yaml
  {{- end }}
  {{- end }}
  {{- range $cluster, $thanos := .Values.kubeMonitoring.computeClusters }}
  - clusterName: {{ $cluster }}
    overrides:
    - name: global.commonLabels
      value:
        service: kvm
    - name: kubeMonitoring.prometheus.prometheusSpec.externalLabels
      value:
        cluster: '{{ "{{ .Values.global.greenhouse.clusterName }}" }}'
        cluster_type: compute
        organization: ccloud
        region: '{{ "{{ .Values.global.greenhouse.clusterName | trunc -7 }}" }}'
    - name: kubeMonitoring.kube-state-metrics.prometheus.monitor.http.metricRelabelings
      value:
      - action: replace
        regex: .*
        replacement: {{ $cluster }}
        sourceLabels:
        - __name__
        targetLabel: cluster
  {{- end }}
  {{- range $cluster, $thanos := .Values.kubeMonitoring.obsClusters }}
  - clusterName: {{ $cluster }}
    overrides:
    - name: global.commonLabels
      value:
        service: observability
    - name: kubeMonitoring.prometheus.prometheusSpec.externalLabels
      value:
        cluster: '{{ "{{ .Values.global.greenhouse.clusterName }}" }}'
        cluster_type: observability
        organization: ccloud
        region: '{{ "{{ .Values.global.greenhouse.clusterName | trunc -7 }}" }}'
    - name: kubeMonitoring.kube-state-metrics.prometheus.monitor.http.metricRelabelings
      value:
      - action: replace
        regex: .*
        replacement: {{ $cluster }}
        sourceLabels:
        - __name__
        targetLabel: cluster
  {{- if index $thanos "thanos" }}
    - name: kubeMonitoring.prometheus.prometheusSpec.thanos.objectStorageConfig.existingSecret.name
      value: thanos-{{ $cluster }}-metrics-objectstore
    - name: kubeMonitoring.prometheus.prometheusSpec.thanos.objectStorageConfig.existingSecret.key
      value: thanos.yaml
  {{- end }}
  {{- end }}
  clusterSelector:
    matchExpressions:
    - key: greenhouse.sap/pluginpreset
      operator: In
      values:
      - "true"
    - key: cluster-type
      operator: In
      values:
      - "storage"
      - "compute"
      - "observability"
  plugin:
    disabled: false
    optionValues:
    - name: alerts.alertmanagers.hosts
      value:
      - alertmanager-internal.scaleout.eu-de-1.cloud.sap
      - alertmanager-internal.scaleout.eu-nl-1.cloud.sap
    - name: alerts.alertmanagers.tlsConfig.cert
      valueFrom:
        secret:
          key: tls.crt
          name: {{ .Chart.Name }}-prometheus-sso-cert
    - name: alerts.alertmanagers.tlsConfig.key
      valueFrom:
        secret:
          key: tls.key
          name: {{ .Chart.Name }}-prometheus-sso-cert
    - name: alerts.enabled
      value: true
    - name: kubeMonitoring.defaultRules.create
      value: true
    - name: kubeMonitoring.defaultRules.additionalRuleLabels
      value:
        service: metrics
        support_group: observability
    - name: kubeMonitoring.customRules
      value:
        PrometheusBadConfig:
          severity: warning
        PrometheusRemoteStorageFailures:
          severity: warning
        PrometheusRemoteWriteBehind:
          severity: warning
        PrometheusRuleFailures:
          severity: warning
        PrometheusTargetSyncFailure:
          severity: warning
        PrometheusErrorSendingAlertsToAnyAlertmanager:
          severity: warning
    - name: kubeMonitoring.prometheus.prometheusSpec.retention
      value: 30d
    - name: kubeMonitoring.prometheus.prometheusSpec.storageSpec.volumeClaimTemplate.spec.resources.requests.storage
      value: 100Gi
    pluginDefinition: kube-monitoring
    releaseNamespace: kube-monitoring
{{- end -}}
