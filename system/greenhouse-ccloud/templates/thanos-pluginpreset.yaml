{{- if .Values.thanos.enabled -}}
apiVersion: greenhouse.sap/v1alpha1
kind: PluginPreset
metadata:
  name: thanos
  namespace: ccloud
spec:
  clusterOptionOverrides:
  {{- range $plugin := .Values.ingressPlugins }}
  {{- $ingressDomain := trimSuffix "." (trimPrefix "ingress." $plugin.recordName) }}
  - clusterName: {{ $plugin.cluster }}
    overrides:
    - name: thanos.query.ingress.grpc.hosts
      value:
        - host: "thanos-grpc.{{ $ingressDomain }}"
          paths:
            - path: /
              pathType: ImplementationSpecific
    - name: thanos.query.ingress.grpc.tls
      value:
        - hosts:
            - "thanos-grpc.{{ $ingressDomain }}"
          secretName: {{ printf "tls-thanos-grpc-%s" $ingressDomain | replace "." "-" }}
  {{- end }}
  clusterSelector:
    matchExpressions:
    - key: greenhouse.sap/pluginpreset
      operator: In
      values:
      - "true"
    - key: cluster
      operator: In
      values:
{{- range $cluster, $additionalSettings := .Values.kubeMonitoring.cephClusters }}
    {{- if index $additionalSettings "thanos" }}
      - {{ $cluster }}
    {{- end }}
{{- end }}
{{- range $cluster, $additionalSettings := .Values.kubeMonitoring.computeClusters }}
    {{- if index $additionalSettings "thanos" }}
      - {{ $cluster }}
    {{- end }}
{{- end }}
{{- range $cluster, $additionalSettings := .Values.kubeMonitoring.obsClusters }}
    {{- if index $additionalSettings "thanos" }}
      - {{ $cluster }}
    {{- end }}
{{- end }}
  plugin:
    disabled: false
    displayName: Thanos
    pluginDefinition: thanos
    releaseNamespace: kube-monitoring
    optionValues:
    {{- if and .Values.global.quayIoMirror .Values.global.ghcrIoMirror .Values.global.dockerHubMirror }}
    - name: thanos.image.repository
      value: {{ printf "%s/thanos/thanos" .Values.global.quayIoMirror }}
    - name: thanos.initChownData.image.registry
      value: {{ .Values.global.dockerHubMirror }}
    - name: testFramework.image.registry
      value: {{ .Values.global.ghcrIoMirror }}
    {{- end }}
    - name: thanos.ruler.enabled
      value: false
    - name: thanos.ruler.alertmanagers.enabled
      value: true
    - name: thanos.ruler.alertmanagers.authentication.ssoCert
      valueFrom:
        secret:
          key: tls.crt
          name: tls-ccloud-prometheus-auth
    - name: thanos.ruler.alertmanagers.authentication.ssoKey
      valueFrom:
        secret:
          key: tls.key
          name: tls-ccloud-prometheus-auth
    - name: thanos.query.ingress.grpc.annotations
      value:
        disco: "true"
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/backend-protocol: GRPC
        nginx.ingress.kubernetes.io/ssl-redirect: "true"
    - name: thanos.query.ingress.grpc.enabled
      value: true
    - name: thanos.query.ingress.grpc.ingressClassName
      value: nginx
{{- end -}}
