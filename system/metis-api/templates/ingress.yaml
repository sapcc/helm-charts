{{- if .Values.metisAPI.enabled }}

apiVersion: networking.k8s.io/v1
kind: Ingress

metadata:
  name:  metis-api
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "labels" . | indent 4 }}
  annotations:
    kubernetes.io/tls-acme: "true"
    disco: "true"
    ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    nginx.ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    ingress.kubernetes.io/auth-tls-verify-client: optional
    nginx.ingress.kubernetes.io/auth-tls-verify-client: optional
    ingress.kubernetes.io/auth-tls-verify-depth: "3"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
    {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
    ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
    {{- end }}

spec:
  tls:
    - secretName: metis-api-tls
      hosts: [metis.{{ .Values.global.region }}.{{ .Values.global.tld }}]
  rules:
    - host: metis.{{ .Values.global.region }}.{{ .Values.global.tld }}
      http:
        paths:
        - path: /v1
          pathType: Prefix
          backend:
            service:
              name: metis-api
              port:
                name: http
        - path: /healthcheck
          pathType: Exact
          backend:
            service:
              name: metis-api
              port:
                name: http
{{- end }}
