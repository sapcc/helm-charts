kind: Deployment
apiVersion: apps/v1
metadata:
  name: opensearch-hermes-manager
  namespace: hermes
  labels:
    system: opensearch-hermes
    service: audit
    component: opensearch-hermes-manager
    role: manager

spec:
  replicas: 1
  selector:
    matchLabels:
      component: opensearch-hermes-manager
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        component: opensearch-hermes-manager
        role: manager
      annotations:
        kubectl.kubernetes.io/default-container: "manager"
        checksum/application.conf.tpl: {{ include  (print $.Template.BasePath "/_application.conf.tpl") . | sha256sum }}
        {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
        linkerd.io/inject: enabled
        {{- end }}
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: manager-config
          configMap:
            name: opensearch-hermes-manager-configmap
        - name: manager-secret
          secret:
            defaultMode: 420
            secretName: manager-secret
        - name: opensearch-certs
          secret:
            defaultMode: 420
            secretName: certs
      containers:
      - name: manager
        image: {{.Values.global.registry}}/elk-elasticsearch-manager:{{.Values.image_version}}
        imagePullPolicy: IfNotPresent
{{- if .Values.global.truststore.enabled}}
        command: ["/bin/bash", "/start.sh"]
{{ else }}
        command:
          - /opt/cerebro/bin/cerebro
        args:
          - -Dconfig.file=/manager-config/application.conf
          - -Dlogback.configurationFile=/manager-config/logback.xml
          - -Dlogger.file=/manager-config/logback.xml
          - -Dcom.sun.jndi.ldap.object.disableEndpointIdentification=true
          - -Des.networkaddress.cache.ttl=20
{{- end }}
        env:
          - name: NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
{{- if .Values.global.truststore.enabled}}
          - name: TRUSTSTORE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: manager-secret
                key: TRUSTSTORE_PASSWORD
{{- end }}
        volumeMounts:
          - mountPath: /manager-config/logback.xml
            name: manager-config
            subPath: logback.xml
          - mountPath: /manager-config/application.conf
            name: manager-secret
            subPath: application.conf
{{- if .Values.global.truststore.enabled}}
          - mountPath: /truststore/truststore.crypt
            name: manager-secret
            subPath: truststore.crypt
          - mountPath: /start.sh
            name: manager-config
            subPath: start.sh
{{ else }}
          - mountPath: /opt/certs
            name: opensearch-certs
{{- end }}
        ports:
          - name: manager
            containerPort: {{.Values.port_internal}}
