global:
  rbac:
    create: true

kube-dns:
  domain:
  clusterip:

kube-fip-controller:
  enabled: false

disco:
  enabled: false
  rbac:
    create: true
    serviceAccountName: disco

node-problem-detector:
  systemLogMonitors:
    - kernel-monitor.json

  customPluginMonitors:
    - bridge-monitor.json

  additionalHostVolumeMounts:
    # Required by the bridge monitor.
    - name: hostproc
      hostPath: /proc
      mountPath: /host/proc
      readOnly: true

container-linux-update-operator:
  rbac:
    create: true
    serviceAccountName: container-linux-update-operator

cert-manager:
  image:
    repository: keppel.eu-de-1.cloud.sap/ccloud/cert-manager-controller
    tag: v0.15.2
  webhook:
    image:
      repository: keppel.eu-de-1.cloud.sap/ccloud/cert-manager-webhook
      tag: v0.15.2
  cainjector:
    image:
      repository: keppel.eu-de-1.cloud.sap/ccloud/cert-manager-cainjector
      tag: v0.15.2
    extraArgs:
    - --leader-elect=false
  ingressShim:
    defaultIssuerName: digicert-issuer
    defaultIssuerKind: DigicertIssuer
    defaultIssuerGroup: certmanager.cloud.sap
  prometheus:
    enabled: true
  podAnnotations:
    prometheus.io/targets: "collector-kubernetes"

digicert-issuer:
  enableLeaderElection: "false"
  provisioner:
    disableRootCA: "true"

# ingress related but independent values
ingress:
  tls_client_auth:
    enabled: false
    cacrt: |
      -----BEGIN CERTIFICATE-----
      -----END CERTIFICATE-----

  external_public_service:
    enabled: false
    #ip:

nginx-ingress:
  fullnameOverride: kube-system-nginx-ingress
  releaseLabelOverride: kube-system

  revisionHistoryLimit: 5
  rbac:
    create: true

  serviceAccount:
    create: true

  controller:
    image:
      repository: sapcc/nginx-ingress-controller
      tag: "0.21.0"
      runAsUser: 33

    minReadySeconds: 60

    extraArgs:
      annotations-prefix: ingress.kubernetes.io
      # On upgrade to 0.26.1.
      # enable-dynamic-certificates: true
      # enable-ssl-chain-completion: false

    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1

    livenessProbe:
      initialDelaySeconds: 30

    replicaCount: 3

    service:
      omitClusterIP: true

    metrics:
      enabled: true
      service:
        omitClusterIP: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          prometheus: "collector-kubernetes"

    config:
      http-snippet: |
        map $ssl_client_s_dn $ssl_client_s_dn_cn {
            default "anonymous";
            ~CN=(?<CN>[^/,\"]+) $CN;
        }

        # Ensure there is a global_request_id for logging
        map '' $global_request_id {
            default '-';
        }
      location-snippet: |
        proxy_set_header X-REMOTE-USER $ssl_client_s_dn_cn;
      proxy-send-timeout: "300"
      proxy-read-timeout: "300"
      proxy-body-size: "0k"
      server-name-hash-bucket-size: "128"
      map-hash-bucket-size: "128"
      disable-ipv6: "true"
      ssl-redirect: "true"
      enable-underscores-in-headers: "true"
      worker-shutdown-timeout: "18000s"
      worker-processes: "8"
      use-forwarded-headers: "false"
      log-format-upstream: >-
        $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $global_request_id

    affinity:
      # don't co-locate replicas of the ingress controller on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nginx-ingress
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - controller

  defaultBackend:
    enabled: true

    image:
      repository: sapcc/defaultbackend
      tag: "1.5"

    service:
      omitClusterIP: true

    resources:
      limits:
        cpu: 10m
        memory: 20Mi
      requests:
        cpu: 10m
        memory: 20Mi

    affinity:
      # don't co-locate replicas of the ingress backend on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nginx-ingress
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - default-backend

nginx-ingress-external:
  enabled: false
  fullnameOverride: kube-system-nginx-ingress-external
  releaseLabelOverride: kube-system

  revisionHistoryLimit: 5
  rbac:
    create: true

  serviceAccount:
    create: true

  controller:
    image:
      repository: sapcc/nginx-ingress-controller
      tag: "0.21.0"
      runAsUser: 33

    minReadySeconds: 60
    ingressClass: nginx-external
    electionID: external-ingress-controller-leader

    extraArgs:
      annotations-prefix: ingress.kubernetes.io
      # On upgrade to 0.26.1.
      # enable-dynamic-certificates: true
      # enable-ssl-chain-completion: false

    updateStrategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1

    livenessProbe:
      initialDelaySeconds: 30

    replicaCount: 3

    service:
      externalTrafficPolicy: "Local"
      omitClusterIP: false
      # clusterIP: ""

    metrics:
      enabled: true
      service:
        omitClusterIP: true
      serviceMonitor:
        enabled: true
        additionalLabels:
          prometheus: "collector-kubernetes"

    config:
      http-snippet: |
        map $ssl_client_s_dn $ssl_client_s_dn_cn {
            default "anonymous";
            ~CN=(?<CN>[^/,\"]+) $CN;
        }

        # Ensure there is a global_request_id for logging
        map '' $global_request_id {
            default '-';
        }
      location-snippet: |
        proxy_set_header X-REMOTE-USER $ssl_client_s_dn_cn;
      proxy-send-timeout: "300"
      proxy-read-timeout: "300"
      proxy-body-size: "0k"
      server-name-hash-bucket-size: "128"
      map-hash-bucket-size: "128"
      disable-ipv6: "true"
      ssl-redirect: "true"
      enable-underscores-in-headers: "true"
      worker-shutdown-timeout: "18000s"
      worker-processes: "8"
      use-forwarded-headers: "false"
      log-format-upstream: >-
        $remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" $request_length $request_time [$proxy_upstream_name] $upstream_addr $upstream_response_length $upstream_response_time $upstream_status $req_id $global_request_id
    affinity:
      # don't co-locate replicas of the ingress controller on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nginx-ingress-external
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - controller

  defaultBackend:
    enabled: true

    image:
      repository: sapcc/defaultbackend
      tag: "1.5"

    service:
      omitClusterIP: true

    resources:
      limits:
        cpu: 10m
        memory: 20Mi
      requests:
        cpu: 10m
        memory: 20Mi

    affinity:
      # don't co-locate replicas of the ingress backend on the same node
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - topologyKey: kubernetes.io/hostname
            labelSelector:
              matchExpressions:
                - key: app
                  operator: In
                  values:
                    - nginx-ingress-external
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                    - default-backend

pull-secret-injector:
  resources:
    limits:
      cpu: 200m
      memory: 256Mi

# For now enabled via regional values.
vertical-pod-autoscaler:
  enabled: false
