apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    disco: "true"
    kubernetes.io/tls-acme: "true"

    ingress.kubernetes.io/auth-url: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/auth"
    ingress.kubernetes.io/auth-signin: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/start"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/start"
    ingress.kubernetes.io/auth-request-redirect: $escaped_request_uri
    nginx.ingress.kubernetes.io/auth-request-redirect: $escaped_request_uri
    ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-Email, X-Auth-Request-User, X-Forwarded-Access-Token"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-Email, X-Auth-Request-User, X-Forwarded-Access-Token"
  name: thanos
  namespace: {{ required ".Values.thanos.namespace is unset" .Values.thanos.namespace }}
spec:
  ingressClassName: nginx
  rules:
  - host: metrics.st1.{{ .Values.global.region }}.cloud.sap
    http:
      paths:
      - backend:
          service:
            name: thanos-{{ .Values.global.cluster }}-query
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - metrics.st1.{{ .Values.global.region }}.cloud.sap
    secretName: tls-metrics-{{ .Values.global.cluster }}-cloud-sap
