global:
  region:
  domain:
  clusterType: virtual

# Disable the prometheus-operator kube-state-metrics sub-chart. We deploy independently.
kubeStateMetrics:
  enabled: false

# Disable the prometheus-operator prometheus-node-exporter sub-chart. We deploy independently.
nodeExporter:
  enabled: false

kube-prometheus-stack:
  nameOverride: prometheus
  fullnameOverride: prometheus
  # Never manage CRDs. They are deployed via prometheus-crds Helm chart.
  manageCrds: false

  prometheusOperator:
    image:
      repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/sapcc/prometheus-operator
      tag: v0.47.0

    prometheusConfigReloaderImage:
      repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/sapcc/prometheus-config-reloader
      tag: v0.44.0

    # Both admissionWebhooks and tls requires admissionregistration.k8s.io/v1 .
    admissionWebhooks:
      enabled: false
    tls:
      enabled: false

    createCustomResource: false
    service:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/targets: "kubernetes"
        prometheus.io/port: "8080"
    serviceAccount:
      create: false
    tlsProxy:
      enabled: false

  operator:
    serviceAccountName: default
  # Disable creation of default aggregation and alerting rules.
  defaultRules:
    create: false
  # Disable the Prometheus instance. We deploy our own Prometheis.
  prometheus:
    enabled: false
  # Disable the Alertmanager instance. We deploy our own Alertmanagers.
  alertmanager:
    enabled: false
  # Disable all exporters.
  kubeApiServer:
    enabled: false
  kubelet:
    enabled: false
  kubeControllerManager:
    enabled: false
  coreDns:
    enabled: false
  kubeDns:
    enabled: false
  kubeEtcd:
    enabled: false
  kubeScheduler:
    enabled: false
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false

  grafana:
    enabled: true
    defaultDashboardsEnabled: false
    admin:
      existingSecret: kube-monitoring-virtual-grafana-admin
      userKey: adminUser
      passwordKey: adminPassword
      # Defined via secrets.
      # username: admin-user
      # password: admin-password

    rbac:
      pspEnabled: false

    # Ingress disabled by default as hosts and tls are set via secrets.
    ingress:
      enabled: false
      annotations:
        kubernetes.io/tls-acme: "true"
        disco: "true"
        nginx.ingress.kubernetes.io/auth-tls-secret: "kube-system/ingress-cacrt"
        nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
        nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"

      # Defined via secrets.
      # hosts:
      #   - grafana.domain.tld
      #
      # tls:
      #  - secretName: tls-grafana-domain-tld
      #    hosts:
      #      - grafana.domain.tld

    plugins: grafana-piechart-panel,natel-discrete-panel,grafana-worldmap-panel

    additionalDataSources:
      - name: prometheus
        type: prometheus
        isDefault: true
        access: proxy
        url: http://prometheus-kubernetes:9090/
        version: 1

    # Sidecar for discovering & reloading dashboard, datasource configmaps.
    sidecar:
      dashboards:
        enabled: true
        label: grafana-dashboard
        searchNamespace: ALL

      datasources:
        enabled: true
        defaultDatasourceEnabled: false
        # Label that configmaps with datasources should have to be added.
        label: grafana-datasource

    grafana.ini:
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /var/lib/grafana/provisioning

      server:
        protocol: http
        http_addr:
        http_port: 3000
        domain: localhost
        enforce_domain: false
        root_url: "%(protocol)s://%(domain)s:%(http_port)s"
        router_logging: false
        static_root_path: public
        enable_gzip: false
        cert_file:
        cert_key:
        socket: /tmp/grafana.sock

      users:
        allow_sign_up: false
        allow_org_create: false
        auto_assign_org: true
        auto_assign_org_role: Admin
        default_theme: dark

      auth.anonymous:
        enabled: true
        org_name: Main Org.
        org_role: Admin

      auth.proxy:
        enabled: true
        header_name: X-REMOTE-USER
        header_property: username
        auto_sign_up: true

      auth.basic:
        enabled: false

      smtp:
        enabled: false

      log:
        mode: console
        level: debug

      alerting:
        enabled: false

absent-metrics-operator:
  enabled: true

kube-state-metrics:
  customLabels:
    app: kube-state-metrics

  collectors:
    # Not useful.
    configmaps: false
    secrets: false
    cronjobs: false
    horizontalpodautoscalers: false

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

kube-state-metrics-exporter:
  prometheusName: kubernetes

ping-exporter:
  targets:
    - ingress.admin.cloud.sap
    - 8.8.8.8

prometheus-node-exporter:
  image:
    repository: prom/node-exporter

  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tmpfs|tracefs)$$
    - --collector.processes
    - --path.rootfs=/rootfs
    - --collector.systemd.enable-task-metrics
    - --collector.systemd.enable-restarts-metrics
    - --collector.systemd.enable-start-time-metrics

  extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
    - name: rootfs
      hostPath: /
      mountPath: /rootfs
      readOnly: true
      mountPropagation: HostToContainer

  resources:
    requests:
      memory: 100Mi
      cpu: 100m

prometheus-server:
  name: kubernetes

  retentionTime: 21d

  additionalScrapeConfigs:
    name: prometheus-kubernetes-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    vicePresident: false
    annotations:
      kubernetes.io/tls-acme: "true"
    hosts:
      - prometheus-kubernetes.virtual
      - prometheus.virtual

  # Store in memory.
  persistence:
    enabled: true
    size: 100Gi

  serviceDiscoveries:
    endpoints:
      enabled: true
      # Scrape all targets regardless of their `prometheus.io/targets` annotation.
      limitToPrometheusTargets: false
    pods:
      enabled: true
      # Scrape all targets regardless of their `prometheus.io/targets` annotation.
      limitToPrometheusTargets: false
    kubeAPIServer:
      enabled: true
    cAdvisor:
      enabled: true
    kubelet:
      enabled: true
    nodeExporter:
      enabled: true
    kubeDNS:
      enabled: true

  # Send alerts to these alertmanagers.
  alertmanagers:
    # Enabled via secrets.
    authentication:
      enabled: false

    hosts:
      - alertmanager.scaleout.eu-de-1.cloud.sap
      - alertmanager.scaleout.eu-nl-1.cloud.sap

prometheus-kubernetes-rules:
  prometheusName: kubernetes

prometheus-virtual-rules:
  prometheusName: kubernetes

kubernikus-monitoring:
  prometheusName: kubernetes

grafana-dashboards-kubernetes:
  enableDatasources: false
