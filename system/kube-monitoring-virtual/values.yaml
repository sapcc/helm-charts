global:
  region:
  domain:
  clusterType: virtual

owner-info:
  support-group: containers
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/system/kube-monitoring-virtual

# Disable the prometheus-operator kube-state-metrics sub-chart. We deploy independently.
kubeStateMetrics:
  enabled: false

# Disable the prometheus-operator prometheus-node-exporter sub-chart. We deploy independently.
nodeExporter:
  enabled: false

grafana:
  image:
    repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/grafana/grafana
    tag: 7.5.16

  testFramework:
    enabled: false
  defaultDashboardsEnabled: false
  admin:
    existingSecret: kube-monitoring-virtual-grafana-admin
    userKey: adminUser
    passwordKey: adminPassword
    # Defined via secrets.
    # username: admin-user
    # password: admin-password

  rbac:
    pspEnabled: false

  # Ingress disabled by default as hosts and tls are set via secrets.
  ingress:
    enabled: false
    annotations:
      kubernetes.io/tls-acme: "true"
      disco: "true"
      nginx.ingress.kubernetes.io/auth-tls-secret: "kube-system/ingress-cacrt"
      nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
      nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"

    # Defined via secrets.
    # hosts:
    #   - grafana.domain.tld
    #
    # tls:
    #  - secretName: tls-grafana-domain-tld
    #    hosts:
    #      - grafana.domain.tld

  plugins: grafana-piechart-panel,natel-discrete-panel,grafana-worldmap-panel

  # Sidecar for discovering & reloading dashboard, datasource configmaps.
  sidecar:
    image:
      repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/kiwigrid/k8s-sidecar

    dashboards:
      enabled: true
      label: grafana-dashboard
      searchNamespace: ALL

    datasources:
      enabled: true
      defaultDatasourceEnabled: false
      # Label that configmaps with datasources should have to be added.
      label: grafana-datasource

  grafana.ini:
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /var/lib/grafana/provisioning

    server:
      protocol: http
      http_addr:
      http_port: 3000
      domain: localhost
      enforce_domain: false
      root_url: "%(protocol)s://%(domain)s:%(http_port)s"
      router_logging: false
      static_root_path: public
      enable_gzip: false
      cert_file:
      cert_key:
      socket: /tmp/grafana.sock

    users:
      allow_sign_up: false
      allow_org_create: false
      auto_assign_org: true
      auto_assign_org_role: Admin
      default_theme: dark

    auth.anonymous:
      enabled: true
      org_name: Main Org.
      org_role: Admin

    auth.proxy:
      enabled: true
      header_name: X-REMOTE-USER
      header_property: username
      auto_sign_up: true

    auth.basic:
      enabled: false

    smtp:
      enabled: false

    log:
      mode: console
      level: debug

    alerting:
      enabled: false

absent-metrics-operator:
  enabled: true

kube-state-metrics:
  image:
    repository: keppel.global.cloud.sap/ccloud-registry-k8s-io-mirror/kube-state-metrics/kube-state-metrics

  customLabels:
    app: kube-state-metrics

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

kube-state-metrics-exporter:
  prometheusName: kubernetes

ping-exporter:
  targets:
    - ingress.admin.cloud.sap
    - 8.8.8.8

prometheus-node-exporter:
  image:
    repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/prom/node-exporter

  service:
    annotations:
      # Avoid duplicate scrapes via service.
      prometheus.io/scrape: "false"

  extraArgs:
    - --collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)
    - --collector.filesystem.fs-types-exclude=^(autofs|binfmt_misc|bpf|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tmpfs|tracefs)$$
    - --collector.processes
    - --collector.systemd.enable-task-metrics
    - --collector.systemd.enable-restarts-metrics
    - --collector.systemd.enable-start-time-metrics

  extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true

  resources:
    requests:
      memory: 100Mi
      cpu: 100m

  rbac:
    pspEnabled: false

prometheus-server:
  name: kubernetes

  retentionTime: 21d

  additionalScrapeConfigs:
    name: prometheus-kubernetes-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    hosts:
      - prometheus-kubernetes.virtual
      - prometheus.virtual

  internalIngress:
    enabled: true
    hosts:
      - prometheus-kubernetes-internal.virtual
      - prometheus-internal.virtual

  # Store in memory.
  persistence:
    enabled: true
    size: 100Gi

  serviceDiscoveries:
    endpoints:
      enabled: true
      # Scrape all targets regardless of their `prometheus.io/targets` annotation.
      limitToPrometheusTargets: false
    pods:
      enabled: true
      # Scrape all targets regardless of their `prometheus.io/targets` annotation.
      limitToPrometheusTargets: false
    kubeAPIServer:
      enabled: true
    cAdvisor:
      enabled: true
    kubelet:
      enabled: true
    nodeExporter:
      enabled: true
    kubeDNS:
      enabled: false
    kubernikus:
      enabled: true
    probes:
      enabled: true

  alerts:
    multipleTargetScrapes:
      exceptions:
        # we exclude cadvisor metrics because it has the same instance as the kubelet but a different path
        # e.g. 10.246.204.80:10250/metrics vs. 10.246.204.80:10250/metrics/cadvisor
        - kubernetes-cadvisors
        - kubernetes-kubelet

  # Send alerts to these alertmanagers.
  alertmanagers:
    # Enabled via secrets.
    authentication:
      enabled: false

    hosts:
      - alertmanager-internal.scaleout.eu-de-1.cloud.sap
      - alertmanager-internal.scaleout.eu-nl-1.cloud.sap

  thanos:
    enabled: false

prometheus-kubernetes-rules:
  prometheusName: kubernetes

prometheus-virtual-rules:
  prometheusName: kubernetes

kubernikus-monitoring:
  prometheusName: kubernetes

fluent-bit:
  image:
    repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/fluent/fluent-bit
    pullPolicy: IfNotPresent
  backend:
    es:
      enabled: true
    opensearch:
      enabled: false
      host: DEFINED-IN-SECRETS
      http_user: DEFINED-IN-SECRETS
      http_passwd: DEFINED-IN-SECRETS
      port: DEFINED-IN-SECRETS
      logstash_prefix: virtual
      tls:
        enabled: "On"
        verify: "Off"
        debug: '1'
