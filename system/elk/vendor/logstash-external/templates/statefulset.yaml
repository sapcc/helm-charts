apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: logstash-external
  labels:
    component: logstash-external
spec:
  serviceName: logstash-external
  selector:
    matchLabels:
      component: logstash-external
  replicas: {{ .Values.replicas }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        component: logstash-external
      annotations:
        checksum/configmap.yaml: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    spec:
      nodeSelector:
        zone: farm
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - "logstash-external"
            topologyKey: "kubernetes.io/hostname"
      volumes:
        - name: logstash-etc
          configMap:
            name: logstash-external-etc
        - name: tls-secret
          secret:
            secretName: tls-logstash-external
      containers:
        - name: logstash
          image: {{ .Values.global.registry }}/elk-logstash:{{ .Values.image_version }}
          imagePullPolicy: IfNotPresent
          ports:
            - name: netflow
              containerPort: {{ .Values.input_netflow_port }}
              protocol: UDP
            - name: syslogudp
              containerPort: {{ .Values.input_syslog_port }}
              protocol: UDP
            - name: syslogtcp
              containerPort: {{ .Values.input_syslog_port }}
              protocol: TCP
            - name: bigiplogsudp
              containerPort: {{ .Values.input_bigiplogs_port }}
              protocol: UDP
            - name: alertmanagertcp
              containerPort: {{ .Values.input_alertmanager_port }}
              protocol: TCP
            - name: deploymentstcp
              containerPort: {{ .Values.input_deployments_port }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.input_http_port }}
              protocol: TCP
          command: ["dumb-init","/bin/bash","/logstash-etc/start.sh"]
          env:
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: logstash-etc
              mountPath: /logstash-etc
            - mountPath: /tls-secret
              name: tls-secret
#          livenessProbe:
#            exec:
#              command:
#                - /bin/false
#            initialDelaySeconds: 60
        - name: exporter
          image: {{ .Values.global.dockerHubMirror | required ".Values.global.dockerHubMirror is missing" }}/bonniernews/logstash_exporter:v0.1.2
          ports:
            - name: metrics
              containerPort: 9198
          resources:
            limits:
              memory: 45Mi
              cpu: 100m
            requests:
              memory: 45Mi
              cpu: 10m
