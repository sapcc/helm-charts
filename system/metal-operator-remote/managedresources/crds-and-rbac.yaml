---
# Source: metal-operator/templates/rbac/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-controller-manager
  namespace: kube-system
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_biossettings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: biossettings.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BIOSSettings
    listKind: BIOSSettingsList
    plural: biossettings
    singular: biossettings
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.version
          name: BIOSVersion
          type: string
        - jsonPath: .spec.serverRef.name
          name: ServerRef
          type: string
        - jsonPath: .spec.serverMaintenanceRef.name
          name: ServerMaintenanceRef
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .status.lastAppliedTime
          name: AppliedOn
          type: date
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BIOSSettings is the Schema for the biossettings API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BIOSSettingsSpec defines the desired state of BIOSSettings.
              properties:
                serverMaintenancePolicy:
                  description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server.
                  type: string
                serverMaintenanceRef:
                  description: ServerMaintenanceRef is a reference to a ServerMaintenance object that BiosSetting has requested for the referred server.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                serverRef:
                  description: ServerRef is a reference to a specific server to apply bios setting on.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverRef is immutable
                      rule: self == oldSelf
                settingsFlow:
                  description: SettingsFlow contains BIOS settings sequence to apply on the BIOS in given order
                  items:
                    properties:
                      name:
                        description: Name identifies what this settings is doing
                        maxLength: 1000
                        minLength: 1
                        type: string
                      priority:
                        description: |-
                          Priority defines the order of applying the settings
                          any int greater than 0. lower number have higher Priority (ie; lower number is applied first)
                        format: int32
                        maximum: 2147483645
                        minimum: 1
                        type: integer
                      settings:
                        additionalProperties:
                          type: string
                        description: 'Settings contains software (eg: BIOS, BMC) settings as map'
                        type: object
                    required:
                      - name
                      - priority
                    type: object
                  type: array
                version:
                  description: 'Version contains software (eg: BIOS, BMC) version this settings applies to'
                  type: string
              required:
                - version
              type: object
            status:
              description: BIOSSettingsStatus defines the observed state of BIOSSettings.
              properties:
                conditions:
                  description: Conditions represents the latest available observations of the BIOSSettings's current state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                flowState:
                  items:
                    properties:
                      conditions:
                        description: Conditions represents the latest available observations of the BIOSSettings's current Flowstate.
                        items:
                          description: Condition contains details for one aspect of the current state of this API Resource.
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This may be an empty string.
                              maxLength: 32768
                              type: string
                            observedGeneration:
                              description: |-
                                observedGeneration represents the .metadata.generation that the condition was set based upon.
                                For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                                with respect to the current state of the instance.
                              format: int64
                              minimum: 0
                              type: integer
                            reason:
                              description: |-
                                reason contains a programmatic identifier indicating the reason for the condition's last transition.
                                Producers of specific condition types may define expected values and meanings for this field,
                                and whether the values are considered a guaranteed API.
                                The value should be a CamelCase string.
                                This field may not be empty.
                              maxLength: 1024
                              minLength: 1
                              pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                              type: string
                            status:
                              description: status of the condition, one of True, False, Unknown.
                              enum:
                                - "True"
                                - "False"
                                - Unknown
                              type: string
                            type:
                              description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              maxLength: 316
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                          required:
                            - lastTransitionTime
                            - message
                            - reason
                            - status
                            - type
                          type: object
                        type: array
                      flowState:
                        description: State represents the current state of the bios configuration task for current priority.
                        type: string
                      lastAppliedTime:
                        description: LastAppliedTime represents the timestamp when the last setting was successfully applied.
                        format: date-time
                        type: string
                      name:
                        description: Name identifies current priority settings from the Spec
                        type: string
                      priority:
                        description: Priority identifies the settings priority from the Spec
                        format: int32
                        type: integer
                    type: object
                  type: array
                lastAppliedTime:
                  description: LastAppliedTime represents the timestamp when the last setting was successfully applied.
                  format: date-time
                  type: string
                state:
                  description: State represents the current state of the bios configuration task.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_biossettingssets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: biossettingssets.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BIOSSettingsSet
    listKind: BIOSSettingsSetList
    plural: biossettingssets
    singular: biossettingsset
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.biosSettingsTemplate.version
          name: BIOSVersion
          type: string
        - jsonPath: .status.fullyLabeledServers
          name: TotalServers
          type: string
        - jsonPath: .status.availableBIOSSettings
          name: AvailableBIOSSettings
          type: string
        - jsonPath: .status.pendingBIOSSettings
          name: Pending
          type: string
        - jsonPath: .status.inProgressBIOSSettings
          name: InProgress
          type: string
        - jsonPath: .status.completedBIOSSettings
          name: Completed
          type: string
        - jsonPath: .status.failedBIOSSettings
          name: Failed
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BIOSSettingsSet is the Schema for the biossettingssets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BIOSSettingsSetSpec defines the desired state of BIOSSettingsSet.
              properties:
                biosSettingsTemplate:
                  description: BiosSettingsTemplate defines the template for the BIOSSettings Resource to be applied to the servers.
                  properties:
                    serverMaintenancePolicy:
                      description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server.
                      type: string
                    serverMaintenanceRef:
                      description: ServerMaintenanceRef is a reference to a ServerMaintenance object that BiosSetting has requested for the referred server.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    settingsFlow:
                      description: SettingsFlow contains BIOS settings sequence to apply on the BIOS in given order
                      items:
                        properties:
                          name:
                            description: Name identifies what this settings is doing
                            maxLength: 1000
                            minLength: 1
                            type: string
                          priority:
                            description: |-
                              Priority defines the order of applying the settings
                              any int greater than 0. lower number have higher Priority (ie; lower number is applied first)
                            format: int32
                            maximum: 2147483645
                            minimum: 1
                            type: integer
                          settings:
                            additionalProperties:
                              type: string
                            description: 'Settings contains software (eg: BIOS, BMC) settings as map'
                            type: object
                        required:
                          - name
                          - priority
                        type: object
                      type: array
                    version:
                      description: 'Version contains software (eg: BIOS, BMC) version this settings applies to'
                      type: string
                  required:
                    - version
                  type: object
                serverSelector:
                  description: ServerSelector specifies a label selector to identify the servers that are to be selected.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - serverSelector
              type: object
            status:
              description: BIOSSettingsSetStatus defines the observed state of BIOSSettingsSet.
              properties:
                availableBIOSSettings:
                  description: AvailableBIOSVersion is the number of Settings current created by the set.
                  format: int32
                  type: integer
                completedBIOSSettings:
                  description: CompletedBIOSSettings is the total number of completed server in the set.
                  format: int32
                  type: integer
                failedBIOSSettings:
                  description: FailedBIOSSettings is the total number of failed server in the set.
                  format: int32
                  type: integer
                fullyLabeledServers:
                  description: FullyLabeledServers is the number of server in the set.
                  format: int32
                  type: integer
                inProgressBIOSSettings:
                  description: InProgressBIOSSettings is the total number of server in the set that are currently in InProgress.
                  format: int32
                  type: integer
                pendingBIOSSettings:
                  description: PendingBIOSSettings is the total number of pending server in the set.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_biosversions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: biosversions.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BIOSVersion
    listKind: BIOSVersionList
    plural: biosversions
    singular: biosversion
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.version
          name: BIOSVersion
          type: string
        - jsonPath: .spec.updateType
          name: ForceUpdate
          type: string
        - jsonPath: .spec.serverRef.name
          name: ServerRef
          type: string
        - jsonPath: .spec.serverMaintenanceRef.name
          name: ServerMaintenanceRef
          type: string
        - jsonPath: .status.upgradeTask.state
          name: TaskState
          type: string
        - jsonPath: .status.upgradeTask.status
          name: TaskStatus
          type: string
        - jsonPath: .status.upgradeTask.percentageComplete
          name: TaskProgress
          type: integer
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BIOSVersion is the Schema for the biosversions API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BIOSVersionSpec defines the desired state of BIOSVersion.
              properties:
                image:
                  description: details regarding the image to use to upgrade to given BIOS version
                  properties:
                    URI:
                      description: The URI of the software image to update/install."
                      type: string
                    secretRef:
                      description: |-
                        ImageSecretRef is a reference to the Kubernetes Secret (of type SecretTypeBasicAuth) object that contains the credentials
                        to access the ImageURI. This secret includes sensitive information such as usernames and passwords.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    transferProtocol:
                      description: The network protocol that the server's update service uses to retrieve 'ImageURI'
                      type: string
                  required:
                    - URI
                  type: object
                serverMaintenancePolicy:
                  description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server.
                  type: string
                serverMaintenanceRef:
                  description: ServerMaintenanceRef is a reference to a ServerMaintenance object that that Controller has requested for the referred server.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                serverRef:
                  description: ServerRef is a reference to a specific server to apply bios upgrade on.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverRef is immutable
                      rule: self == oldSelf
                updatePolicy:
                  description: UpdatePolicy An indication of whether the server's upgrade service should bypass vendor update policies
                  type: string
                version:
                  description: Version contains a BIOS version to upgrade to
                  type: string
              required:
                - image
                - version
              type: object
            status:
              description: BIOSVersionStatus defines the observed state of BIOSVersion.
              properties:
                conditions:
                  description: Conditions represents the latest available observations of the Bios version upgrade state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                state:
                  description: State represents the current state of the bios configuration task.
                  type: string
                upgradeTask:
                  description: UpgradeTask contains the state of the Upgrade Task created by the BMC
                  properties:
                    URI:
                      description: URI is the URI of the task created by the BMC for the BIOS upgrade.
                      type: string
                    percentageComplete:
                      description: PercentComplete is the percentage of completion of the task.
                      format: int32
                      type: integer
                    state:
                      description: State is the current state of the task.
                      type: string
                    status:
                      description: Status is the current status of the task.
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_biosversionsets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: biosversionsets.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BIOSVersionSet
    listKind: BIOSVersionSetList
    plural: biosversionsets
    singular: biosversionset
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.biosVersionTemplate.version
          name: BIOSVersion
          type: string
        - jsonPath: .status.fullyLabeledServers
          name: selectedServers
          type: integer
        - jsonPath: .status.availableBIOSVersion
          name: AvailableBIOSVersion
          type: integer
        - jsonPath: .status.pendingBIOSVersion
          name: Pending
          type: integer
        - jsonPath: .status.inProgressBIOSVersion
          name: InProgress
          type: integer
        - jsonPath: .status.completedBIOSVersion
          name: Completed
          type: integer
        - jsonPath: .status.failedBIOSVersion
          name: Failed
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BIOSVersionSet is the Schema for the biosversionsets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BIOSVersionSetSpec defines the desired state of BIOSVersionSet.
              properties:
                biosVersionTemplate:
                  description: BiosVersionTemplate defines the template for the BIOSversion Resource to be applied to the servers.
                  properties:
                    image:
                      description: details regarding the image to use to upgrade to given BIOS version
                      properties:
                        URI:
                          description: The URI of the software image to update/install."
                          type: string
                        secretRef:
                          description: |-
                            ImageSecretRef is a reference to the Kubernetes Secret (of type SecretTypeBasicAuth) object that contains the credentials
                            to access the ImageURI. This secret includes sensitive information such as usernames and passwords.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        transferProtocol:
                          description: The network protocol that the server's update service uses to retrieve 'ImageURI'
                          type: string
                      required:
                        - URI
                      type: object
                    serverMaintenancePolicy:
                      description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server.
                      type: string
                    serverMaintenanceRef:
                      description: ServerMaintenanceRef is a reference to a ServerMaintenance object that that Controller has requested for the referred server.
                      properties:
                        apiVersion:
                          description: API version of the referent.
                          type: string
                        fieldPath:
                          description: |-
                            If referring to a piece of an object instead of an entire object, this string
                            should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                            For example, if the object reference is to a container within a pod, this would take on a value like:
                            "spec.containers{name}" (where "name" refers to the name of the container that triggered
                            the event) or if no container name is specified "spec.containers[2]" (container with
                            index 2 in this pod). This syntax is chosen only to have some well-defined way of
                            referencing a part of an object.
                          type: string
                        kind:
                          description: |-
                            Kind of the referent.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                          type: string
                        name:
                          description: |-
                            Name of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                        namespace:
                          description: |-
                            Namespace of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                          type: string
                        resourceVersion:
                          description: |-
                            Specific resourceVersion to which this reference is made, if any.
                            More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                          type: string
                        uid:
                          description: |-
                            UID of the referent.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    updatePolicy:
                      description: UpdatePolicy An indication of whether the server's upgrade service should bypass vendor update policies
                      type: string
                    version:
                      description: Version contains a BIOS version to upgrade to
                      type: string
                  required:
                    - image
                    - version
                  type: object
                serverSelector:
                  description: ServerSelector specifies a label selector to identify the servers that are to be selected.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - serverSelector
              type: object
            status:
              description: BIOSVersionSetStatus defines the observed state of BIOSVersionSet.
              properties:
                availableBIOSVersion:
                  description: AvailableBIOSVersion is the number of BIOSVersion created by the set.
                  format: int32
                  type: integer
                completedBIOSVersion:
                  description: CompletedBIOSVersion is the total number of completed BIOSVersion in the set.
                  format: int32
                  type: integer
                failedBIOSVersion:
                  description: FailedBIOSVersion is the total number of failed BIOSVersion in the set.
                  format: int32
                  type: integer
                fullyLabeledServers:
                  description: FullyLabeledServers is the number of servers in the set.
                  format: int32
                  type: integer
                inProgressBIOSVersion:
                  description: InProgressBIOSVersion is the total number of BIOSVersion in the set that are currently in InProgress.
                  format: int32
                  type: integer
                pendingBIOSVersion:
                  description: PendingBIOSVersion is the total number of pending BIOSVersion in the set.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_bmcs.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: bmcs.metal.ironcore.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          namespace: kube-system
          name: webhook-service
          path: /convert
      conversionReviewVersions:
        - v1
  group: metal.ironcore.dev
  names:
    kind: BMC
    listKind: BMCList
    plural: bmcs
    singular: bmc
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.macAddress
          name: MACAddress
          type: string
        - jsonPath: .status.ip
          name: IP
          type: string
        - jsonPath: .status.model
          name: Model
          type: string
        - jsonPath: .status.sku
          name: SKU
          priority: 100
          type: string
        - jsonPath: .status.serialNumber
          name: SerialNumber
          priority: 100
          type: string
        - jsonPath: .status.firmwareVersion
          name: FirmwareVersion
          priority: 100
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .status.powerState
          name: PowerState
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BMC is the Schema for the bmcs API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BMCSpec defines the desired state of BMC
              properties:
                access:
                  description: |-
                    Endpoint allows inline configuration of network access details for the BMC.
                    Use this field if access settings like address are to be configured directly within the BMC resource.
                  properties:
                    ip:
                      description: IP is the IP address of the BMC.
                      type: string
                    macAddress:
                      description: MACAddress is the MAC address of the endpoint.
                      type: string
                  type: object
                  x-kubernetes-validations:
                    - message: access is immutable
                      rule: self == oldSelf
                bmcSecretRef:
                  description: |-
                    BMCSecretRef is a reference to the Kubernetes Secret object that contains the credentials
                    required to access the BMC. This secret includes sensitive information such as usernames and passwords.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                bmcSettingsRef:
                  description: |-
                    BMCSettingRef is a reference to a BMCSettings object that specifies
                    the BMC configuration for this BMC.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                bmcUUID:
                  description: BMCUUID is the unique identifier for the BMC as defined in Redfish API.
                  type: string
                consoleProtocol:
                  description: |-
                    ConsoleProtocol specifies the protocol to be used for console access to the BMC.
                    This field is optional and can be omitted if console access is not required.
                  properties:
                    name:
                      description: |-
                        Name specifies the name of the console protocol.
                        This could be a protocol such as "SSH", "Telnet", etc.
                      enum:
                        - IPMI
                        - SSH
                        - SSHLenovo
                      type: string
                    port:
                      description: |-
                        Port specifies the port number used for console access.
                        This port is used by the specified console protocol to establish connections.
                      format: int32
                      type: integer
                  required:
                    - name
                    - port
                  type: object
                endpointRef:
                  description: |-
                    EndpointRef is a reference to the Kubernetes object that contains the endpoint information for the BMC.
                    This reference is typically used to locate the BMC endpoint within the cluster.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: endpointRef is immutable
                      rule: self == oldSelf
                protocol:
                  description: |-
                    Protocol specifies the protocol to be used for communicating with the BMC.
                    It could be a standard protocol such as IPMI or Redfish.
                  properties:
                    name:
                      description: |-
                        Name specifies the name of the protocol.
                        This could be a protocol such as "IPMI", "Redfish", etc.
                      type: string
                    port:
                      description: |-
                        Port specifies the port number used for communication.
                        This port is used by the specified protocol to establish connections.
                      format: int32
                      type: integer
                    scheme:
                      description: Scheme specifies the scheme used for communication.
                      type: string
                  required:
                    - name
                    - port
                  type: object
              required:
                - bmcSecretRef
                - protocol
              type: object
              x-kubernetes-validations:
                - message: exactly one of access or endpointRef needs to be set
                  rule: has(self.access) != has(self.endpointRef)
            status:
              description: BMCStatus defines the observed state of BMC.
              properties:
                conditions:
                  description: Conditions represents the latest available observations of the BMC's current state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                firmwareVersion:
                  description: FirmwareVersion is the version of the firmware currently running on the BMC.
                  type: string
                ip:
                  description: |-
                    IP is the IP address of the BMC.
                    The type is specified as string and is schemaless.
                  type: string
                macAddress:
                  description: |-
                    MACAddress is the MAC address of the BMC.
                    The format is validated using a regular expression pattern.
                  pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
                  type: string
                manufacturer:
                  description: Manufacturer is the name of the BMC manufacturer.
                  type: string
                model:
                  description: Model is the model number or name of the BMC.
                  type: string
                powerState:
                  description: PowerState represents the current power state of the BMC.
                  type: string
                serialNumber:
                  description: SerialNumber is the serial number of the BMC.
                  type: string
                sku:
                  description: SKU is the stock keeping unit identifier for the BMC.
                  type: string
                state:
                  description: State represents the current state of the BMC.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_bmcsecrets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: bmcsecrets.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BMCSecret
    listKind: BMCSecretList
    plural: bmcsecrets
    singular: bmcsecret
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BMCSecret is the Schema for the bmcsecrets API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            data:
              additionalProperties:
                format: byte
                type: string
              description: |-
                Data contains the secret data. Each key must consist of alphanumeric
                characters, '-', '_' or '.'. The serialized form of the secret data is a
                base64 encoded string, representing the arbitrary (possibly non-string)
                data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
              type: object
            immutable:
              description: |-
                Immutable, if set to true, ensures that data stored in the Secret cannot
                be updated (only object metadata can be modified).
                If not set to true, the field can be modified at any time.
                Defaulted to nil.
              type: boolean
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            stringData:
              additionalProperties:
                type: string
              description: |-
                stringData allows specifying non-binary secret data in string form.
                It is provided as a write-only input field for convenience.
                All keys and values are merged into the data field on write, overwriting any existing values.
                The stringData field is never output when reading from the API.
              type: object
            type:
              description: |-
                Used to facilitate programmatic handling of secret data.
                More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
              type: string
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_bmcsettings.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: bmcsettings.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BMCSettings
    listKind: BMCSettingsList
    plural: bmcsettings
    singular: bmcsettings
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.bmcSettings.version
          name: BMCVersion
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .spec.BMCRef.name
          name: BMCRef
          type: string
        - jsonPath: .spec.serverRef.name
          name: ServerRef
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BMCSettings is the Schema for the BMCSettings API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BMCSettingsSpec defines the desired state of BMCSettings.
              properties:
                BMCRef:
                  description: BMCRef is a reference to a specific BMC to apply setting to.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverRef is immutable
                      rule: self == oldSelf
                serverMaintenancePolicy:
                  description: ServerMaintenancePolicy is a maintenance policy to be applied on the server.
                  type: string
                serverMaintenanceRefs:
                  description: |-
                    ServerMaintenanceRefs are references to ServerMaintenance objects which are created by the controller for each
                    server that needs to be updated with the BMC settings.
                  items:
                    description: ServerMaintenanceRefItem is a reference to a ServerMaintenance object.
                    properties:
                      serverMaintenanceRef:
                        description: ServerMaintenanceRef is a reference to a ServerMaintenance object that the BMCSettings has requested for the referred server.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  type: array
                settings:
                  additionalProperties:
                    type: string
                  description: SettingsMap contains bmc settings as map
                  type: object
                version:
                  description: Version defines the BMC firmware for which the settings should be applied.
                  type: string
              required:
                - version
              type: object
            status:
              description: BMCSettingsStatus defines the observed state of BMCSettings.
              properties:
                state:
                  description: State represents the current state of the BMC configuration task.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_bmcversions.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: bmcversions.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BMCVersion
    listKind: BMCVersionList
    plural: bmcversions
    singular: bmcversion
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.version
          name: BMCVersion
          type: string
        - jsonPath: .spec.updateType
          name: updateType
          type: string
        - jsonPath: .spec.bmcRef.name
          name: BMCRef
          type: string
        - jsonPath: .status.upgradeTask.percentageComplete
          name: TaskProgress
          type: integer
        - jsonPath: .status.upgradeTask.state
          name: TaskState
          type: string
        - jsonPath: .status.upgradeTask.status
          name: TaskStatus
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BMCVersion is the Schema for the bmcversions API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BMCVersionSpec defines the desired state of BMCVersion.
              properties:
                bmcRef:
                  description: BMCRef is a reference to a specific BMC to apply BMC upgrade on.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: bmcRef is immutable
                      rule: self == oldSelf
                image:
                  description: details regarding the image to use to upgrade to given BMC version
                  properties:
                    URI:
                      description: The URI of the software image to update/install."
                      type: string
                    secretRef:
                      description: |-
                        ImageSecretRef is a reference to the Kubernetes Secret (of type SecretTypeBasicAuth) object that contains the credentials
                        to access the ImageURI. This secret includes sensitive information such as usernames and passwords.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    transferProtocol:
                      description: The network protocol that the server's update service uses to retrieve 'ImageURI'
                      type: string
                  required:
                    - URI
                  type: object
                serverMaintenancePolicy:
                  description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server managed by referred BMC.
                  type: string
                serverMaintenanceRefs:
                  description: ServerMaintenanceRefs are references to a ServerMaintenance objects that Controller has requested for the each of the related server.
                  items:
                    description: ServerMaintenanceRefItem is a reference to a ServerMaintenance object.
                    properties:
                      serverMaintenanceRef:
                        description: ServerMaintenanceRef is a reference to a ServerMaintenance object that the BMCSettings has requested for the referred server.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    type: object
                  type: array
                updatePolicy:
                  description: UpdatePolicy is an indication of whether the server's upgrade service should bypass vendor update policies
                  type: string
                version:
                  description: Version contains a BMC version to upgrade to
                  type: string
              required:
                - image
                - version
              type: object
            status:
              description: BMCVersionStatus defines the observed state of BMCVersion.
              properties:
                conditions:
                  description: Conditions represents the latest available observations of the BMC version upgrade state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                state:
                  description: State represents the current state of the BMC configuration task.
                  type: string
                upgradeTask:
                  description: UpgradeTask contains the state of the Upgrade Task created by the BMC
                  properties:
                    URI:
                      description: URI is the URI of the task created by the BMC for the BIOS upgrade.
                      type: string
                    percentageComplete:
                      description: PercentComplete is the percentage of completion of the task.
                      format: int32
                      type: integer
                    state:
                      description: State is the current state of the task.
                      type: string
                    status:
                      description: Status is the current status of the task.
                      type: string
                  type: object
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_bmcversionsets.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: bmcversionsets.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BMCVersionSet
    listKind: BMCVersionSetList
    plural: bmcversionsets
    singular: bmcversionset
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.bmcVersionTemplate.version
          name: BMCVersion
          type: string
        - jsonPath: .status.fullyLabeledBMCs
          name: selectedBMCs
          type: integer
        - jsonPath: .status.availableBMCVersion
          name: AvailableBMCVersion
          type: integer
        - jsonPath: .status.pendingBMCVersion
          name: Pending
          type: integer
        - jsonPath: .status.inProgressBMCVersion
          name: InProgress
          type: integer
        - jsonPath: .status.completedBMCVersion
          name: Completed
          type: integer
        - jsonPath: .status.failedBMCVersion
          name: Failed
          type: integer
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BMCVersionSet is the Schema for the bmcversionsets API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: BMCVersionSetSpec defines the desired state of BMCVersionSet.
              properties:
                bmcSelector:
                  description: BMCSelector specifies a label selector to identify the BMC that are to be selected.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                bmcVersionTemplate:
                  description: BMCVersionTemplate defines the template for the BMCversion Resource to be applied to the servers.
                  properties:
                    image:
                      description: details regarding the image to use to upgrade to given BMC version
                      properties:
                        URI:
                          description: The URI of the software image to update/install."
                          type: string
                        secretRef:
                          description: |-
                            ImageSecretRef is a reference to the Kubernetes Secret (of type SecretTypeBasicAuth) object that contains the credentials
                            to access the ImageURI. This secret includes sensitive information such as usernames and passwords.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        transferProtocol:
                          description: The network protocol that the server's update service uses to retrieve 'ImageURI'
                          type: string
                      required:
                        - URI
                      type: object
                    serverMaintenancePolicy:
                      description: ServerMaintenancePolicy is a maintenance policy to be enforced on the server managed by referred BMC.
                      type: string
                    serverMaintenanceRefs:
                      description: ServerMaintenanceRefs are references to a ServerMaintenance objects that Controller has requested for the each of the related server.
                      items:
                        description: ServerMaintenanceRefItem is a reference to a ServerMaintenance object.
                        properties:
                          serverMaintenanceRef:
                            description: ServerMaintenanceRef is a reference to a ServerMaintenance object that the BMCSettings has requested for the referred server.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: |-
                                  If referring to a piece of an object instead of an entire object, this string
                                  should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container within a pod, this would take on a value like:
                                  "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                  the event) or if no container name is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                  referencing a part of an object.
                                type: string
                              kind:
                                description: |-
                                  Kind of the referent.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                type: string
                              resourceVersion:
                                description: |-
                                  Specific resourceVersion to which this reference is made, if any.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              uid:
                                description: |-
                                  UID of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      type: array
                    updatePolicy:
                      description: UpdatePolicy is an indication of whether the server's upgrade service should bypass vendor update policies
                      type: string
                    version:
                      description: Version contains a BMC version to upgrade to
                      type: string
                  required:
                    - image
                    - version
                  type: object
              required:
                - bmcSelector
              type: object
            status:
              description: BMCVersionSetStatus defines the observed state of BMCVersionSet.
              properties:
                availableBMCVersion:
                  description: AvailableBMCVersion is the number of BMCVersion current created by the set.
                  format: int32
                  type: integer
                completedBMCVersion:
                  description: CompletedBMCVersion is the total number of completed BMCVersion in the set.
                  format: int32
                  type: integer
                failedBMCVersion:
                  description: FailedBMCVersion is the total number of failed BMCVersion in the set.
                  format: int32
                  type: integer
                fullyLabeledBMCs:
                  description: FullyLabeledBMCs is the number of server in the set.
                  format: int32
                  type: integer
                inProgressBMCVersion:
                  description: InProgressBMCVersion is the total number of BMCVersion in the set that are currently in InProgress.
                  format: int32
                  type: integer
                pendingBMCVersion:
                  description: PendingBMCVersion is the total number of pending BMCVersion in the set.
                  format: int32
                  type: integer
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_endpoints.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: endpoints.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.macAddress
          name: MACAddress
          type: string
        - jsonPath: .spec.ip
          name: IP
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Endpoint is the Schema for the endpoints API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: EndpointSpec defines the desired state of Endpoint
              properties:
                ip:
                  description: IP is the IP address of the endpoint.
                  type: string
                macAddress:
                  description: MACAddress is the MAC address of the endpoint.
                  type: string
              type: object
            status:
              description: EndpointStatus defines the observed state of Endpoint
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_serverbootconfigurations.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: serverbootconfigurations.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: ServerBootConfiguration
    listKind: ServerBootConfigurationList
    plural: serverbootconfigurations
    singular: serverbootconfiguration
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.serverRef.name
          name: ServerRef
          type: string
        - jsonPath: .spec.image
          name: Image
          type: string
        - jsonPath: .spec.ignitionSecretRef.name
          name: IgnitionRef
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServerBootConfiguration is the Schema for the serverbootconfigurations API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ServerBootConfigurationSpec defines the desired state of ServerBootConfiguration.
              properties:
                ignitionSecretRef:
                  description: |-
                    IgnitionSecretRef is a reference to the Kubernetes Secret object that contains
                    the ignition configuration for the server. This field is optional and can be omitted if not specified.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                image:
                  description: |-
                    Image specifies the boot image to be used for the server.
                    This field is optional and can be omitted if not specified.
                  type: string
                serverRef:
                  description: ServerRef is a reference to the server for which this boot configuration is intended.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - serverRef
              type: object
            status:
              description: ServerBootConfigurationStatus defines the observed state of ServerBootConfiguration.
              properties:
                state:
                  description: State represents the current state of the boot configuration.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_serverclaims.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: serverclaims.metal.ironcore.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          namespace: kube-system
          name: webhook-service
          path: /convert
      conversionReviewVersions:
        - v1
  group: metal.ironcore.dev
  names:
    kind: ServerClaim
    listKind: ServerClaimList
    plural: serverclaims
    singular: serverclaim
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.serverRef.name
          name: Server
          type: string
        - jsonPath: .spec.ignitionSecretRef.name
          name: Ignition
          type: string
        - jsonPath: .spec.image
          name: Image
          type: string
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServerClaim is the Schema for the serverclaims API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ServerClaimSpec defines the desired state of ServerClaim.
              properties:
                ignitionSecretRef:
                  description: |-
                    IgnitionSecretRef is a reference to the Kubernetes Secret object that contains
                    the ignition configuration for the server. This field is optional and can be omitted if not specified.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                image:
                  description: Image specifies the boot image to be used for the server.
                  type: string
                power:
                  description: Power specifies the desired power state of the server.
                  type: string
                serverRef:
                  description: |-
                    ServerRef is a reference to a specific server to be claimed.
                    This field is optional and can be omitted if the server is to be selected using ServerSelector.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverRef is immutable
                      rule: self == oldSelf
                serverSelector:
                  description: |-
                    ServerSelector specifies a label selector to identify the server to be claimed.
                    This field is optional and can be omitted if a specific server is referenced using ServerRef.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverSelector is immutable
                      rule: self == oldSelf
              required:
                - image
                - power
              type: object
              x-kubernetes-validations:
                - message: serverRef is required once set
                  rule: '!has(oldSelf.serverRef) || has(self.serverRef)'
                - message: serverSelector is required once set
                  rule: '!has(oldSelf.serverSelector) || has(self.serverSelector)'
            status:
              description: ServerClaimStatus defines the observed state of ServerClaim.
              properties:
                phase:
                  description: Phase represents the current phase of the server claim.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_servermaintenances.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: servermaintenances.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: ServerMaintenance
    listKind: ServerMaintenanceList
    plural: servermaintenances
    singular: servermaintenance
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.serverRef.name
          name: Server
          type: string
        - jsonPath: .spec.policy
          name: Policy
          type: string
        - jsonPath: .spec.serverBootConfigurationTemplate.name
          name: BootConfiguration
          type: string
        - jsonPath: .metadata.annotations.metal\.ironcore\.dev\/reason
          name: Reason
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ServerMaintenance is the Schema for the ServerMaintenance API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ServerMaintenanceSpec defines the desired state of a ServerMaintenance
              properties:
                policy:
                  description: Policy specifies the maintenance policy to be enforced on the server.
                  type: string
                serverBootConfigurationTemplate:
                  description: ServerBootConfigurationTemplate specifies the boot configuration to be applied to the server during maintenance.
                  properties:
                    name:
                      description: Name specifies the name of the boot configuration.
                      type: string
                    spec:
                      description: Parameters specify the parameters to be used for rendering the boot configuration.
                      properties:
                        ignitionSecretRef:
                          description: |-
                            IgnitionSecretRef is a reference to the Kubernetes Secret object that contains
                            the ignition configuration for the server. This field is optional and can be omitted if not specified.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                        image:
                          description: |-
                            Image specifies the boot image to be used for the server.
                            This field is optional and can be omitted if not specified.
                          type: string
                        serverRef:
                          description: ServerRef is a reference to the server for which this boot configuration is intended.
                          properties:
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                          type: object
                          x-kubernetes-map-type: atomic
                      required:
                        - serverRef
                      type: object
                  required:
                    - name
                    - spec
                  type: object
                serverPower:
                  description: ServerPower specifies the power state of the server during maintenance.
                  type: string
                serverRef:
                  description: ServerRef is a reference to the server that is to be maintained.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - serverRef
              type: object
            status:
              description: ServerMaintenanceStatus defines the observed state of a ServerMaintenance
              properties:
                state:
                  description: State specifies the current state of the server maintenance.
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: metal-operator/templates/crd/metal.ironcore.dev_servers.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: servers.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.uuid
          name: UUID
          type: string
        - jsonPath: .status.manufacturer
          name: Manufacturer
          type: string
        - jsonPath: .status.model
          name: Model
          type: string
        - jsonPath: .status.sku
          name: SKU
          priority: 100
          type: string
        - jsonPath: .status.serialNumber
          name: SerialNumber
          priority: 100
          type: string
        - jsonPath: .status.powerState
          name: PowerState
          type: string
        - jsonPath: .status.indicatorLED
          name: IndicatorLED
          priority: 100
          type: string
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Server is the Schema for the servers API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: ServerSpec defines the desired state of a Server.
              properties:
                biosSettingsRef:
                  description: |-
                    BIOSSettingsRef is a reference to a biossettings object that specifies
                    the BIOS configuration for this server.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                bmc:
                  description: |-
                    BMC contains the access details for the BMC.
                    This field is optional and can be omitted if no BMC access is specified.
                  properties:
                    address:
                      description: Address is the address of the BMC.
                      type: string
                    bmcSecretRef:
                      description: |-
                        BMCSecretRef is a reference to the Kubernetes Secret object that contains the credentials
                        required to access the BMC. This secret includes sensitive information such as usernames and passwords.
                      properties:
                        name:
                          default: ""
                          description: |-
                            Name of the referent.
                            This field is effectively required, but due to backwards compatibility is
                            allowed to be empty. Instances of this type with an empty value here are
                            almost certainly wrong.
                            More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                          type: string
                      type: object
                      x-kubernetes-map-type: atomic
                    protocol:
                      description: Protocol specifies the protocol to be used for communicating with the BMC.
                      properties:
                        name:
                          description: |-
                            Name specifies the name of the protocol.
                            This could be a protocol such as "IPMI", "Redfish", etc.
                          type: string
                        port:
                          description: |-
                            Port specifies the port number used for communication.
                            This port is used by the specified protocol to establish connections.
                          format: int32
                          type: integer
                        scheme:
                          description: Scheme specifies the scheme used for communication.
                          type: string
                      required:
                        - name
                        - port
                      type: object
                  required:
                    - address
                    - bmcSecretRef
                    - protocol
                  type: object
                bmcRef:
                  description: |-
                    BMCRef is a reference to the BMC object associated with this server.
                    This field is optional and can be omitted if no BMC is associated with this server.
                  properties:
                    name:
                      default: ""
                      description: |-
                        Name of the referent.
                        This field is effectively required, but due to backwards compatibility is
                        allowed to be empty. Instances of this type with an empty value here are
                        almost certainly wrong.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                bootConfigurationRef:
                  description: |-
                    BootConfigurationRef is a reference to a BootConfiguration object that specifies
                    the boot configuration for this server. This field is optional and can be omitted
                    if no boot configuration is specified.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                bootOrder:
                  description: BootOrder specifies the boot order of the server.
                  items:
                    description: BootOrder represents the boot order of the server.
                    properties:
                      device:
                        description: Device is the device to boot from.
                        type: string
                      name:
                        description: Name is the name of the boot device.
                        type: string
                      priority:
                        description: Priority is the priority of the boot device.
                        type: integer
                    required:
                      - device
                      - name
                      - priority
                    type: object
                  type: array
                indicatorLED:
                  description: IndicatorLED specifies the desired state of the server's indicator LED.
                  type: string
                maintenanceBootConfigurationRef:
                  description: |-
                    MaintenanceBootConfigurationRef is a reference to a BootConfiguration object that specifies
                    the boot configuration for this server during maintenance. This field is optional and can be omitted
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                power:
                  description: Power specifies the desired power state of the server.
                  type: string
                serverClaimRef:
                  description: |-
                    ServerClaimRef is a reference to a ServerClaim object that claims this server.
                    This field is optional and can be omitted if no claim is associated with this server.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                  x-kubernetes-validations:
                    - message: serverClaimRef cannot be switched directly
                      rule: self == null || oldSelf == null || self == oldSelf
                serverMaintenanceRef:
                  description: ServerMaintenanceRef is a reference to a ServerMaintenance object that maintains this server.
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: |-
                        If referring to a piece of an object instead of an entire object, this string
                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within a pod, this would take on a value like:
                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]" (container with
                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                        referencing a part of an object.
                      type: string
                    kind:
                      description: |-
                        Kind of the referent.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                      type: string
                    name:
                      description: |-
                        Name of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                      type: string
                    namespace:
                      description: |-
                        Namespace of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                      type: string
                    resourceVersion:
                      description: |-
                        Specific resourceVersion to which this reference is made, if any.
                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                      type: string
                    uid:
                      description: |-
                        UID of the referent.
                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                      type: string
                  type: object
                  x-kubernetes-map-type: atomic
                systemURI:
                  description: SystemURI is the unique URI for the server resource in REDFISH API.
                  type: string
                systemUUID:
                  description: SystemUUID is the unique identifier for the server.
                  type: string
                uuid:
                  description: |-
                    UUID is the unique identifier for the server.
                    Deprecated in favor of systemUUID.
                  type: string
              required:
                - uuid
              type: object
            status:
              description: ServerStatus defines the observed state of Server.
              properties:
                biosVersion:
                  description: BIOSVersion is the version of the server's BIOS.
                  type: string
                conditions:
                  description: Conditions represents the latest available observations of the server's current state.
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                indicatorLED:
                  description: IndicatorLED specifies the current state of the server's indicator LED.
                  type: string
                manufacturer:
                  description: Manufacturer is the name of the server manufacturer.
                  type: string
                model:
                  description: Model is the model of the server.
                  type: string
                networkInterfaces:
                  description: NetworkInterfaces is a list of network interfaces associated with the server.
                  items:
                    description: NetworkInterface defines the details of a network interface.
                    properties:
                      ip:
                        description: |-
                          IP is the IP address assigned to the network interface.
                          The type is specified as string and is schemaless.
                        type: string
                      macAddress:
                        description: MACAddress is the MAC address of the network interface.
                        type: string
                      name:
                        description: Name is the name of the network interface.
                        type: string
                    required:
                      - ip
                      - macAddress
                      - name
                    type: object
                  type: array
                powerState:
                  description: PowerState represents the current power state of the server.
                  type: string
                processors:
                  description: Processors is a list of Processors associated with the server.
                  items:
                    description: Processor defines the details of a Processor.
                    properties:
                      architecture:
                        description: Architecture is the architecture of the Processor.
                        type: string
                      id:
                        description: ID is the name of the Processor.
                        type: string
                      instructionSet:
                        description: InstructionSet is the instruction set of the Processor.
                        type: string
                      manufacturer:
                        description: Manufacturer is the manufacturer of the Processor.
                        type: string
                      maxSpeedMHz:
                        description: MaxSpeedMHz is the maximum speed of the Processor in MHz.
                        format: int32
                        type: integer
                      model:
                        description: Model is the model of the Processor.
                        type: string
                      totalCores:
                        description: TotalCores is the total number of cores in the Processor.
                        format: int32
                        type: integer
                      totalThreads:
                        description: TotalThreads is the total number of threads in the Processor.
                        format: int32
                        type: integer
                      type:
                        description: Type is the type of the Processor.
                        type: string
                    required:
                      - id
                    type: object
                  type: array
                serialNumber:
                  description: SerialNumber is the serial number of the server.
                  type: string
                sku:
                  description: SKU is the stock keeping unit identifier for the server.
                  type: string
                state:
                  description: State represents the current state of the server.
                  type: string
                storages:
                  description: Storages is a list of storages associated with the server.
                  items:
                    description: Storage defines the details of one storage device
                    properties:
                      drives:
                        description: Drives is a collection of drives associated with this storage.
                        items:
                          description: StorageDrive defines the details of one storage drive
                          properties:
                            capacity:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Capacity specifies the size of the storage device in bytes.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            mediaType:
                              description: MediaType specifies the media type of the storage device.
                              type: string
                            model:
                              description: Model specifies the model of the storage device.
                              type: string
                            name:
                              description: Name is the name of the storage interface.
                              type: string
                            state:
                              description: State specifies the state of the storage device.
                              type: string
                            type:
                              description: Type specifies the type of the storage device.
                              type: string
                            vendor:
                              description: Vendor specifies the vendor of the storage device.
                              type: string
                          type: object
                        type: array
                      name:
                        description: Name is the name of the storage interface.
                        type: string
                      state:
                        description: State specifies the state of the storage device.
                        type: string
                      volumes:
                        description: Volumes is a collection of volumes associated with this storage.
                        items:
                          description: StorageVolume defines the details of one storage volume
                          properties:
                            capacity:
                              anyOf:
                                - type: integer
                                - type: string
                              description: Capacity specifies the size of the storage device in bytes.
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            name:
                              description: Name is the name of the storage interface.
                              type: string
                            raidType:
                              description: RAIDType specifies the RAID type of the associated Volume.
                              type: string
                            state:
                              description: Status specifies the status of the volume.
                              type: string
                            volumeUsage:
                              description: VolumeUsage specifies the volume usage type for the Volume.
                              type: string
                          type: object
                        type: array
                    type: object
                  type: array
                totalSystemMemory:
                  anyOf:
                    - type: integer
                    - type: string
                  description: TotalSystemMemory is the total amount of memory in bytes available on the server.
                  pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                  x-kubernetes-int-or-string: true
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
# Source: metal-operator/templates/rbac/biossettings_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettings-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biossettings_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettings-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biossettings_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettings-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biossettingsset_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettingsset-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biossettingsset_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettingsset-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biossettingsset_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biossettingsset-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettingssets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversion_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversion-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversion_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversion-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversion_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversion-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversionset_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversionset-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversionset_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversionset-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/biosversionset_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: biosversionset-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biosversionsets/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/bmc_editor_role.yaml
# permissions for end users to edit bmcs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmc-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcs/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/bmc_viewer_role.yaml
# permissions for end users to view bmcs.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmc-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcs/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/bmcsecret_editor_role.yaml
# permissions for end users to edit bmcsecrets.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcsecret-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsecrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsecrets/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/bmcsecret_viewer_role.yaml
# permissions for end users to view bmcsecrets.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcsecret-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsecrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsecrets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcsettings_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcsettings-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcsettings_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcsettings-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcsettings_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcsettings-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcsettings/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversion_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversion-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversion_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversion-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversion_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversion-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversions/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversionset_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversionset-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversionset_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversionset-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/bmcversionset_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: bmcversionset-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcversionsets/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/endpoint_editor_role.yaml
# permissions for end users to edit endpoints.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: endpoint-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - endpoints
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - endpoints/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/endpoint_viewer_role.yaml
# permissions for end users to view endpoints.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: endpoint-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - endpoints/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/metrics_auth_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-metrics-auth-role
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
# Source: metal-operator/templates/rbac/metrics_reader_role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-metrics-reader
rules:
  - nonResourceURLs:
      - "/metrics"
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - batch
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings
      - biossettingssets
      - biosversions
      - biosversionsets
      - bmcs
      - bmcsecrets
      - bmcsettings
      - bmcversions
      - bmcversionsets
      - endpoints
      - serverbootconfigurations
      - serverclaims
      - serverconfigurations
      - servermaintenances
      - servers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings/finalizers
      - biossettingssets/finalizers
      - biosversions/finalizers
      - biosversionsets/finalizers
      - bmcs/finalizers
      - bmcsecrets/finalizers
      - bmcsettings/finalizers
      - bmcversions/finalizers
      - bmcversionsets/finalizers
      - endpoints/finalizers
      - serverbootconfigurations/finalizers
      - serverclaims/finalizers
      - servermaintenances/finalizers
      - servers/finalizers
    verbs:
      - update
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - biossettings/status
      - biossettingssets/status
      - biosversions/status
      - biosversionsets/status
      - bmcs/status
      - bmcsecrets/status
      - bmcsettings/status
      - bmcversions/status
      - bmcversionsets/status
      - endpoints/status
      - serverbootconfigurations/status
      - serverclaims/status
      - servermaintenances/status
      - servers/status
    verbs:
      - get
      - patch
      - update
---
# Source: metal-operator/templates/rbac/server_editor_role.yaml
# permissions for end users to edit servers.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: server-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servers/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/server_viewer_role.yaml
# permissions for end users to view servers.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: server-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servers
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servers/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/serverbootconfiguration_editor_role.yaml
# permissions for end users to edit serverbootconfigurations.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: serverbootconfiguration-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/serverbootconfiguration_viewer_role.yaml
# permissions for end users to view serverbootconfigurations.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: serverbootconfiguration-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverbootconfigurations/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/serverclaim_editor_role.yaml
# permissions for end users to edit serverclaims.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: serverclaim-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverclaims
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverclaims/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/serverclaim_viewer_role.yaml
# permissions for end users to view serverclaims.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: serverclaim-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverclaims
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - serverclaims/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/servermaintenance_admin_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants full permissions ('*') over metal.ironcore.dev.
# This role is intended for users authorized to modify roles and bindings within the cluster,
# enabling them to delegate specific permissions to other users or groups as needed.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: servermaintenance-admin-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances
    verbs:
      - '*'
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/servermaintenance_editor_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants permissions to create, update, and delete resources within the metal.ironcore.dev.
# This role is intended for users who need to manage these resources
# but should not control RBAC or manage permissions for others.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: servermaintenance-editor-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances/status
    verbs:
      - get
# Source: metal-operator/templates/rbac/servermaintenance_viewer_role.yaml
# This rule is not used by the project metal-operator itself.
# It is provided to allow the cluster admin to help manage permissions for users.
#
# Grants read-only access to metal.ironcore.dev resources.
# This role is intended for users who need visibility into these resources
# without permissions to modify them. It is ideal for monitoring purposes and limited-access viewing.
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: servermaintenance-viewer-role
rules:
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - servermaintenances/status
    verbs:
      - get
---
# Source: metal-operator/templates/rbac/metrics_auth_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-metrics-auth-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-metrics-auth-role
subjects:
  - kind: ServiceAccount
    name: metal-operator-controller-manager
    namespace: kube-system
---
# Source: metal-operator/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  name: metal-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-manager-role
subjects:
  - kind: ServiceAccount
    name: metal-operator-controller-manager
    namespace: kube-system
---
# Source: metal-operator/templates/rbac/leader_election_role.yaml
# permissions to do leader election.
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  namespace: kube-system
  name: metal-operator-leader-election-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
# Source: metal-operator/templates/rbac/leader_election_role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    helm.sh/chart: "0.0.0-db1137e-crds"
    app.kubernetes.io/name: metal-operator
    app.kubernetes.io/instance: metal-operator
    app.kubernetes.io/version: "0.1.0"
    app.kubernetes.io/managed-by: Helm
  namespace: kube-system
  name: metal-operator-leader-election-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-leader-election-role
subjects:
  - kind: ServiceAccount
    name: metal-operator-controller-manager
    namespace: kube-system
---

