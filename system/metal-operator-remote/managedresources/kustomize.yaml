apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: bmcs.metal.ironcore.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: kube-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: metal.ironcore.dev
  names:
    kind: BMC
    listKind: BMCList
    plural: bmcs
    singular: bmc
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.macAddress
      name: MACAddress
      type: string
    - jsonPath: .status.ip
      name: IP
      type: string
    - jsonPath: .status.model
      name: Model
      type: string
    - jsonPath: .status.sku
      name: SKU
      priority: 100
      type: string
    - jsonPath: .status.serialNumber
      name: SerialNumber
      priority: 100
      type: string
    - jsonPath: .status.firmwareVersion
      name: FirmwareVersion
      priority: 100
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.powerState
      name: PowerState
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BMC is the Schema for the bmcs API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: BMCSpec defines the desired state of BMC
            properties:
              access:
                description: |-
                  Endpoint allows inline configuration of network access details for the BMC.
                  Use this field if access settings like address are to be configured directly within the BMC resource.
                properties:
                  ip:
                    description: IP is the IP address of the BMC.
                    type: string
                  macAddress:
                    description: MACAddress is the MAC address of the endpoint.
                    type: string
                required:
                - ip
                - macAddress
                type: object
                x-kubernetes-validations:
                - message: access is immutable
                  rule: self == oldSelf
              bmcSecretRef:
                description: |-
                  BMCSecretRef is a reference to the Kubernetes Secret object that contains the credentials
                  required to access the BMC. This secret includes sensitive information such as usernames and passwords.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              consoleProtocol:
                description: |-
                  ConsoleProtocol specifies the protocol to be used for console access to the BMC.
                  This field is optional and can be omitted if console access is not required.
                properties:
                  name:
                    description: |-
                      Name specifies the name of the console protocol.
                      This could be a protocol such as "SSH", "Telnet", etc.
                    type: string
                  port:
                    description: |-
                      Port specifies the port number used for console access.
                      This port is used by the specified console protocol to establish connections.
                    format: int32
                    type: integer
                required:
                - name
                - port
                type: object
              endpointRef:
                description: |-
                  EndpointRef is a reference to the Kubernetes object that contains the endpoint information for the BMC.
                  This reference is typically used to locate the BMC endpoint within the cluster.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: endpointRef is immutable
                  rule: self == oldSelf
              protocol:
                description: |-
                  Protocol specifies the protocol to be used for communicating with the BMC.
                  It could be a standard protocol such as IPMI or Redfish.
                properties:
                  name:
                    description: |-
                      Name specifies the name of the protocol.
                      This could be a protocol such as "IPMI", "Redfish", etc.
                    type: string
                  port:
                    description: |-
                      Port specifies the port number used for communication.
                      This port is used by the specified protocol to establish connections.
                    format: int32
                    type: integer
                required:
                - name
                - port
                type: object
            required:
            - bmcSecretRef
            - protocol
            type: object
            x-kubernetes-validations:
            - message: exactly one of access or endpointRef needs to be set
              rule: has(self.access) != has(self.endpointRef)
          status:
            description: BMCStatus defines the observed state of BMC.
            properties:
              conditions:
                description: Conditions represents the latest available observations
                  of the BMC's current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              firmwareVersion:
                description: FirmwareVersion is the version of the firmware currently
                  running on the BMC.
                type: string
              ip:
                description: |-
                  IP is the IP address of the BMC.
                  The type is specified as string and is schemaless.
                type: string
              macAddress:
                description: |-
                  MACAddress is the MAC address of the BMC.
                  The format is validated using a regular expression pattern.
                pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
                type: string
              manufacturer:
                description: Manufacturer is the name of the BMC manufacturer.
                type: string
              model:
                description: Model is the model number or name of the BMC.
                type: string
              powerState:
                description: PowerState represents the current power state of the
                  BMC.
                type: string
              serialNumber:
                description: SerialNumber is the serial number of the BMC.
                type: string
              sku:
                description: SKU is the stock keeping unit identifier for the BMC.
                type: string
              state:
                description: State represents the current state of the BMC.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: bmcsecrets.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: BMCSecret
    listKind: BMCSecretList
    plural: bmcsecrets
    singular: bmcsecret
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BMCSecret is the Schema for the bmcsecrets API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          data:
            additionalProperties:
              format: byte
              type: string
            description: |-
              Data contains the secret data. Each key must consist of alphanumeric
              characters, '-', '_' or '.'. The serialized form of the secret data is a
              base64 encoded string, representing the arbitrary (possibly non-string)
              data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
            type: object
          immutable:
            description: |-
              Immutable, if set to true, ensures that data stored in the Secret cannot
              be updated (only object metadata can be modified).
              If not set to true, the field can be modified at any time.
              Defaulted to nil.
            type: boolean
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          stringData:
            additionalProperties:
              type: string
            description: |-
              stringData allows specifying non-binary secret data in string form.
              It is provided as a write-only input field for convenience.
              All keys and values are merged into the data field on write, overwriting any existing values.
              The stringData field is never output when reading from the API.
            type: object
          type:
            description: |-
              Used to facilitate programmatic handling of secret data.
              More info: https://kubernetes.io/docs/concepts/configuration/secret/#secret-types
            type: string
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: endpoints.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: Endpoint
    listKind: EndpointList
    plural: endpoints
    singular: endpoint
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.macAddress
      name: MACAddress
      type: string
    - jsonPath: .spec.ip
      name: IP
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Endpoint is the Schema for the endpoints API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: EndpointSpec defines the desired state of Endpoint
            properties:
              ip:
                description: IP is the IP address of the endpoint.
                type: string
              macAddress:
                description: MACAddress is the MAC address of the endpoint.
                type: string
            required:
            - ip
            - macAddress
            type: object
          status:
            description: EndpointStatus defines the observed state of Endpoint
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: serverbootconfigurations.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: ServerBootConfiguration
    listKind: ServerBootConfigurationList
    plural: serverbootconfigurations
    singular: serverbootconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.serverRef.name
      name: ServerRef
      type: string
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .spec.ignitionSecretRef.name
      name: IgnitionRef
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServerBootConfiguration is the Schema for the serverbootconfigurations
          API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerBootConfigurationSpec defines the desired state of
              ServerBootConfiguration.
            properties:
              ignitionSecretRef:
                description: |-
                  IgnitionSecretRef is a reference to the Kubernetes Secret object that contains
                  the ignition configuration for the server. This field is optional and can be omitted if not specified.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              image:
                description: |-
                  Image specifies the boot image to be used for the server.
                  This field is optional and can be omitted if not specified.
                type: string
              serverRef:
                description: ServerRef is a reference to the server for which this
                  boot configuration is intended.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
            required:
            - serverRef
            type: object
          status:
            description: ServerBootConfigurationStatus defines the observed state
              of ServerBootConfiguration.
            properties:
              state:
                description: State represents the current state of the boot configuration.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: serverclaims.metal.ironcore.dev
spec:
  conversion:
    strategy: Webhook
    webhook:
      clientConfig:
        service:
          name: webhook-service
          namespace: kube-system
          path: /convert
      conversionReviewVersions:
      - v1
  group: metal.ironcore.dev
  names:
    kind: ServerClaim
    listKind: ServerClaimList
    plural: serverclaims
    singular: serverclaim
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.serverRef.name
      name: Server
      type: string
    - jsonPath: .spec.ignitionSecretRef.name
      name: Ignition
      type: string
    - jsonPath: .spec.image
      name: Image
      type: string
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ServerClaim is the Schema for the serverclaims API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerClaimSpec defines the desired state of ServerClaim.
            properties:
              ignitionSecretRef:
                description: |-
                  IgnitionSecretRef is a reference to the Kubernetes Secret object that contains
                  the ignition configuration for the server. This field is optional and can be omitted if not specified.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              image:
                description: Image specifies the boot image to be used for the server.
                type: string
              power:
                description: Power specifies the desired power state of the server.
                type: string
              serverRef:
                description: |-
                  ServerRef is a reference to a specific server to be claimed.
                  This field is optional and can be omitted if the server is to be selected using ServerSelector.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: serverRef is immutable
                  rule: self == oldSelf
              serverSelector:
                description: |-
                  ServerSelector specifies a label selector to identify the server to be claimed.
                  This field is optional and can be omitted if a specific server is referenced using ServerRef.
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: |-
                        A label selector requirement is a selector that contains values, a key, and an operator that
                        relates the key and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: |-
                            operator represents a key's relationship to a set of values.
                            Valid operators are In, NotIn, Exists and DoesNotExist.
                          type: string
                        values:
                          description: |-
                            values is an array of string values. If the operator is In or NotIn,
                            the values array must be non-empty. If the operator is Exists or DoesNotExist,
                            the values array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                    x-kubernetes-list-type: atomic
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: |-
                      matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                      map is equivalent to an element of matchExpressions, whose key field is "key", the
                      operator is "In", and the values array contains only "value". The requirements are ANDed.
                    type: object
                type: object
                x-kubernetes-map-type: atomic
                x-kubernetes-validations:
                - message: serverSelector is immutable
                  rule: self == oldSelf
            required:
            - image
            - power
            type: object
            x-kubernetes-validations:
            - message: serverRef is required once set
              rule: '!has(oldSelf.serverRef) || has(self.serverRef)'
            - message: serverSelector is required once set
              rule: '!has(oldSelf.serverSelector) || has(self.serverSelector)'
          status:
            description: ServerClaimStatus defines the observed state of ServerClaim.
            properties:
              phase:
                description: Phase represents the current phase of the server claim.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: servers.metal.ironcore.dev
spec:
  group: metal.ironcore.dev
  names:
    kind: Server
    listKind: ServerList
    plural: servers
    singular: server
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.uuid
      name: UUID
      type: string
    - jsonPath: .status.manufacturer
      name: Manufacturer
      type: string
    - jsonPath: .status.model
      name: Model
      type: string
    - jsonPath: .status.sku
      name: SKU
      priority: 100
      type: string
    - jsonPath: .status.serialNumber
      name: SerialNumber
      priority: 100
      type: string
    - jsonPath: .status.powerState
      name: PowerState
      type: string
    - jsonPath: .status.indicatorLED
      name: IndicatorLED
      priority: 100
      type: string
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Server is the Schema for the servers API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ServerSpec defines the desired state of a Server.
            properties:
              BIOS:
                description: BIOS specifies the BIOS settings for the server.
                items:
                  description: BIOSSettings represents the BIOS settings for a server.
                  properties:
                    settings:
                      additionalProperties:
                        type: string
                      description: Settings is a map of key-value pairs representing
                        the BIOS settings.
                      type: object
                    version:
                      description: Version specifies the version of the server BIOS
                        for which the settings are defined.
                      type: string
                  required:
                  - version
                  type: object
                type: array
              bmc:
                description: |-
                  BMC contains the access details for the BMC.
                  This field is optional and can be omitted if no BMC access is specified.
                properties:
                  address:
                    description: Address is the address of the BMC.
                    type: string
                  bmcSecretRef:
                    description: |-
                      BMCSecretRef is a reference to the Kubernetes Secret object that contains the credentials
                      required to access the BMC. This secret includes sensitive information such as usernames and passwords.
                    properties:
                      name:
                        default: ""
                        description: |-
                          Name of the referent.
                          This field is effectively required, but due to backwards compatibility is
                          allowed to be empty. Instances of this type with an empty value here are
                          almost certainly wrong.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                  protocol:
                    description: Protocol specifies the protocol to be used for communicating
                      with the BMC.
                    properties:
                      name:
                        description: |-
                          Name specifies the name of the protocol.
                          This could be a protocol such as "IPMI", "Redfish", etc.
                        type: string
                      port:
                        description: |-
                          Port specifies the port number used for communication.
                          This port is used by the specified protocol to establish connections.
                        format: int32
                        type: integer
                    required:
                    - name
                    - port
                    type: object
                required:
                - address
                - bmcSecretRef
                - protocol
                type: object
              bmcRef:
                description: |-
                  BMCRef is a reference to the BMC object associated with this server.
                  This field is optional and can be omitted if no BMC is associated with this server.
                properties:
                  name:
                    default: ""
                    description: |-
                      Name of the referent.
                      This field is effectively required, but due to backwards compatibility is
                      allowed to be empty. Instances of this type with an empty value here are
                      almost certainly wrong.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              bootConfigurationRef:
                description: |-
                  BootConfigurationRef is a reference to a BootConfiguration object that specifies
                  the boot configuration for this server. This field is optional and can be omitted
                  if no boot configuration is specified.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              bootOrder:
                description: BootOrder specifies the boot order of the server.
                items:
                  description: BootOrder represents the boot order of the server.
                  properties:
                    device:
                      description: Device is the device to boot from.
                      type: string
                    name:
                      description: Name is the name of the boot device.
                      type: string
                    priority:
                      description: Priority is the priority of the boot device.
                      type: integer
                  required:
                  - device
                  - name
                  - priority
                  type: object
                type: array
              indicatorLED:
                description: IndicatorLED specifies the desired state of the server's
                  indicator LED.
                type: string
              power:
                description: Power specifies the desired power state of the server.
                type: string
              serverClaimRef:
                description: |-
                  ServerClaimRef is a reference to a ServerClaim object that claims this server.
                  This field is optional and can be omitted if no claim is associated with this server.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              uuid:
                description: UUID is the unique identifier for the server.
                type: string
            required:
            - uuid
            type: object
          status:
            description: ServerStatus defines the observed state of Server.
            properties:
              BIOS:
                description: BIOSSettings represents the BIOS settings for a server.
                properties:
                  settings:
                    additionalProperties:
                      type: string
                    description: Settings is a map of key-value pairs representing
                      the BIOS settings.
                    type: object
                  version:
                    description: Version specifies the version of the server BIOS
                      for which the settings are defined.
                    type: string
                required:
                - version
                type: object
              conditions:
                description: Conditions represents the latest available observations
                  of the server's current state.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              indicatorLED:
                description: IndicatorLED specifies the current state of the server's
                  indicator LED.
                type: string
              manufacturer:
                description: Manufacturer is the name of the server manufacturer.
                type: string
              model:
                description: Model is the model of the server.
                type: string
              networkInterfaces:
                description: NetworkInterfaces is a list of network interfaces associated
                  with the server.
                items:
                  description: NetworkInterface defines the details of a network interface.
                  properties:
                    ip:
                      description: |-
                        IP is the IP address assigned to the network interface.
                        The type is specified as string and is schemaless.
                      type: string
                    macAddress:
                      description: MACAddress is the MAC address of the network interface.
                      type: string
                    name:
                      description: Name is the name of the network interface.
                      type: string
                  required:
                  - ip
                  - macAddress
                  - name
                  type: object
                type: array
              powerState:
                description: PowerState represents the current power state of the
                  server.
                type: string
              serialNumber:
                description: SerialNumber is the serial number of the server.
                type: string
              sku:
                description: SKU is the stock keeping unit identifier for the server.
                type: string
              state:
                description: State represents the current state of the server.
                type: string
              storages:
                description: Storages is a list of storages associated with the server.
                items:
                  description: Storage defines the details of one storage device
                  properties:
                    drives:
                      description: Drives is a collection of drives associated with
                        this storage.
                      items:
                        description: StorageDrive defines the details of one storage
                          drive
                        properties:
                          capacity:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Capacity specifies the size of the storage
                              device in bytes.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          mediaType:
                            description: MediaType specifies the media type of the
                              storage device.
                            type: string
                          model:
                            description: Model specifies the model of the storage
                              device.
                            type: string
                          name:
                            description: Name is the name of the storage interface.
                            type: string
                          state:
                            description: State specifies the state of the storage
                              device.
                            type: string
                          type:
                            description: Type specifies the type of the storage device.
                            type: string
                          vendor:
                            description: Vendor specifies the vendor of the storage
                              device.
                            type: string
                        type: object
                      type: array
                    name:
                      description: Name is the name of the storage interface.
                      type: string
                    state:
                      description: State specifies the state of the storage device.
                      type: string
                    volumes:
                      description: Volumes is a collection of volumes associated with
                        this storage.
                      items:
                        description: StorageVolume defines the details of one storage
                          volume
                        properties:
                          capacity:
                            anyOf:
                            - type: integer
                            - type: string
                            description: Capacity specifies the size of the storage
                              device in bytes.
                            pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                            x-kubernetes-int-or-string: true
                          name:
                            description: Name is the name of the storage interface.
                            type: string
                          raidType:
                            description: RAIDType specifies the RAID type of the associated
                              Volume.
                            type: string
                          state:
                            description: Status specifies the status of the volume.
                            type: string
                          volumeUsage:
                            description: VolumeUsage specifies the volume usage type
                              for the Volume.
                            type: string
                        type: object
                      type: array
                  type: object
                type: array
              totalSystemMemory:
                anyOf:
                - type: integer
                - type: string
                description: TotalSystemMemory is the total amount of memory in bytes
                  available on the server.
                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                x-kubernetes-int-or-string: true
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: controller-manager-sa
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: serviceaccount
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: leader-election-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: role
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-leader-election-role
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: metal-operator-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal.ironcore.dev
  resources:
  - bmcs
  - bmcsecrets
  - endpoints
  - serverbootconfigurations
  - serverclaims
  - serverconfigurations
  - servers
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - metal.ironcore.dev
  resources:
  - bmcs/finalizers
  - bmcsecrets/finalizers
  - endpoints/finalizers
  - serverbootconfigurations/finalizers
  - serverclaims/finalizers
  - servers/finalizers
  verbs:
  - update
- apiGroups:
  - metal.ironcore.dev
  resources:
  - bmcs/status
  - bmcsecrets/status
  - endpoints/status
  - serverbootconfigurations/status
  - serverclaims/status
  - servers/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: metrics-reader
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: proxy-role
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrole
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: leader-election-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: rolebinding
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-leader-election-rolebinding
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-leader-election-role
subjects:
- kind: ServiceAccount
  name: metal-operator-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: rbac
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: manager-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-manager-role
subjects:
- kind: ServiceAccount
  name: metal-operator-controller-manager
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: proxy-rolebinding
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: clusterrolebinding
    app.kubernetes.io/part-of: metal-operator
  name: metal-operator-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: metal-operator-proxy-role
subjects:
- kind: ServiceAccount
  name: metal-operator-controller-manager
  namespace: kube-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: kube-rbac-proxy
    app.kubernetes.io/created-by: metal-operator
    app.kubernetes.io/instance: controller-manager-metrics-service
    app.kubernetes.io/managed-by: kustomize
    app.kubernetes.io/name: service
    app.kubernetes.io/part-of: metal-operator
    control-plane: controller-manager
  name: metal-operator-controller-manager-metrics-service
  namespace: kube-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
