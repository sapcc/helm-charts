apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.15.0
  labels:
    cluster.x-k8s.io/v1beta1: v1alpha1
  name: metalmachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    kind: MetalMachine
    listKind: MetalMachineList
    plural: metalmachines
    singular: metalmachine
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: MetalMachine is the Schema for the metalmachines API
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: MetalMachineSpec defines the desired state of MetalMachine
              properties:
                image:
                  description: Image specifies the boot image to be used for the server.
                  type: string
                providerID:
                  description: ProviderID is the unique identifier as specified by the cloud provider.
                  type: string
                serverSelector:
                  description: |-
                    ServerSelector specifies matching criteria for labels on Servers.
                    This is used to claim specific Server types for a MetalMachine.
                  properties:
                    matchExpressions:
                      description: matchExpressions is a list of label selector requirements. The requirements are ANDed.
                      items:
                        description: |-
                          A label selector requirement is a selector that contains values, a key, and an operator that
                          relates the key and values.
                        properties:
                          key:
                            description: key is the label key that the selector applies to.
                            type: string
                          operator:
                            description: |-
                              operator represents a key's relationship to a set of values.
                              Valid operators are In, NotIn, Exists and DoesNotExist.
                            type: string
                          values:
                            description: |-
                              values is an array of string values. If the operator is In or NotIn,
                              the values array must be non-empty. If the operator is Exists or DoesNotExist,
                              the values array must be empty. This array is replaced during a strategic
                              merge patch.
                            items:
                              type: string
                            type: array
                            x-kubernetes-list-type: atomic
                        required:
                          - key
                          - operator
                        type: object
                      type: array
                      x-kubernetes-list-type: atomic
                    matchLabels:
                      additionalProperties:
                        type: string
                      description: |-
                        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                        map is equivalent to an element of matchExpressions, whose key field is "key", the
                        operator is "In", and the values array contains only "value". The requirements are ANDed.
                      type: object
                  type: object
                  x-kubernetes-map-type: atomic
              required:
                - image
              type: object
            status:
              description: MetalMachineStatus defines the observed state of MetalMachine
              properties:
                failureMessage:
                  description: |-
                    FailureMessage will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a more verbose string suitable
                    for logging and human consumption.


                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.


                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                failureReason:
                  description: |-
                    FailureReason will be set in the event that there is a terminal problem
                    reconciling the Machine and will contain a succinct value suitable
                    for machine interpretation.


                    This field should not be set for transitive errors that a controller
                    faces that are expected to be fixed automatically over
                    time (like service outages), but instead indicate that something is
                    fundamentally wrong with the Machine's spec or the configuration of
                    the controller, and that manual intervention is required. Examples
                    of terminal errors would be invalid combinations of settings in the
                    spec, values that are unsupported by the controller, or the
                    responsible controller itself being critically misconfigured.


                    Any transient errors that occur during the reconciliation of Machines
                    can be added as events to the Machine object and/or logged in the
                    controller's output.
                  type: string
                ready:
                  description: Ready indicates the Machine infrastructure has been provisioned and is ready.
                  type: boolean
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
