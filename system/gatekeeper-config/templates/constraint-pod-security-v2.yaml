{{/* This check is disabled entirely in the lab clusters to avoid needlessly obstructing the development of changes to the core components. */}}
{{/* In the QA cluster, this check is in audit-only mode. Service owners can set up new deployments there and then ask for an extension of the allowlist based on that template. */}}
{{- if ne .Values.cluster_layer "labs" }}

apiVersion: constraints.gatekeeper.sh/v1beta1
kind: GkPodSecurityV2
metadata:
  name: podsecurityv2
  annotations:
    {{- include "sources" (tuple "pod-security-v2" "pod-security-v2") | indent 4 }}
    {{- include "docstring" (tuple $ "GkPodSecurityV2") | indent 4 }}
  labels:
    severity: 'debug'
spec:
  enforcementAction: dryrun
  match: {{ include "match_pods_and_pod_owners" . | indent 4 }}
  parameters:
    allowlist:

      ##########################################################################
      # Rules used by unit tests (also documents which keys are available)

      {{- if eq .Values.cluster_type "test" }}
      - matchNamespace: foo
        matchRepository: test-app/unprivileged
        justification: |
          This rule is used in unit tests only.
          If represents a pod that requests hardly any special privileges.
        mayUseCapabilities: [ FOO ]

      - matchNamespace: foo
        matchRepository: test-app/highly-privileged
        justification: |
          This rule is used in unit tests only.
          It represents a pod that requests every possible type of privilege.
        mayUseHostNetwork: true
        mayUseHostPID: true
        mayUsePrivilegeEscalation: true
        mayBePrivileged: true
        mayUseCapabilities: [ FOO, SYS_ADMIN ]
        mayReadHostPathVolumes: [ / ]
        mayWriteHostPathVolumes: [ / ]
      {{- end }}

      ##########################################################################
      # Global rules

      - matchNamespace: '*'
        matchRepository: ccloud/servicemesh/proxy-init
        justification: |
          Linkerd adds a sidecar container to each relevant pod in order to connect the pod network to the service mesh.
          CAP_NET_ADMIN is needed to modify network interfaces, routing tables, and packet filter rules.
          CAP_NET_RAW is used to create raw network sockets.
        mayBePrivileged: true
        mayUsePrivilegeEscalation: true
        mayUseCapabilities: [ NET_ADMIN, NET_RAW ]

      ##########################################################################
      # Rules for ci-tooling

      ##########################################################################
      # Rules for infra-monitoring

      ##########################################################################
      # Rules for kube-monitoring

      ##########################################################################
      # Rules for kube-network

      ##########################################################################
      # Rules for kube-system

      - matchNamespace: kube-system
        matchRepository: ccloud-dockerhub-mirror/coredns/coredns
        justification: |
          Many kube-system components need broad network access (e.g. coredns,
          CNI, ingress-nginx)
        mayUseCapabilities: [ NET_BIND_SERVICE ]

      - matchNamespace: kube-system
        matchRepository: ccloud-registry-k8s-io-mirror/provider-os/cinder-csi-plugin
        justification: |
          TODO
        mayUseHostNetwork: true
        mayUsePrivilegeEscalation: true
        mayBePrivileged: true
        mayUseCapabilities: [ SYS_ADMIN ]
        mayWriteHostPathVolumes: [ /var/lib/kubelet, /var/lib/kubelet/plugins/cinder.csi.openstack.org ]
      
      - matchNamespace: kube-system
        matchRepository: ccloud-registry-k8s-io-mirror/sig-storage/livenessprobe
        justification: |
          TODO
        mayUseHostNetwork: true
        mayUsePrivilegeEscalation: true
        mayBePrivileged: true
        mayUseCapabilities: [ SYS_ADMIN ]
        mayWriteHostPathVolumes: [ /var/lib/kubelet/plugins/cinder.csi.openstack.org ]
      
      - matchNamespace: kube-system
        matchRepository: ccloud-registry-k8s-io-mirror/sig-storage/csi-node-driver-registrar
        justification: |
          TODO
        mayUseHostNetwork: true
        mayUseCapabilities: [ SYS_ADMIN ]
        mayUsePrivilegeEscalation: true
        mayBePrivileged: true
        mayWriteHostPathVolumes: [ /var/lib/kubelet/plugins/cinder.csi.openstack.org, /var/lib/kubelet/plugins_registry/ ]

      - matchNamespace: maintenance-controller
        matchRepository: ccloud/flatcar-linux-update-operator
        justification: |
          TODO
        mayWriteHostPathVolumes: [ /etc/flatcar, /etc/os-release, /usr/share/flatcar, /var/run/dbus ]
      
      - matchNamespace: kube-system
        matchRepository: ccloud-registry-k8s-io-mirror/ingress-nginx/controller
        justification: |
          TODO
        mayUseCapabilities: [ NET_BIND_SERVICE ]

      {{- if eq .Values.cluster_type "cloudshell" "concourse" "internet" "scaleout" }}
      - matchNamespace: kube-system
        matchRepository: ccloud-dockerhub-mirror/library/alpine
        justification: |
          TODO
        mayBePrivileged: true
        mayUseHostPID: true
        mayWriteHostPathVolumes: [ / ]
      {{- end }}

      {{- if eq .Values.cluster_type "baremetal" }}
      - matchNamespace: kube-system
        matchRepository: ccloud-ghcr-io-mirror/sapcc/ccloud-nodecidr-controller
        justification: |
          TODO
        mayUseHostNetwork: true
      {{- end }}

      - matchNamespace: kube-system
        matchRepository: ccloud-registry-k8s-io-mirror/node-problem-detector/node-problem-detector
        justification: |
          TODO
        mayUseHostNetwork: true
        mayBePrivileged: true
        mayWriteHostPathVolumes: [ /etc/localtime, /proc, /var/log/ ]

      {{- if eq .Values.cluster_type "baremetal" }}
      - matchNamespace: kube-system
        matchRepository: ccloud/iptables
        justification: |
          TODO
        mayUseHostNetwork: true
        mayBePrivileged: true

      - matchNamespace: kube-system
        matchRepository: ccloud-ghcr-io-mirror/sapcc/go-pmtud
        justification: |
          TODO
        mayUseHostNetwork: true
        mayBePrivileged: true
      {{- end }}

      {{- if eq .Values.cluster_type "baremetal" }}
      - matchNamespace: kube-system
        matchRepository: ccloud/sysctl
        justification: |
          TODO
        mayUseHostNetwork: true
        mayBePrivileged: true
      {{- end }}

      - matchNamespace: kube-system
        matchRepository: ccloud/toolbox-docker
        justification: |
          TODO
        mayBePrivileged: true
        mayWriteHostPathVolumes: [ /etc/sudoers.d/, /opt/bin/, /root, /var/lib, /var/run/docker.sock ]
      
      - matchNamespace: kube-system
        matchRepository: ccloud/toolbox-sleep
        justification: |
          TODO
        mayBePrivileged: true

      ##########################################################################
      # Rules for observability

      ##########################################################################
      # Rules for openstack-compute

      ##########################################################################
      # Rules for openstack-network

      ##########################################################################
      # Rules for openstack-storage

      ##########################################################################
      # Rules for postfix

      ##########################################################################
      # Rules for px

      ##########################################################################
      # End of rules

{{- end }}
