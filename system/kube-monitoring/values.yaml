global:
  region:
  domain:
  clusterType: metal

  rbac:
    create: true

owner-info:
  support-group: containers
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/system/kube-monitoring-metal

# Values for operated Prometheus collector.
prometheus-server:
  name: kubernetes

  retentionTime: 21d

  additionalScrapeConfigs:
    name: k8s-additional-scrape-config
    key: scrape-config.yaml

  ingress:
    enabled: true
    hosts:
      - prometheus-kubernetes
      - prometheus

  internalIngress:
    enabled: true
    hosts:
      - prometheus-kubernetes-internal
      - prometheus-internal

  persistence:
    enabled: true
    size: 300Gi

  serviceAccount:
    create: false
    name: default

  # Discover targets with `prometheus.io/targets=kubernetes` annotation as well.
  serviceDiscoveries:
    additionalTargets:
      - kubernetes
    endpoints:
      enabled: true
    pods:
      enabled: false
    probes:
      enabled: true
    kubeAPIServer:
      enabled: true
    cAdvisor:
      enabled: true
    kubelet:
      enabled: true
    nodeExporter:
      enabled: true

  # Send alerts to these alertmanagers.
  alertmanagers:
    # Enabled via secrets.
    authentication:
      enabled: false

    hosts:
      - alertmanager-internal.scaleout.eu-de-1.cloud.sap
      - alertmanager-internal.scaleout.eu-nl-1.cloud.sap

  thanos:
    enabled: false

kube-state-metrics:
  image:
    repository: keppel.global.cloud.sap/ccloud-quay-mirror/coreos/kube-state-metrics
    tag: v1.9.7

  podSecurityPolicy:
    enabled: false

  prometheusScrape: false

  collectors:
    certificatesigningrequests: false
    configmaps: false
    cronjobs: true
    daemonsets: true
    deployments: true
    endpoints: true
    horizontalpodautoscalers: true
    ingresses: false
    jobs: true
    limitranges: true
    mutatingwebhookconfigurations: false
    namespaces: true
    networkpolicies: true
    nodes: true
    persistentvolumeclaims: true
    persistentvolumes: true
    poddisruptionbudgets: true
    pods: true
    replicasets: true
    replicationcontrollers: true
    resourcequotas: true
    secrets: false
    services: true
    statefulsets: true
    storageclasses: true
    validatingwebhookconfigurations: false
    verticalpodautoscalers: true
    volumeattachments: true

  customLabels:
    app: kube-state-metrics

  prometheus:
    monitor:
      enabled: false
      honorLabels: true
      additionalLabels:
        prometheus: collector-kubernetes

  resources:
    requests:
      memory: 150Mi
      cpu: 100m

# Deploy basic set of Prometheus alert and aggregation rules for monitoring Kubernetes.
prometheus-kubernetes-rules:
  prometheusName: kubernetes
  prometheusCollectorName: collector-kubernetes
  tier: k8s

prometheus-node-exporter:
  image:
    repository: prom/node-exporter

  serviceAccount:
    create: true

  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tmpfs|tracefs)$$
    - --collector.processes
    - --path.rootfs=/rootfs
    - --collector.systemd.enable-task-metrics
    - --collector.systemd.enable-restarts-metrics
    - --collector.systemd.enable-start-time-metrics

  extraHostVolumeMounts:
    - name: dbus
      hostPath: /var/run/dbus/system_bus_socket
      mountPath: /var/run/dbus/system_bus_socket
      readOnly: true
    - name: rootfs
      hostPath: /
      mountPath: /rootfs
      readOnly: true
      mountPropagation: HostToContainer

  resources:
    requests:
      memory: 100Mi
      cpu: 100m

kube-state-metrics-exporter:
  prometheusName: collector-kubernetes

prober-static:
  prometheusName: kubernetes

http-keep-alive-monitor:
  alert:
    ignore_ingress_names:
      - cfm
