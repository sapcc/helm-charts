groups:
- name: thousandeyes.alerts
  rules:
  - alert: ThousandeyesSuperNovaReachability
    expr: count(label_replace(thousandeyes_alert{test_name=~".*SuperNova.*"}, "region", "global", "test_name", ".*" )) by (rule_name, test_name, rule_expression, type, region) > 1
    for: 5m
    labels:
      severity: warning
      tier: os
      context: "{{ $labels.type}} {{ $labels.test_name }}"
      meta: "Thousandeyes Check: {{ $labels.type}} {{ $labels.rule_expression }} / {{ $labels.test_name }}."
      playbook: /docs/devops/alert/network/thousandeyescheck/#supernova
    annotations:
      description: "`{{ $labels.test_name }}` not reachable."
      summary: "SuperNova offline from internet!"

  - alert: ThousandeyesHTTPReachability
    expr: count(label_replace ( thousandeyes_alert{type="HTTP Server"}, "region", "$1", "test_name", "(^[a-zA-Z0-9-]{7}).*")) by (rule_name, test_name, rule_expression, type, region) > 1
    for: 5m
    labels:
      severity: warning
      tier: os
      context: "{{ $labels.type}} {{ $labels.test_name }}"
      meta: "Thousandeyes Check: {{ $labels.type}} {{ $labels.rule_expression }} / {{ $labels.test_name }}."
      playbook: /docs/devops/alert/network/thousandeyescheck/#honeypots
    annotations:
      description: "External HTTP Test for `{{ $labels.test_name }}` failed."
      summary: "{{ $labels.type }} Alert fires!"

  - alert: ThousandeyesBGPReachability
    expr: count(label_replace ( thousandeyes_alert{type="BGP"}, "region", "$1", "test_name", "(^[a-zA-Z0-9-]*).*" )) by (rule_name, test_name, rule_expression, type, region) > 1
    for: 5m
    labels:
      severity: warning
      tier: net
      context: "{{ $labels.type}} {{ $labels.test_name }}"
      meta: "Thousandeyes Check: {{ $labels.type}} {{ $labels.rule_expression }} / {{ $labels.test_name }}."
      playbook: /docs/devops/alert/network/thousandeyescheck/#bgp
    annotations:
      description: "`{{ $labels.test_name }}` is not reachable. *CIOC (for WAN Team/MIM) should be involved already by a direct ThousandeyesAlert.*"
      summary: "{{ $labels.type }} Alert fires!"

  - alert: ThousandeyesAPIFailureRatio
    expr: rate(thousandeyes_requests_fails[5m]) / rate(thousandeyes_requests_total[5m]) > 0
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "Thousandeyes API not reachable"
        playbook: /docs/devops/alert/network/thousandeyescheck/#failure-ratio
    annotations:
        description: "Thousandeyes API not reachable"
        summary: "Thousandeyes API not reachable"

  - alert: ThousandeyesAPILimit
    expr: thousandeyes_api_request_limit_reached > 0
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "Thousandeyes API limit exceeded"
        playbook: /docs/devops/alert/network/thousandeyescheck/#api-limit
    annotations:
        description: "Thousandeyes API limit exceeded"
        summary: "Thousandeyes API limit exceeded"

  - alert: ThousandeyesAPIScrapeDuration
    expr: rate(thousandeyes_scraping_seconds[5m]) > 1
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "Scraping metrics from Thousandeyes via API takes too long"
        playbook: /docs/devops/alert/network/thousandeyescheck/#scrape-duration
    annotations:
        description: "Scraping metrics from Thousandeyes via API takes too long"
        summary: "Scraping metrics from Thousandeyes via API takes too long"

  - alert: ThousandeyesHTTPPacketLoss
    expr: thousandeyes_test_html_loss_percentage{test_name=~"[A-Z]{2}-[A-Z]{2}-[A-Z0-9]{2}.+"} > 90
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "HTTP Package loss from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} exceeds 90%"
    annotations:
        description: "Package loss from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} exceeds 90%"
        summary: "Package loss from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} exceeds 90%"

  - alert: ThousandeyesHTTPClientError
    expr: thousandeyes_test_html_response_code{test_name=~"[A-Z]{2}-[A-Z]{2}-[A-Z0-9]{2}.+"} < 500 >= 400
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ClientError"
    annotations:
        description: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ClientError"
        summary: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ClientError"

  - alert: ThousandeyesHTTPServerError
    expr: thousandeyes_test_html_response_code{test_name=~"[A-Z]{2}-[A-Z]{2}-[A-Z0-9]{2}.+"} >= 500
    for: 15m
    labels:
        severity: info
        context: thousandeyes
        meta: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ServerError"
    annotations:
        description: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ServerError"
        summary: "Probe from {{ $labels.agent_name}} to {{ $labels.probed_to}} / {{ $labels.dst}} fails with HTTP ServerError"
