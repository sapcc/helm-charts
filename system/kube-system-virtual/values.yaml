global:
  region:
  domain:

externalIPs: 
  ingress: 

ingress:
  tls_client_auth:
    ca_cert:

container-linux-update-operator:
  rbac:
    create: true

kube-proxy:
  selector:   false
  toleration: false
  images:
    proxy: 
      repository: sapcc/hyperkube
      tag: v1.15.2
  clusterCIDR: 10.180.0.0/17

  sidecars:
    parrot:     false
    externalip: false
    nanny:      false
    ipmasq:     false

kube-proxy-capi:
  selector:   false
  toleration: false
  images:
    proxy: 
      repository: sapcc/hyperkube
      tag: v1.15.2
  clusterCIDR: 10.180.0.0/17

  sidecars:
    parrot:     false
    externalip: false
    nanny:      false
    ipmasq:     false
  
kube-flannel:
  image:
    repository: quay.io/coreos/flannel
    tag: v0.11.0-amd64
  kubeConfig: /etc/kubernetes/kubelet/kubeconfig

wormhole:
  interface:
    ipAddress: 1.1.1.1
    port: 6443
  kubeConfig: /etc/kubernetes/kubelet/kubeconfig

disco:
  rbac:
    create: true
    serviceAccountName: disco

cert-manager:
  installCRDs: true
  image:
    repository: keppel.global.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-controller
    tag: v1.13.3
  webhook:
    image:
      repository: keppel.global.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-webhook
  cainjector:
    image:
      repository: keppel.global.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-cainjector
    extraArgs:
    - --leader-elect=false
  startupapicheck:
    image:
      repository: keppel.global.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-ctl
  ingressShim:
    defaultIssuerName: digicert-issuer
    defaultIssuerKind: ClusterIssuer
    defaultIssuerGroup: certmanager.cloud.sap
  prometheus:
    enabled: true
  podAnnotations:
    prometheus.io/targets: kubernetes
  extraArgs:
    - --enable-certificate-owner-ref=true

# For now enabled via regional values.
maintenance-controller:
  enabled: false

metrics-server:
  image:
    repository: keppel.global.cloud.sap/ccloud-registry-k8s-io-mirror/metrics-server/metrics-server

  # Workaround for qa landscapes.
  args:
    - --kubelet-insecure-tls

  replicas: 3
  podLabels:
    k8s-app: metrics-server
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              k8s-app: metrics-server
          namespaces:
            - kube-system
          topologyKey: kubernetes.io/hostname

owner-info:
  support-group: containers
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/system/kube-system-virtual

velero:
  enabled: false

  metrics:
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/path: "/metrics"
      prometheus.io/port: null

  image:
    repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/velero/velero
    tag: v1.11.1

  kubectl:
    image:
      repository: keppel.global.cloud.sap/ccloud-dockerhub-mirror/bitnami/kubectl
      tag: 1.28.3

  initContainers:
  - name: velero-plugin-openstack
    image: keppel.global.cloud.sap/ccloud-dockerhub-mirror/lirt/velero-plugin-for-openstack:v0.6.0
    imagePullPolicy: IfNotPresent
    volumeMounts:
      - mountPath: /target
        name: plugins

  snapshotsEnabled: false
  backupsEnabled: true
  deployNodeAgent: true

  credentials:
    extraSecretRef: velero-credentials

  configuration:
    backupStorageLocation:
    - name: swift
      provider: community.openstack.org/openstack
      bucket: velero-virtual
      config:
        resticRepoPrefix: swift:velero-virtual:/restic

  schedules:
    clusterbackup:
      disabled: false
      schedule: "0 3 * * *"
      template:
        ttl: "720h"
        storageLocation: swift
        excludedResources:
        - events
        - pods
        - nodeleases
        - endpoints

secrets-injector:
  enabled: false
