kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}

spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        name: {{ .Release.Name }}
        alert-tier: k8s
        alert-service: gatekeeper
      annotations:
        checksum/configmap: {{ include "doop-central/templates/configmap.yaml" $ | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: infra-frontend
    spec:
      automountServiceAccountToken: false
      enableServiceLinks: false
      volumes:
        - name: config
          configMap:
            name: {{ .Release.Name }}
      containers:
        - name: web
          image: {{.Values.global.registry | required ".Values.global.registry not found"}}/gatekeeper-addons:{{.Values.image_tag}}
          imagePullPolicy: IfNotPresent
          command: [ doop-central ]
          args: [ ':8080', '/etc/doop-central/docs.html.yaml' ]
          env:
            - name: DOOP_CENTRAL_DEBUG
              value: 'false'
            - name: OS_AUTH_URL
              value: 'https://identity-3.{{.Values.doop.swift_region | required ".Values.doop.swift_region not found"}}.cloud.sap/v3'
            - name: OS_AUTH_VERSION
              value: '3'
            - name: OS_IDENTITY_API_VERSION
              value: '3'
            - name: OS_PROJECT_DOMAIN_NAME
              value: ccadmin
            - name: OS_PROJECT_NAME
              value: master
            - name: OS_REGION_NAME
              value: {{.Values.doop.swift_region | required ".Values.doop.swift_region not found" | quote}}
            - name: OS_USER_DOMAIN_NAME
              value: Default
            - name: OS_USERNAME
              value: doop
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Release.Name }}
                  key: swift_password
            - name: REPORT_CONTAINER_NAME
              {{- if .Values.kubernikus }}
              value: doop-agent-kubernikus
              {{- else }}
              value: doop-agent
              {{- end }}
          ports:
            - name: metrics # also exposes the UI, but this specific name is required for Prometheus scraping
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            timeoutSeconds: 5
            periodSeconds: 5
          resources:
            # observed usage: CPU = 30m, RAM = 60 MiB
            limits:
              cpu: '1'
              memory: '128Mi'
            requests:
              cpu: '50m'
              memory: '128Mi'
          securityContext:
            runAsNonRoot: true
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /etc/doop-central
              name: config
