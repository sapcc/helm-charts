ingress:
  tls_client_auth:
    ca_cert:

disco:
  enabled: true
  rbac:
    create: true
    serviceAccountName: disco

cert-manager:
  installCRDs: true
  image:
    repository: keppel.eu-de-1.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-controller
    tag: v1.13.3
  webhook:
    image:
      repository: keppel.eu-de-1.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-webhook
  cainjector:
    image:
      repository: keppel.eu-de-1.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-cainjector
    extraArgs:
    - --leader-elect=false
  startupapicheck:
    image:
      repository: keppel.eu-de-1.cloud.sap/ccloud-quay-mirror/jetstack/cert-manager-ctl
  ingressShim:
    defaultIssuerName: digicert-issuer
    defaultIssuerKind: ClusterIssuer
    defaultIssuerGroup: certmanager.cloud.sap
  prometheus:
    enabled: true
  podAnnotations:
    prometheus.io/targets: kubernetes
  extraArgs:
    - --enable-certificate-owner-ref=true

metrics-server:
  image:
    repository: keppel.global.cloud.sap/ccloud-registry-k8s-io-mirror/metrics-server/metrics-server

  # Workaround for qa landscapes.
  args:
    - --kubelet-insecure-tls

  replicas: 3
  podLabels:
    k8s-app: metrics-server
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              k8s-app: metrics-server
          namespaces:
            - kube-system
          topologyKey: kubernetes.io/hostname

maintenance-controller:
  enabled: false

vertical-pod-autoscaler:
  recommender:
    prometheus:
      address: https://prometheus-kubernikus.kube-monitoring.svc

secrets-injector:
  enabled: false
