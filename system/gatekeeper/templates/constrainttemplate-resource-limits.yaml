apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkresourcelimits
spec:
  crd:
    spec:
      names:
        kind: GkResourceLimits

  targets:
    - target: admission.k8s.gatekeeper.sh
      libs:
        - |
          {{ .Files.Get "lib/add-support-labels.rego" | nindent 10 }}
        - |
          {{ .Files.Get "lib/traversal.rego" | nindent 10 }}
      rego: |
        package resourcelimits
        import data.lib.add_support_labels
        import data.lib.traversal

        iro := input.review.object
        pod := traversal.find_pod(iro)

        # We have such a bafflingly large amount of violations that
        # Gatekeeper cannot report them all at once. I'd rather have
        # *something* reported for as many things as possible, even if it
        # means sacrificing accuracy, so we report only one violation for
        # each offending pod or pod owner.

        resource_types = {"cpu", "memory"}

        missing_limits[{"container": container.name, "type": resource_type}] {
          pod.isFound
          container := pod.spec.containers[_]
          limits := object.get(container, ["resources", "limits"], {})
          resource_type := resource_types[_]
          object.get(limits, resource_type, "") == ""
        }

        violation[{"msg": add_support_labels.from_k8s_object(iro, msg)}] {
          pod.isFound
          count(missing_limits) > 0
          msg := "CPU and memory limits not set on some or all containers"
        }
