{{- if .Capabilities.APIVersions.Has "templates.gatekeeper.sh/v1" }}
apiVersion: templates.gatekeeper.sh/v1
{{- else }}
apiVersion: templates.gatekeeper.sh/v1beta1
{{- end }}
kind: ConstraintTemplate
metadata:
  name: gkoutdatedimagebases
spec:
  crd:
    spec:
      names:
        kind: GkOutdatedImageBases

  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package outdatedimagebases

        violation[{"msg": msg}] {
          # check each pod container
          obj := input.review.object
          obj.kind == "Pod"
          container := obj.spec.containers[_]

          # only consider images stored in Keppel since we want to inspect the X-Keppel-Min-Layer-Created-At header
          regex.match("^keppel", container.image)

          # query build timestamp of oldest layer through helper API
          url := sprintf("http://doop-image-checker.kube-system.svc/v1/headers?image=%s", [container.image])
          resp := http.send({"url": url, "method": "GET", "timeout": "10s"})
          resp.status_code == 200
          createdAtAsUnixTime := to_number(trim_space(object.get(resp.body, "X-Keppel-Min-Layer-Created-At", "Unclear")))

          # complain if it's older than one year
          nowAsUnixTime := time.now_ns() / 1000000000
          ageInSeconds := nowAsUnixTime - createdAtAsUnixTime
          ageInDays := ageInSeconds / 86400
          ageInDays > 365
          msg := sprintf("image %s for container %q uses a very old base image (oldest layer is %.0f days old)", [container.image, container.name, ageInDays])
        }
