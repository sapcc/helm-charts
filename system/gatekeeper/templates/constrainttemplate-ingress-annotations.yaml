apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: gkingressannotations
spec:
  crd:
    spec:
      names:
        kind: GkIngressAnnotations
      validation:
        # Schema for the `parameters` field
        openAPIV3Schema:
          type: object
          properties:
            hint:
              type: string
            regexes:
              type: array
              items:
                type: string

  targets:
    - target: admission.k8s.gatekeeper.sh
      code:
        - engine: Rego
          source:
            version: "v1"
            libs:
              - |
                {{ .Files.Get "lib/add-support-labels.rego" | nindent 16 }}
            rego: |
              package ingressannotations

              import data.lib.add_support_labels

              iro := input.review.object
              annotations := object.get(iro, ["metadata", "annotations"], {})

              violation contains {"msg": add_support_labels.from_k8s_object(iro, msg)} if {
                  iro.kind == "Ingress"
                  annotations[key]
                  pattern := input.parameters.regexes[_]
                  regex.match(pattern, key)
                  msg := sprintf("has disabled annotation: %q (%s)", [key, input.parameters.hint])
              }
