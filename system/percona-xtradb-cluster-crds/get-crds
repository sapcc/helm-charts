#!/usr/bin/env bash

# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -o errexit
set -o nounset
set -o pipefail

# Check arguments.
if [[ $# -ne 1 ]]; then
    echo -e "This script can be used to get the Percona Operator CRDs from the upstream respository.\nusage: get-crds <version>" >&2
    exit 2
fi
VERSION=$1
RELEASE_URL="https://raw.githubusercontent.com/percona/percona-xtradb-cluster-operator/$VERSION/deploy/crd.yaml"
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
CRDS_DIR="${SCRIPT_DIR}/crds"
TMP_DIR="${SCRIPT_DIR}/tmp/percona-${VERSION}"

echo "Getting Percona Operator CRDs in version ${VERSION}"
resp_code=$(curl -o /dev/null --silent -Iw '%{http_code}' $RELEASE_URL)
if [[ "$resp_code" == "404" ]]; then
  echo "No Percona Operator release in version ${VERSION} found."
  exit 1
fi

rm -r $TMP_DIR || true
mkdir -p $TMP_DIR
cd $TMP_DIR
curl -L -s $RELEASE_URL | yq -s '$index' -
crd_files=$(grep --recursive --files-with-matches -e "kind: CustomResourceDefinition" $TMP_DIR | sort | uniq)
for file in $crd_files; do
  crd_name=$(yq '.metadata.name' $file)
  if [[ -z $crd_name ]]; then
    continue
  fi
  echo "Fetched CRD ${crd_name} to ${CRDS_DIR}/${crd_name}.yaml"
  cp $file "${CRDS_DIR}/${crd_name}.yaml"
done

rm -rf ${SCRIPT_DIR}/tmp
