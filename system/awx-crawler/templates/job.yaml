{{- if .Values.awxApiCrawler.elastic.exporter }}
{{- $schedule := .Values.awxApiCrawler.schedule }}
{{- $awx_url := .Values.awxApiCrawler.awx.url }}
{{- $awx_token := .Values.awxApiCrawler.awx.token }}
{{- $loglevel := .Values.awxApiCrawler.loglevel }}
{{- $image_registry := .Values.awxApiCrawler.image.registry }}
{{- $image_name := .Values.awxApiCrawler.image.name }}
{{- range .Values.awxApiCrawler.elastic.exporter }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cron-awx-api-crawler-{{ .name }}
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade,pre-rollback
    "helm.sh/hook-delete-policy": before-hook-creation
    "helm.sh/hook-weight": "3"
spec:
  schedule: "{{ $schedule }}"
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: awx-api-crawler
            env: {{ .name }}
        spec:
          containers:
          - name: {{ $image_name}}
            image: {{ $image_registry}}
            env:
            - name: ELASTIC_URL
              value: {{ .url }}
            - name: ELASTIC_PASS
              value: {{ .pass }}
            - name: ELASTIC_USER
              value: {{ .user }}
            - name: ELASTIC_INDEX
              value: {{ .index }}
            - name: ELASTIC_ENV
              value: {{ .name }}
            - name: AWX_URL
              value: {{ $awx_url }}
            - name: AWX_TOKEN
              value: {{ $awx_token }}
            - name: LOGLEVEL
              value: {{ $loglevel }}
            volumeMounts:
            - name: data
              mountPath: /mnt/checkpoints
          restartPolicy: Never
          volumes:
            - name: data
              persistentVolumeClaim:
                claimName: awx-api-crawler
{{- end }}
{{- end }}