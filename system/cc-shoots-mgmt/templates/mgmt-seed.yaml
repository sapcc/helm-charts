{{- range $key, $cluster := .Values.mgmtShoots }}
apiVersion: seedmanagement.gardener.cloud/v1alpha1
kind: ManagedSeed
metadata:
  name: mgmt-{{ $key }}
  namespace: garden # Must be garden
spec:
  shoot:
    name: mgmt-{{ $key }}
  config:
    apiVersion: gardenlet.config.gardener.cloud/v1alpha1
    kind: GardenletConfiguration
    gardenClientConnection:
      kubeconfigSecret:
        name: gardenlet-kubeconfig
        namespace: garden
      kubeconfigValidity:
        validity: 72h
    seedConfig:
      metadata:
        labels:
          environment: production
      spec:
        backup:
          provider: openstack          
          region: {{ $key }}
          secretRef:
            name: openstack-{{ $key }}
            namespace: garden
        dns:
          provider:
            type: openstack-designate
            secretRef:
              name: openstack-{{ $key }}
              namespace: garden
        ingress: # see prerequisites
          domain: mgmt-{{ $key }}.soil-garden.global.cloud.sap
          controller:
            kind: nginx
        provider:
          region: {{ $key }}
          type: ironcore-metal
        settings:
          excessCapacityReservation:
            enabled: false
          dependencyWatchdog:
            # The prober can start a vicious downscaling cycle from which a shoot cannot recover itself.
            # Let's assume there is healthy shoot and a machine is added.
            # This machine now fails to join the cluster temporarly for whatever reason.
            # This causes the prober to kick in and it will scale down the controller-manager as well as the MCM.
            # The node now gains network and it's kubelet tries the TLS bootstap.
            # The bootstrap does not go through, because the kubelets CertificateSigningRequest is never approved, because the controller-manager is scaled down.
            # Joining the node successfully is unfortunately required to scale up the controller-manager, which is a loop that cannot self-heal.
            prober:
              enabled: false    
{{- end }}
