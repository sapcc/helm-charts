apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: logs 
spec:
  volumeMounts:
  - mountPath: /var/log
    name: varlog
    readOnly: true
  volumes:
  - name: varlog
    hostPath:
      path: /var/log
  envFrom:
    - secretRef:
         name: otel-basic-auth
  config: |
    receivers:
      filelog:
        include: [ /var/log/containers/*.log ]
        exclude: [ /var/log/containers/logs-collector-*.log ]
        include_file_path: true
        include_file_name: false
        start_at: end
        retry_on_failure:
          enabled: true
        operators:
          - type: router
            id: get-format
            routes:
              - output: parser-containerd
                expr: 'body matches "^[^ Z]+Z"'
            default: parse-time

          # Parse CRI-Containerd format
          - type: regex_parser
            id: parser-containerd
            regex: '^(?P<time>[^ Z]+Z) (?P<stream>stdout|stderr) (?P<logtag>[^ ]*) ?(?P<logs>.*)$'
            timestamp:
              parse_from: attributes.time
              layout: '%Y-%m-%dT%H:%M:%S.%LZ'

          - type: regex_parser
            id: parse-time
            regex: '^(?P<time>[^ Z]+)'
            timestamp:
              parse_from: attributes.time
              layout_type: gotime
              layout: '2006-01-02T15:04:05.999999999'
          - type: move
            from: attributes.logs
            to: body
            
          # Extract metadata from file path
          - type: regex_parser
            id: extract_metadata_from_filepath
            regex: '^.*\/(?P<pod_name>[^_]+)_(?P<namespace>[^_]+)_(?P<container>[a-z].*)\-(?P<uid>[a-f0-9\-]{64})'
            parse_from: attributes["log.file.path"]
            cache:
              size: 128


    exporters:
      debug:
        verbosity: detailed
      opensearch/logs:
        http:
          auth:
            authenticator: basicauth
          endpoint: {{ .Values.open_telemetry.opensearch_logs.endpoint }}
        logs_index: otel-filelog-datastream
    extensions:
      basicauth:
        client_auth:
          password: ${env:password}
          username: ${env:username}
    service:
      extensions:
        - basicauth
      telemetry:
        metrics:
          address: 0.0.0.0:8888
          level: detailed
      pipelines:
        logs:
          receivers:
            - filelog
          exporters:
            - opensearch/logs
