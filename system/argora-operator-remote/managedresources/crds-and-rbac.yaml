---
# Source: argora/templates/rbac/service_account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-db89395-crds"
    app.kubernetes.io/name: argora
    app.kubernetes.io/instance: argora-operator
    app.kubernetes.io/managed-by: Helm
  name: argora-controller-manager
  namespace: kube-system
---
# Source: argora/templates/crd/argora.cloud.sap_updates.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-db89395-crds"
    app.kubernetes.io/name: argora
    app.kubernetes.io/instance: argora-operator
    app.kubernetes.io/managed-by: Helm
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: updates.argora.cloud.sap
spec:
  group: argora.cloud.sap
  names:
    kind: Update
    listKind: UpdateList
    plural: updates
    singular: update
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .status.state
          name: State
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Update is the Schema for the updates API.
          properties:
            apiVersion:
              description: |-
                APIVersion defines the versioned schema of this representation of an object.
                Servers should convert recognized schemas to the latest internal value, and
                may reject unrecognized values.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
              type: string
            kind:
              description: |-
                Kind is a string value representing the REST resource this object represents.
                Servers may infer this from the endpoint the client submits requests to.
                Cannot be updated.
                In CamelCase.
                More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
              type: string
            metadata:
              type: object
            spec:
              description: UpdateSpec defines the desired state of Update.
              properties:
                clusters:
                  items:
                    properties:
                      name:
                        type: string
                      region:
                        type: string
                      type:
                        type: string
                    type: object
                  type: array
              type: object
            status:
              description: UpdateStatus defines the observed state of Update.
              properties:
                conditions:
                  items:
                    description: Condition contains details for one aspect of the current state of this API Resource.
                    properties:
                      lastTransitionTime:
                        description: |-
                          lastTransitionTime is the last time the condition transitioned from one status to another.
                          This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                        format: date-time
                        type: string
                      message:
                        description: |-
                          message is a human readable message indicating details about the transition.
                          This may be an empty string.
                        maxLength: 32768
                        type: string
                      observedGeneration:
                        description: |-
                          observedGeneration represents the .metadata.generation that the condition was set based upon.
                          For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                          with respect to the current state of the instance.
                        format: int64
                        minimum: 0
                        type: integer
                      reason:
                        description: |-
                          reason contains a programmatic identifier indicating the reason for the condition's last transition.
                          Producers of specific condition types may define expected values and meanings for this field,
                          and whether the values are considered a guaranteed API.
                          The value should be a CamelCase string.
                          This field may not be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      status:
                        description: status of the condition, one of True, False, Unknown.
                        enum:
                          - "True"
                          - "False"
                          - Unknown
                        type: string
                      type:
                        description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                    required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                description:
                  type: string
                state:
                  enum:
                    - Ready
                    - Error
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
# Source: argora/templates/rbac/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-db89395-crds"
    app.kubernetes.io/name: argora
    app.kubernetes.io/instance: argora-operator
    app.kubernetes.io/managed-by: Helm
  name: argora-manager-role
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
  - apiGroups:
      - argora.cloud.sap
    resources:
      - updates
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - argora.cloud.sap
    resources:
      - updates/finalizers
    verbs:
      - update
  - apiGroups:
      - argora.cloud.sap
    resources:
      - updates/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - cluster.x-k8s.io
    resources:
      - clusters
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal.ironcore.dev
    resources:
      - bmcs
      - bmcsecrets
      - servers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - metal3.io
    resources:
      - baremetalhosts
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
---
# Source: argora/templates/rbac/role_binding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/version: "0.1.0"
    helm.sh/chart: "0.0.0-db89395-crds"
    app.kubernetes.io/name: argora
    app.kubernetes.io/instance: argora-operator
    app.kubernetes.io/managed-by: Helm
  name: argora-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: argora-manager-role
subjects:
  - kind: ServiceAccount
    name: argora-controller-manager
    namespace: kube-system
---

