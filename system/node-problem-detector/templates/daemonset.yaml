apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-problem-detector
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: '10%'
    type: RollingUpdate
  selector:
    matchLabels:
      app: node-problem-detector
  template:
    metadata:
      labels:
        app: node-problem-detector
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        {{ if .Values.prometheus.enabled }}
        prometheus.io/scrape: "true"
        prometheus.io/port: {{ required ".Values.prometheus.port missing" .Values.prometheus.port | quote }}
        prometheus.io/targets: {{ required ".Values.prometheus.targets missing" .Values.prometheus.targets | quote }}
        {{ end }}
    spec:
      hostNetwork: true
      {{ if .Values.rbac.create -}}
      serviceAccountName: {{ .Values.rbac.serviceAccountName }}
      {{- end }}
      tolerations:
      - key: "species"
        operator: "Exists"
        effect: "NoSchedule"
      containers:
      - name: node-problem-detector
        command:
        - /node-problem-detector
        - --logtostderr
        {{- if .Values.prometheus.enabled }}
        - --prometheus-address=0.0.0.0
        - --prometheus-port={{ required ".Values.prometheusPort missing " .Values.prometheus.port }}
        {{- end }}
        {{- if .Values.systemLogMonitors }}
        - --config.system-log-monitor={{- range $index, $monitor := .Values.systemLogMonitors }}{{if ne $index 0}},{{end}}{{ printf "/config/%s" $monitor }}{{- end }}
        {{- end }}
        {{- if .Values.customPluginMonitors }}
        - --config.custom-plugin-monitor={{- range $index, $monitor := .Values.customPluginMonitors }}{{if ne $index 0}},{{end}}{{ printf "/config/%s" $monitor }}{{- end }}
        {{- end }}
        image: "{{ .Values.global.registryK8sIoMirror }}/{{ required ".Values.image.repository missing" .Values.image.repository }}:{{ required ".Values.image.tag missing" .Values.image.tag }}"
        securityContext:
          privileged: true
        resources:
{{ toYaml .Values.resources | indent 10 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        volumeMounts:
        - name: log
          mountPath: /var/log
          readOnly: true
        # Make sure node problem detector is in the same timezone with the host.
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: config
          mountPath: /config
          readOnly: true
        {{- range $_, $mount := .Values.additionalHostVolumeMounts }}
        - name: {{ $mount.name | lower }}
          mountPath: {{ $mount.mountPath }}
          readOnly: {{ default true $mount.readOnly }}
        {{- end }}
        {{- if .Values.prometheus.enabled }}
        ports:
          - name: metrics
            containerPort: {{ required ".Values.prometheus.port missing" .Values.prometheus.port }}
        {{- end }}
      volumes:
      - name: log
        # Config `log` to your system log directory.
        hostPath:
          path: /var/log/
      - name: localtime
        hostPath:
          path: /etc/localtime
      - name: config
        configMap:
          name: node-problem-detector-config
          defaultMode: 0777
{{- range $_, $mount := .Values.additionalHostVolumeMounts }}
      - name: {{ $mount.name | lower }}
        hostPath:
          path: {{ $mount.hostPath }}
{{- end }}
