apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "provider-metal3.fullname" . }}-controller-manager
  labels:
    cluster.x-k8s.io/provider: infrastructure-metal3
    control-plane: controller-manager
    controller-tools.k8s.io: "1.0"
  {{- include "provider-metal3.labels" . | nindent 4 }}
spec:
  strategy:
    type: {{ .Values.controllerManager.strategy.type | quote }}
  selector:
    matchLabels:
      cluster.x-k8s.io/provider: infrastructure-metal3
      control-plane: controller-manager
      controller-tools.k8s.io: "1.0"
    {{- include "provider-metal3.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        cluster.x-k8s.io/provider: infrastructure-metal3
        control-plane: controller-manager
        controller-tools.k8s.io: "1.0"
        networking.gardener.cloud/to-dns: allowed
        networking.resources.gardener.cloud/to-kube-apiserver-tcp-443: allowed
      {{- include "provider-metal3.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- toYaml .Values.controllerManager.manager.args | nindent 8 }}
        command:
        - /manager
        env:
        - name: KUBERNETES_SERVICE_HOST
          value: {{ quote .Values.controllerManager.manager.env.kubernetesServiceHost }}
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        envFrom:
        - configMapRef:
            name: {{ include "provider-metal3.fullname" . }}-capm3fasttrack-configmap
        image: {{ .Values.controllerManager.manager.image.repository }}:{{ .Values.controllerManager.manager.image.tag
          | default .Chart.AppVersion }}
        imagePullPolicy: {{ .Values.controllerManager.manager.imagePullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 9440
          name: healthz
          protocol: TCP
        - containerPort: 8443
          name: metrics
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
        resources: {}
        securityContext: {{- toYaml .Values.controllerManager.manager.containerSecurityContext
          | nindent 10 }}
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: remote-kubeconfig
          readOnly: true
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      hostNetwork: true
      securityContext: {{- toYaml .Values.controllerManager.podSecurityContext | nindent
        8 }}
      serviceAccountName: {{ include "provider-metal3.fullname" . }}-manager
      terminationGracePeriodSeconds: 10
      tolerations:
      - effect: NoSchedule
        key: node-role.kubernetes.io/master
      - effect: NoSchedule
        key: node-role.kubernetes.io/control-plane
      volumes:
      - name: remote-kubeconfig
        secret:
          items:
          - key: token
            path: token
          - key: bundle.crt
            path: ca.crt
          secretName: ipam-capi-remote-kubeconfig
      - name: cert
        secret:
          defaultMode: 420
          secretName: capm3-webhook-service-cert
