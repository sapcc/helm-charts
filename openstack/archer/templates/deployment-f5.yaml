{{- range $host, $env := .Values.agents.f5 }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: archer-agent-f5-{{ $host }}
  labels:
    app.kubernetes.io/name: archer-agent-f5-{{ $host }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: archer-agent-f5-{{ $host }}
  template:
    metadata:
      {{- with $.Values.podAnnotations }}
      annotations:
        checksum/etc: {{ include (print $.Template.BasePath  "/configmap.yaml") $ | sha256sum }}
        checksum/etc-f5: {{ include (print $.Template.BasePath  "/configmap-f5.yaml") $ | sha256sum }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/name: archer-agent-f5-{{ $host }}
    spec:
      containers:
        - name: {{ $.Chart.Name }}-agent-f5
          securityContext:
          {{- toYaml $.Values.securityContext | nindent 12 }}
          image: "{{ $.Values.global.registry }}/archer:{{ $.Values.image.tag }}"
          command: ["/usr/bin/archer-f5-agent"]
          args: ["--config-file=/etc/archer/archer.ini", "--config-file=/etc/archer/f5.ini"]
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          env:
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ $.Chart.Name }}-agent-f5
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  containerName: {{ $.Chart.Name }}-agent-f5
                  resource: limits.cpu
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: archer.DSN
          ports:
            - name: metrics
              containerPort: {{ required ".Values.metrics.port missing" $.Values.metrics.port }}
              protocol: TCP
          resources:
          {{- toYaml $.Values.resources.f5_agent | nindent 12 }}
          volumeMounts:
            - name: etc-archer
              mountPath: /etc/archer
              readOnly: true
      volumes:
        - name: etc-archer
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: archer-etc
                  items:
                    - key: archer.ini
                      path: archer.ini
              - configMap:
                  name: archer-etc-{{ $host }}
                  items:
                    - key: f5.ini
                      path: f5.ini
{{- end }}