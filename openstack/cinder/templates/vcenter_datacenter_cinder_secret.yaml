{{- if or (.Capabilities.APIVersions.Has "vcenter-operator.stable.sap.cc/v1") (.Values.isImageTransportTemplating | default false) }}
apiVersion: vcenter-operator.stable.sap.cc/v1
kind: VCenterTemplate
metadata:
  name: 'vcenter-datacenter-cinder-secret'
options:
  scope: 'datacenter'
  jinja2_options:
    variable_start_string: '{='
    variable_end_string: '=}'
template: |
  apiVersion: v1
  kind: Secret
  metadata:
    name: volume-vmware-{= name =}
    labels:
      system: openstack
      type: configuration
      component: cinder
      vcenter: {= host =}
      datacenter: {= availability_zone =}
  type: Opaque
  data:
    cinder-volume.conf: {= " " =}
      {%- filter b64enc %}
  [DEFAULT]
  enabled_backends = {{ .Values.backends.enabled }}

  [backend_defaults]
  vmware_host_ip = {= host =}
  {{- if .Values.vmware_host_username | default "" }}
  vmware_host_username = {{ .Values.vmware_host_username }}
  vmware_host_password = {= "{{ .Values.vmware_host_username }}" | derive_password | quote =}
  {{- else }}
  vmware_host_username = {= username | quote =}
  vmware_host_password = {= password | quote =}
  {{- end }}
  backend_availability_zone = {= availability_zone | quote =}
  {{- range $key, $value := .Values.backend_defaults}}
  {{ $key }} = {{ $value }}
  {{- end }}

  [vmware]
  volume_driver = cinder.volume.drivers.vmware.vmdk.VMwareVcVmdkDriver
  volume_backend_name = vmware
  vmware_storage_profile = {{ .Values.backends.vmware.vmware_storage_profile  }}
  extra_capabilities = '{"vcenter-shard": "{= host.split(".")[0] =}"}'

  [standard_hdd]
  volume_driver = cinder.volume.drivers.vmware.vmdk.VMwareVcVmdkDriver
  volume_backend_name = standard_hdd
  vmware_storage_profile = {{ .Values.backends.standard_hdd.vmware_storage_profile }}
  extra_capabilities = '{"vcenter-shard": "{= host.split(".")[0] =}"}'

  {{ range $backend, $kvs := .Values.backends.additional_backends }}
  [{{ $backend }}]
  {{- range $key, $value := $kvs }}
  {{ $key }} = {{ $value }}
  {{- end }}
  {{ end }}

  [vstorageobject]
  volume_driver = cinder.volume.drivers.vmware.fcd.VMwareVStorageObjectDriver
  volume_backend_name = vstorageobject
  {% endfilter -%}
{{- end }}
