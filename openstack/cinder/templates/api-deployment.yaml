kind: Deployment
apiVersion: apps/v1

metadata:
  name: cinder-api
  labels:
    system: openstack
    type: api
    component: cinder
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revisionHistory }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      name: cinder-api
  template:
    metadata:
      labels:
        name: cinder-api
        {{- tuple . "cinder" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | nindent 8 }}
        {{- include "utils.topology.pod_label" . | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        secrets-hash: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.proxysql.mode }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
        {{- end }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
      {{- tuple . "cinder" "api" | include "kubernetes_pod_anti_affinity" | nindent 6 }}
      {{- include "utils.proxysql.pod_settings" . | nindent 6 }}
      {{- tuple . (dict "name" "cinder-api") | include "utils.topology.constraints" | indent 6 }}
      initContainers:
      {{- tuple . (dict "service" (print .Release.Name "-mariadb," .Release.Name "-rabbitmq") "jobs" (include "cinder.migration_job_name" .)) | include "utils.snippets.kubernetes_entrypoint_init_container" | indent 6 }}
      containers:
        - name: cinder-api
          image: {{required ".Values.global.registry is missing" .Values.global.registry}}/loci-cinder:{{.Values.imageVersionCinderApi | default .Values.imageVersion | required "Please set cinder.imageVersion or similar" }}
          imagePullPolicy: {{ required ".Values.global.imagePullPolicy is missing" .Values.global.imagePullPolicy }}
          command:
          {{- if .Values.api.use_uwsgi }}
            - uwsgi
            - --ini
            - /etc/cinder/api_uwsgi.ini
          {{- else }}
            - cinder-api
          {{ end }}
          env:
          - name: STATSD_HOST
            value: "localhost"
          - name: STATSD_PORT
            value: "9125"
          {{- if .Values.sentry.enabled }}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: {{ .Chart.Name }}.DSN.python
          {{- end }}
          {{- if .Values.api.use_uwsgi }}
          - name: OS_OSLO_MESSAGING_RABBIT__HEARTBEAT_IN_PTHREAD
            value: "true"
          {{- end }}
          lifecycle:
            preStop:
              {{- include "utils.snippets.pre_stop_graceful_shutdown" . | indent 14 }}
          livenessProbe:
            httpGet:
              path: /
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: cinder-api
            initialDelaySeconds: 15
            timeoutSeconds: 5
          {{- if .Values.pod.resources.api }}
          resources:
{{ toYaml .Values.pod.resources.api | indent 12 }}
          {{- end }}
          ports:
            - name: cinder-api
              containerPort: {{.Values.cinderApiPortInternal }}
          volumeMounts:
            - name: etccinder
              mountPath: /etc/cinder
            - name: cinder-etc
              mountPath: /etc/cinder/cinder.conf
              subPath: cinder.conf
              readOnly: true
            - name: cinder-etc-confd
              mountPath: /etc/cinder/cinder.conf.d
            - name: cinder-etc
              mountPath: /etc/cinder/api-paste.ini
              subPath: api-paste.ini
              readOnly: true
           {{- if .Values.api.use_uwsgi }}
            - mountPath: /etc/cinder/api_uwsgi.ini
              name: cinder-etc
              subPath: api_uwsgi.ini
              readOnly: true
           {{- end }}
            - name: cinder-etc
              mountPath: /etc/cinder/policy.json
              subPath: policy.json
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/logging.ini
              subPath: logging.ini
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/cinder_audit_map.yaml
              subPath: cinder_audit_map.yaml
              readOnly: true
            - name: cinder-etc
              mountPath: /etc/cinder/resource_filters.json
              subPath: resource_filters.json
              readOnly: true
            {{- if .Values.api_rate_limit.enabled }}
            - name: cinder-etc
              mountPath: /etc/cinder/ratelimit.yaml
              subPath: ratelimit.yaml
              readOnly: true
            {{- end }}
            {{- if .Values.watcher.enabled }}
            - name: cinder-etc
              mountPath: /etc/cinder/watcher.yaml
              subPath: watcher.yaml
              readOnly: true
            {{- end }}
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
            {{- include "utils.coordination.volume_mount" . | indent 12 }}
        {{- include "utils.proxysql.container" . | indent 8 }}
        - name: statsd
          image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror}}/prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{ .Values.port_metrics }}
          volumeMounts:
            - name: cinder-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
 {{- include "jaeger_agent_sidecar" . | indent 8 }}
      volumes:
        - name: etccinder
          emptyDir: {}
        - name: cinder-etc
          configMap:
            name: cinder-etc
        - name: cinder-etc-confd
          secret:
            secretName: {{ .Release.Name }}-secrets
        {{- include "utils.proxysql.volumes" . | indent 8 }}
        {{- include "utils.coordination.volumes" . | indent 8 }}
