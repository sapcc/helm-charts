groups:
- name: openstack-cinder.alerts
  rules:
  - alert: OpenstackCinderVolumeInDeletingState
    expr: count(sum(openstack_stuck_volumes_max_duration_gauge{status="deleting"}) BY (id,display_name) > 120) by (id, display_name)
    for: 5m
    labels:
      dashboard: cinder
      meta: 'Volume {{ $labels.display_name }} in Deleting state since {{ $value }}s'
      playbook: docs/support/playbook/volumes
      support_group: compute-storage-api
      service: cinder
      severity: info
      tier: os
    annotations:
      description: Volume {{ $labels.display_name }} with {{ $labels.id }} in Deleting State
      summary: Cinder Volumes taking more than 2 minutes to delete

  - alert: OpenstackCinderVolumeInAttachingState
    expr: count(sum(openstack_stuck_volumes_max_duration_gauge{status="attaching"}) BY (id,display_name) > 3600) by (id, display_name)
    for: 5m
    labels:
      dashboard: cinder
      meta: 'Volume {{ $labels.display_name }} in Attaching state since {{ $value }}s'
      playbook: docs/support/playbook/cinder/cinder_attaching_stuck
      support_group: compute-storage-api
      service: cinder
      severity: warning
      tier: os
    annotations:
      description: Volume {{ $labels.display_name }} with {{ $labels.id }} in Attaching State
      summary: Cinder Volumes taking more than 1 hour to attach

  - alert: OpenstackCinderVolumeInDetachingState
    expr: count(sum(openstack_stuck_volumes_max_duration_gauge{status="detaching"}) BY (id,display_name) > 15) by (id, display_name)
    for: 5m
    labels:
      dashboard: cinder
      meta: 'Volume {{ $labels.display_name }} in Detaching state since {{ $value }}s'
      playbook: docs/support/playbook/volumes
      support_group: compute-storage-api
      service: cinder
      severity: info
      tier: os
    annotations:
      description: Volume {{ $labels.display_name }} with {{ $labels.id }} in Detaching State
      summary: Cinder Volumes taking more than 15s to detach

  - alert: OpenstackCinderNannyCronjobNotCompleting
    # This is a copy of [Sebastian Krott's](https://github.com/seb-kro) 
    # [nova nanny alert](https://github.com/sapcc/helm-charts/commit/b9cfda5fa068221c19d56d7d34e2bcbf50e214da).
    #
    # We need to cover two distinct scenarios. Jobs that consistently terminate
    # with an error and a jobs that do not terminate. We rely on the following
    # assumptions
    # - cronjobs schedule multiple jobs per day
    # - cronjobs have `concurrencyPolicy: Forbid`, i.e., no new jobs are
    # scheduled while a previous job is still running
    # We trigger an alert if all of the three following conditions hold true:
    # 1) The cronjob was created at least 24h ago.
    # 2) No job has terminated successfully within the last 24h.
    # NOTE: `time() - kube_cronjob_status_last_successful_time` does not exist
    # for a cronjob that has never terminated successfully. In this case, we
    # use `kube_cronjob_status_last_schedule_time` as a default. This exists as
    # soon as the first job is running and is always >= 24h since we directly
    # use the timestamp instead of the timedelta.
    # 3) A job has been scheduled within the last 24h OR at least one job is
    # currently active.
    # NOTE: This prevents the alert from firing if a cronjob is disabled. The
    # first part holds true for jobs that are consistently failing. But if a job
    # does not terminate, then new jobs were no longer scheduled. So we cover
    # non-terminating jobs by the second part.
    expr: >
      time() - kube_cronjob_created{cronjob=~"cinder-nanny-.*"} >= 24*60*60
      and on(cronjob) (time() - kube_cronjob_status_last_successful_time{cronjob=~"cinder-nanny-.*"}
        or on(cronjob) kube_cronjob_status_last_schedule_time{cronjob=~"cinder-nanny-.*"}) >= 24*60*60
      and on(cronjob) (time() - kube_cronjob_status_last_schedule_time{cronjob=~"cinder-nanny-.*"} < 24*60*60
        or on(cronjob) kube_cronjob_status_active{cronjob=~"cinder-nanny-.*"} >= 1)
    labels:
      service: cinder
      severity: info
      support_group: compute-storage-api
      tier: os
      context: "Cinder Nanny Cronjob {{ $labels.cronjob }}"
      meta: "Cinder Nanny Cronjob {{ $labels.cronjob }} has not successfully completed in the last 24h."
    annotations:
      description: "Cinder Nanny Cronjob `{{ $labels.cronjob }}` has not successfully completed in the last 24h."
      summary: "Openstack Cinder Nanny Cronjob is not completing."