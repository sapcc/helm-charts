groups:
  - name: manila-limes
    rules:
      # building a heuristic to tell how much space is consumed by backend (non-manila) snapmirror replication.
      # we look at the source (volume_type is not dp)
      # we only look at volumes that have dedicated snapshot policy: case insensitive hxm_backups or ec2_backups
      # we require share type and project id to be able to associate to valid billing targets.
      # last over time to bridge gaps of missing metrics.
      # max by the labels that limes is expecting: availability_zone, project_id, share_id, share_type

      - record: netapp_snapmirror_capacity_total_bytes
        expr: |
            netapp_volume_total_bytes:pre * on (app, host, svm, volume)
                group_left(snapshot_policy, state) netapp_volume_labels{
                    project_id!="",
                    share_type!="",
                    snapshot_policy=~"(?i:(hxm|ec2))_(?i:(backups))",
                    state="online",
                    volume_type!="dp"}

      - record: netapp_snapmirror_capacity_total_bytes_for_limes
        expr: |
            max by (availability_zone, project_id, share_id, share_type) (
                last_over_time(netapp_snapmirror_capacity_total_bytes[15m]))

      - record: netapp_snapmirror_capacity_used_bytes
        expr: |
            netapp_volume_used_bytes:pre * on (app, host, svm, volume)
                group_left(snapshot_policy, state) netapp_volume_labels{
                    project_id!="",
                    share_type!="",
                    snapshot_policy=~"(?i:(hxm|ec2))_(?i:(backups))",
                    state="online",
                    volume_type!="dp"}

      - record: netapp_snapmirror_capacity_used_bytes_for_limes
        expr: |
            max by (availability_zone, project_id, share_id, share_type) (
                last_over_time(netapp_snapmirror_capacity_used_bytes[15m]))

