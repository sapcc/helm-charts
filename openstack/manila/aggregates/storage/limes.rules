groups:
  - name: manila-limes
    rules:
      # building a heuristic to tell how much space is consumed by backend (non-manila) snapmirror replication.
      # we look at the source (volume_type is not dp)
      # we only look at volumes that have dedicated snapshot policy: case insensitive hxm_backups or ec2_backups
      # we require share type and project id to be able to associate to valid billing targets.
      # we multiply the source bytes with the count of target snapmirrors, that are not matching the manila naming pattern
      # such EC2DR (different region) or EC2BKP (same region) snapmirrors are setup outside of manila
      # and have a (not so easily predictable) suffix at the vserver name.
      # last over time to bridge gaps of missing metrics.
      # max by the labels that limes is expecting: availability_zone, project_id, share_id, share_type

      - record: netapp_snapmirror_capacity_count
        expr: |
            count by (volume) (label_replace(
                    last_over_time(
                        netapp_snapmirror_endpoint_labels{
                            destination_vserver!~"ma_[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"}[15m]
                    ),
                    "volume", "$1", "source_volume", "(.*)"))

      - record: netapp_snapmirror_capacity_total_bytes:single
        expr: |
            netapp_volume_total_bytes:pre * on (app, host, svm, volume)
                group_left(snapshot_policy, state) netapp_volume_labels{
                    project_id!="",
                    share_type!="",
                    snapshot_policy=~"(?i:(hxm|ec2))_(?i:(backups))",
                    state="online",
                    volume_type!="dp"}

      - record: netapp_snapmirror_capacity_total_bytes
        expr: |
            netapp_snapmirror_capacity_total_bytes:single * on(volume) group_left() netapp_snapmirror_capacity_count

      - record: netapp_snapmirror_capacity_total_bytes_for_limes
        expr: |
            max by (availability_zone, project_id, share_id, share_type) (
                last_over_time(netapp_snapmirror_capacity_total_bytes[15m]))

      - record: netapp_snapmirror_capacity_used_bytes:single
        expr: |
            netapp_volume_used_bytes:pre * on (app, host, svm, volume)
                group_left(snapshot_policy, state) netapp_volume_labels{
                    project_id!="",
                    share_type!="",
                    snapshot_policy=~"(?i:(hxm|ec2))_(?i:(backups))",
                    state="online",
                    volume_type!="dp"}

      - record: netapp_snapmirror_capacity_used_bytes
        expr: |
            netapp_snapmirror_capacity_used_bytes:single * on(volume) group_left() netapp_snapmirror_capacity_count

      - record: netapp_snapmirror_capacity_used_bytes_for_limes
        expr: |
            max by (availability_zone, project_id, share_id, share_type) (
                last_over_time(netapp_snapmirror_capacity_used_bytes[15m]))

