{{/* As this runs as a pre-upgrade hook, we can only use the proxysql side-car if a previous
     deployment has already deployed the corresponding configmap.
     So if we want to switch to or from a proxysql.mode=unix_socket setting, we need
     first to deploy with proxysql.mode=host_alias as an intermediate step,
     so this script can still work with the previous setting.
     Similarily we can only use the secret if a previous helm deployment added
     it.
*/}}
{{- $proxysql := lookup "v1" "Secret" .Release.Namespace (print .Release.Name "-proxysql-etc") -}}
{{- $secrets := lookup "v1" "Secret" .Release.Namespace (print .Release.Name "-secrets") -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-migration
  labels:
    system: openstack
    type: configuration
    component: manila
    alert-tier: os
    alert-service: manila
    # hooks are not labeled as belonging to the Helm release, so we cannot rely on owner-info injection
    ccloud/support-group: compute-storage-api
    ccloud/service: manila
  annotations:
    "helm.sh/hook": "post-install,pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      annotations:
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
      restartPolicy: OnFailure
{{- if $proxysql }}
      {{- include "utils.proxysql.job_pod_settings" . | indent 6 }}
{{- end }}
      initContainers:
      {{- tuple . (dict "service" (print .Release.Name "-mariadb")) | include "utils.snippets.kubernetes_entrypoint_init_container" | indent 6 }}
      containers:
        - name: manila-migration
          image: {{.Values.global.registry}}/loci-manila:{{.Values.loci.imageVersion}}
          imagePullPolicy: IfNotPresent
          command:
            - /container.init/db-migrate
          env:
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN_SSL
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: manila.DSN
            - name: SENTRY_DSN
              value: $(SENTRY_DSN_SSL)?verify_ssl=0
            {{- end }}
          volumeMounts:
            - name: etcmanila
              mountPath: /etc/manila
            - name: manila-etc
              mountPath: /etc/manila/manila.conf
              subPath: manila.conf
              readOnly: true
{{- if $secrets }}
            - name: manila-etc-confd
              mountPath: /etc/manila/manila.conf.d
{{- end }}
            - name: manila-etc
              mountPath: /etc/manila/policy.yaml
              subPath: policy.yaml
              readOnly: true
            - name: manila-etc
              mountPath: /etc/manila/logging.ini
              subPath: logging.ini
              readOnly: true
            - mountPath: /container.init
              name: container-init
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
{{- if $proxysql }}
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
        {{- include "utils.proxysql.container" . | indent 8 }}
{{- end }}
      volumes:
        - name: etcmanila
          emptyDir: {}
        - name: manila-etc
          configMap:
            name: {{ .Release.Name }}-etc
{{- if $secrets }}
        - name: manila-etc-confd
          secret:
            secretName: {{ .Release.Name }}-secrets
{{- end }}
        - name: container-init
          configMap:
            name: {{ .Release.Name }}-bin
            defaultMode: 0755
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
{{- if $proxysql }}
        {{- include "utils.proxysql.volumes" . | indent 8 }}
{{- end }}
