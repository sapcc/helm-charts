{{- if .Values.swift_injector }}
{{ range $az_long, $apods := .Values.global.apods }}
{{ range $k, $apod := $apods }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neutron-swift-injector-{{ $apod }}
  labels:
    system: openstack
    application: neutron
    component: swift-injector
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: neutron-swift-injector-{{ $apod }}
  serviceName: neutron-swift-injector
  podManagementPolicy: "Parallel"
  replicas: {{ $.Values.pod.replicas.network_agent | default "1" }}
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[{ "name": "cbr1-bridge", "interface":"{{$.Values.cp_network_interface}}" }]'
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") $ | sha256sum }}
        configmap-etc-apod-hash: {{ include (print $.Template.BasePath "/configmap-etc-apod.yaml") $ | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required "$.Values.metrics.prometheus missing" $.Values.metrics.prometheus }}
        {{- include "utils.linkerd.pod_and_service_annotation" $ | indent 8 }}
      labels:
        name: neutron-swift-injector-{{ $apod }}
{{ tuple $ "neutron" "swift-injector" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 50
            podAffinityTerm:
              topologyKey: kubernetes.io/hostname
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - agent
          - weight: 100
            podAffinityTerm:
              topologyKey: kubernetes.cloud.sap/host
              labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - agent
      nodeSelector:
        multus: bond1
        topology.kubernetes.io/zone: {{ $az_long }}
        kubernetes.cloud.sap/apod: {{ $apod }}
      containers:
        - name: swift-agent
          image: {{ $.Values.global.registry }}/network-injector:{{ $.Values.imageVersionNetworkInjector | default "latest" }}
          imagePullPolicy: IfNotPresent
          command:
            - "dumb-init"
            - "/manager"
            - "-upstream-host"
            - {{ include "swift_endpoint_host" $ | quote }}
            - "-network-tag"
            - "cc-swift-injector-{{ $apod }}"
            - "-injector-dns"
            - "swift"
          env:
            - name: OS_AUTH_URL
              value: {{ $.Values.global.keystone_api_endpoint_protocol_internal | default "http" }}://{{ include "keystone_api_endpoint_host_internal" $ }}:{{ $.Values.global.keystone_api_port_internal | default 5000 }}/v3
            - name: OS_DOMAIN_NAME
              value: {{ $.Values.global.keystone_service_domain | default "Default" }}
            - name: OS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: neutron-swift-injector-secrets
                  key: OS_USERNAME
            - name: OS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: neutron-swift-injector-secrets
                  key: OS_PASSWORD
            - name: OS_REGION_NAME
              value: {{ $.Values.global.region }}
            - name: OS_TENANT_NAME
              value: {{ $.Values.global.keystone_service_project |  default "service" }}
            - name: OS_USER_DOMAIN_NAME
              value: {{ $.Values.global.keystone_service_domain | default "Default" }}
            {{- include "utils.trust_bundle.env" $ | indent 12 }}
          securityContext:
            privileged: true
          volumeMounts:
            - name: network-namespace
              mountPath: /var/run/netns
            - name: socat-proxy
              mountPath: /var/run/socat-proxy
            {{- include "utils.trust_bundle.volume_mount" $ | indent 12 }}
          ports:
            - name: metrics-inject
              containerPort: 8080
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-inject
        - name: neutron-linuxbridge-agent
          image: {{$.Values.global.registry}}/loci-neutron:{{$.Values.imageVersionNetworkAgentLinuxBridge | default $.Values.imageVersionNetworkAgent | default $.Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentLinuxBridge or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-linuxbridge-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-dir", "/etc/neutron/secrets", "--config-file", "/etc/neutron/plugins/ml2/ml2_conf.ini", "--config-file", "/etc/neutron/linux-bridge.ini", "--config-file", "/etc/neutron/apod-{{ $apod }}.conf"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
            - name: PYTHONWARNINGS
              value: "ignore:Unverified HTTPS request"
            {{- include "utils.trust_bundle.env" $ | indent 12 }}
          readinessProbe:
            exec:
              command: ["neutron-agent-liveness", "--config-file", "/etc/neutron/neutron.conf",  "--config-file", "/etc/neutron/secrets/neutron-common-secrets.conf", "-agent-type", "Linux bridge agent"]
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - DAC_OVERRIDE
                - DAC_READ_SEARCH
                - SYS_PTRACE
          resources:
{{ toYaml $.Values.pod.resources.linuxbridge_agent | indent 12 }}
          volumeMounts:
            - mountPath: /lib/modules
              name: modules
              readOnly: true
            - name: etc-neutron-linuxbridge-agent
              mountPath: /etc/neutron
              readOnly: true
            - name: neutron-etc
              mountPath: /etc/sudoers
              subPath: sudoers
              readOnly: true
            - name: network-namespace
              mountPath: /var/run/netns
            {{- include "utils.trust_bundle.volume_mount" $ | indent 12 }}
        - name: socat
          image: {{ $.Values.global.registry }}/network-injector:{{ $.Values.imageVersionNetworkInjector | default "latest" }}
          imagePullPolicy: IfNotPresent
          command:
            - "dumb-init"
            - "socat"
            - "UNIX-LISTEN:/var/run/socat-proxy/proxy.sock,fork,reuseaddr,unlink-early,user=nobody,group=nobody,mode=777"
            - "TCP:swift-proxy-internal-cluster-3.swift.svc.kubernetes.{{ include "host_fqdn" $ }}:8080"
          volumeMounts:
            - name: socat-proxy
              mountPath: /var/run/socat-proxy
      volumes:
        - name: network-namespace
          emptyDir: {}
        - name: socat-proxy
          emptyDir: {}
        - name: modules
          hostPath:
            path: /lib/modules
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: etc-neutron-linuxbridge-agent
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: neutron-etc
                items:
                - key: neutron.conf
                  path: neutron.conf
                - key: logging.conf
                  path: logging.conf
                - key: rootwrap.conf
                  path: rootwrap.conf
                - key: linux-bridge.ini
                  path: linux-bridge.ini
                - key: ml2-conf.ini
                  path: plugins/ml2/ml2_conf.ini
            - configMap:
                name: neutron-etc-apod
                items:
                - key: apod-{{ $apod }}.conf
                  path: apod-{{ $apod }}.conf
            - secret:
                name: neutron-common-secrets
                items:
                  - key: neutron-common-secrets.conf
                    path: secrets/neutron-common-secrets.conf
        {{- include "utils.trust_bundle.volumes" $ | indent 8 }}
{{- end }}
{{- end }}
{{- end }}
