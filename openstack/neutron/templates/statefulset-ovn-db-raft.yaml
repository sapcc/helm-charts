{{- if ((.Values).ovn).enabled | default false }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: ovnkube-db
  annotations:
    kubernetes.io/description: |
      This statefulset launches the OVN Northbound/Southbound Database raft clusters.
spec:
  serviceName: ovnkube-db
  podManagementPolicy: "Parallel"
  replicas: {{ default 3 .Values.ovn.replicas }}
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      name: ovnkube-db
  template:
    metadata:
      labels:
        name: ovnkube-db
        component: network
        type: infra
        kubernetes.io/os: "linux"
        ovn-db-pod: "true"
    spec:
      priorityClassName: "system-cluster-critical"
      terminationGracePeriodSeconds: 30
      imagePullSecrets:
        - name: registry-credentials
      serviceAccountName: ovnkube-db
      hostNetwork: true
      dnsPolicy: Default

      # required to be scheduled on node with k8s.ovn.org/ovnkube-db=true label but can
      # only have one instance per node
      #affinity:
      #  nodeAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #      nodeSelectorTerms:
      #      - matchExpressions:
      #        - key: k8s.ovn.org/ovnkube-db
      #          operator: In
      #          values:
      #          - "true"
      #  podAntiAffinity:
      #    requiredDuringSchedulingIgnoredDuringExecution:
      #    - labelSelector:
      #        matchExpressions:
      #        - key: name
      #          operator: In
      #          values:
      #          - ovnkube-db
      #      topologyKey: kubernetes.io/hostname

      containers:
      # nb-ovsdb - v3
      - name: nb-ovsdb
        image: {{ required ".Values.global.ghcrIoMirror is missing" $.Values.global.ghcrIoMirror }}/ovn-org/ovn-kubernetes/ovn-kube-ubuntu:{{ $.Values.ovn.imageVersionOVN | required "Please set neutron.imageVersionOVN or similar" }}
        imagePullPolicy: "IfNotPresent"
        command: ["/root/ovnkube.sh", "nb-ovsdb-raft"]
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnnb-db-raft"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # ovn db is stored in the pod in /etc/openvswitch
        # (or in /etc/ovn if OVN from new repository is used)
        # and on the host in /var/lib/openvswitch/
        - mountPath: /etc/openvswitch/
          name: host-var-lib-ovs
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources: {{ toYaml $.Values.ovn.resources | nindent 10 }}
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_NB
          value: {{ default "-vconsole:info -vfile:info" .Values.ovn.nbLogLevel }}
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_SSL_ENABLE
          value: {{ default "" .Values.ovn.enableSsl | quote }}
        - name: ENABLE_IPSEC
          value: {{ hasKey .Values.ovn "enableIpsec" | ternary .Values.ovn.enableIpsec false | quote }}
        - name: OVN_NB_RAFT_ELECTION_TIMER
          value: {{ default 1000 .Values.ovn.nbElectionTimer | quote }}
        - name: OVN_NB_PORT
          value: {{ default 6641 .Values.ovn.nbPort | quote }}
        - name: OVN_NB_RAFT_PORT
          value: {{ default 6643 .Values.ovn.nbRaftPort | quote }}
      # end of container

      # sb-ovsdb - v3
      - name: sb-ovsdb
        image: {{ required ".Values.global.ghcrIoMirror is missing" $.Values.global.ghcrIoMirror }}/ovn-org/ovn-kubernetes/ovn-kube-ubuntu:{{ $.Values.ovn.imageVersionOVN | required "Please set neutron.imageVersionOVN or similar" }}
        imagePullPolicy: "IfNotPresent"
        command: ["/root/ovnkube.sh", "sb-ovsdb-raft"]
        readinessProbe:
          exec:
            command: ["/usr/bin/ovn-kube-util", "readiness-probe", "-t", "ovnsb-db-raft"]
          initialDelaySeconds: 30
          timeoutSeconds: 30
          periodSeconds: 60
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # ovn db is stored in the pod in /etc/openvswitch
        # (or in /etc/ovn if OVN from new repository is used)
        # and on the host in /var/lib/openvswitch/
        - mountPath: /etc/openvswitch/
          name: host-var-lib-ovs
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources: {{ toYaml $.Values.ovn.resources | nindent 10 }}
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVN_LOGLEVEL_SB
          value: {{ default "-vconsole:info -vfile:info" .Values.ovn.sbLogLevel }}
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_SSL_ENABLE
          value: {{ default "" .Values.ovn.enableSsl | quote }}
        - name: OVN_SB_RAFT_ELECTION_TIMER
          value: {{ default 1000 .Values.ovn.sbElectionTimer | quote }}
        - name: OVN_SB_PORT
          value: {{ default 6642 .Values.ovn.sbPort | quote }}
        - name: OVN_SB_RAFT_PORT
          value: {{ default 6644 .Values.ovn.sbRaftPort | quote }}
      # end of container


      # ovn-dbchecker - v3
      - name: ovn-dbchecker
        image: {{ required ".Values.global.ghcrIoMirror is missing" $.Values.global.ghcrIoMirror }}/ovn-org/ovn-kubernetes/ovn-kube-ubuntu:{{ $.Values.ovn.imageVersionOVN | required "Please set neutron.imageVersionOVN or similar" }}
        imagePullPolicy: "IfNotPresent"
        command: ["/root/ovnkube.sh", "ovn-dbchecker"]
        securityContext:
          runAsUser: 0
          capabilities:
            add: ["NET_ADMIN"]
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # ovn db is stored in the pod in /etc/openvswitch
        # (or in /etc/ovn if OVN from new repository is used)
        # and on the host in /var/lib/openvswitch/
        - mountPath: /etc/openvswitch/
          name: host-var-lib-ovs
        - mountPath: /etc/ovn/
          name: host-var-lib-ovs
        - mountPath: /var/log/openvswitch/
          name: host-var-log-ovs
        - mountPath: /var/log/ovn/
          name: host-var-log-ovs
        - mountPath: /var/run/openvswitch/
          name: host-var-run-ovs
        - mountPath: /var/run/ovn/
          name: host-var-run-ovs
        - mountPath: /ovn-cert
          name: host-ovn-cert
          readOnly: true
        resources: {{ toYaml $.Values.ovn.resources | nindent 10 }}
        env:
        - name: OVN_DAEMONSET_VERSION
          value: "1.0.0"
        - name: OVNKUBE_LOGLEVEL
          value: {{ default 4 .Values.ovn.dbCheckerLogLevel | quote }}
        - name: OVNKUBE_LOGFILE_MAXSIZE
          value: {{ default 100 .Values.ovn.logFileMaxSize | quote }}
        - name: OVNKUBE_LOGFILE_MAXBACKUPS
          value: {{ default 5 .Values.ovn.logFileMaxBackups | quote }}
        - name: OVNKUBE_LOGFILE_MAXAGE
          value: {{ default 5 .Values.ovn.logFileMaxAge | quote }}
        - name: K8S_APISERVER
          valueFrom:
            configMapKeyRef:
              name: ovn-config
              key: k8s_apiserver
        - name: OVN_KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: K8S_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: OVN_SSL_ENABLE
          value: {{ default "" .Values.ovn.enableSsl | quote }}
        - name: OVN_NB_RAFT_ELECTION_TIMER
          value: {{ default 1000 .Values.ovn.nbElectionTimer | quote }}
        - name: OVN_NB_PORT
          value: {{ default 6641 .Values.ovn.nbPort | quote }}
        - name: OVN_NB_RAFT_PORT
          value: {{ default 6643 .Values.ovn.nbRaftPort | quote }}
      # end of container

      volumes:
      - name: host-var-log-ovs
        hostPath:
          path: /var/log/openvswitch
      - name: host-var-lib-ovs
        hostPath:
          path: /var/lib/openvswitch
      - name: host-var-run-ovs
        hostPath:
          path: /var/run/openvswitch
      - name: host-ovn-cert
        hostPath:
          path: /etc/ovn
          type: DirectoryOrCreate
      tolerations:
      - operator: "Exists"
{{- end }}
