kind: Deployment
apiVersion: apps/v1

metadata:
  name: neutron-aci-agent
  labels:
    system: openstack
    type: backend
    component: neutron
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: neutron-aci-agent
  template:
    metadata:
      labels:
        name: neutron-aci-agent
{{ tuple . "neutron" "aci-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        pod.beta.kubernetes.io/hostname:  aci-agent-pet
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        configmap-etc-region-hash: {{ include (print $.Template.BasePath "/configmap-etc-region.yaml") . | sha256sum }}
    spec:
      hostname:  aci-agent-pet
      containers:
        - name: neutron-aci-agent
          image: {{.Values.global.registry}}/loci-neutron:{{.Values.imageVersionACI | default .Values.imageVersion | required "Please set neutron.imageVersionACI or similar"}}
          imagePullPolicy: IfNotPresent
          command: ['/var/lib/openstack/bin/python']
          args:
            - /var/lib/openstack/bin/neutron-aci-agent
            - --config-file
            - /etc/neutron/neutron.conf
            - --config-file
            - /etc/neutron/plugins/ml2/ml2-conf.ini
            - --config-file
            - /etc/neutron/plugins/ml2/ml2-conf-aci.ini
          livenessProbe:
            exec:
              command: ["neutron-agent-liveness", "--agent-type", "ACI Agent", "--config-file", "/etc/neutron/neutron.conf"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
{{ toYaml .Values.pod.resources.aci_agent | indent 12 }}
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - mountPath: /development
              name: development
            - mountPath: /etc/neutron
              name: empty-dir
            - mountPath: /etc/neutron/neutron.conf
              name: neutron-etc
              subPath: neutron.conf
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf.ini
              name: neutron-etc
              subPath: ml2-conf.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-aci.ini
              name: neutron-etc-region
              subPath: ml2-conf-aci.ini
              readOnly: true
            - mountPath: /etc/neutron/policy.json
              name: neutron-etc
              subPath: neutron-policy.json
              readOnly: true
            - mountPath: /etc/neutron/rootwrap.conf
              name: neutron-etc
              subPath: rootwrap.conf
              readOnly: true
            - mountPath: /etc/neutron/logging.conf
              name: neutron-etc
              subPath: logging.conf
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: development
          persistentVolumeClaim:
            claimName: development-pvclaim
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-etc-region
          configMap:
            name: neutron-etc-region
