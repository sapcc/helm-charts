{{- if .Values.api.uwsgi }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: neutron-rpc-server
  labels:
    system: openstack
    type: rpc
    component: neutron
  {{- if .Values.vpa.set_main_container }}
  annotations:
    vpa-butler.cloud.sap/main-container: neutron-rpc-server
  {{- end }}
spec:
  replicas: {{ if not .Values.pod.debug.rpc_server }}{{ .Values.pod.replicas.rpc_server }}{{ else }} 1 {{ end }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: neutron-rpc-server
  template:
    metadata:
      labels:
        name: neutron-rpc-server
{{ tuple . "neutron" "rpc" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        configmap-etc-region-hash: {{ include (print $.Template.BasePath "/configmap-etc-region.yaml") . | sha256sum }}
        configmap-etc-vendor-hash: {{ include (print $.Template.BasePath "/configmap-etc-vendor.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/configmap-bin.yaml") . | sha256sum }}
        {{- if .Values.cc_fabric.enabled }}
        configmap-etc-cc-fabric: {{ include (print $.Template.BasePath "/configmap-etc-cc-fabric.yaml") . | sha256sum }}
        secret-cc-fabric: {{ include (print $.Template.BasePath "/secret-cc-fabric.yaml") $ | sha256sum }}
        {{- end }}
        {{- if .Values.proxysql.mode }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required "$.Values.metrics.prometheus missing" $.Values.metrics.prometheus }}
        {{- end }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
{{ tuple . "neutron" "rpc" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      {{- include "utils.proxysql.pod_settings" . | indent 6 }}
      containers:
        - name: neutron-rpc-server
          image: {{.Values.global.registry}}/loci-neutron:{{.Values.imageVersionServerRPC | default .Values.imageVersionServer | default .Values.imageVersion | required "Please set neutron.imageVersion or similar"}}
          imagePullPolicy: IfNotPresent
          command: ['dumb-init', 'kubernetes-entrypoint']
          env:
            - name: COMMAND
              value: "neutron-rpc-server --config-file /etc/neutron/neutron.conf --config-dir /etc/neutron/secrets --config-file /etc/neutron/plugins/ml2/ml2-conf.ini --config-file /etc/neutron/plugins/ml2/ml2-conf-aci.ini --config-file /etc/neutron/plugins/ml2/ml2-conf-manila.ini --config-file /etc/neutron/plugins/ml2/ml2-conf-arista.ini --config-file /etc/neutron/plugins/ml2/ml2-conf-asr1k.ini {{- if .Values.bgp_vpn.enabled }} --config-file /etc/neutron/networking-bgpvpn.conf{{- end }}{{- if .Values.interconnection.enabled }} --config-file /etc/neutron/networking-interconnection.conf{{- end }}{{- if .Values.fwaas.enabled }} --config-file /etc/neutron/neutron-fwaas.ini{{- end }}{{- if .Values.cc_fabric.enabled }} --config-file /etc/neutron/plugins/ml2/ml2_conf_cc-fabric.ini {{- end }}"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "{{ include "neutron.migration_job_name" . }}"
            - name: DEPENDENCY_SERVICE
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: STATSD_PREFIX
              value: "openstack"
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: PGAPPNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PYTHONWARNINGS
              value: "ignore:Unverified HTTPS request"
            {{- include "utils.trust_bundle.env" . | indent 12 }}
          resources:
{{ toYaml .Values.pod.resources.rpc_server | indent 12 }}
          volumeMounts:
            - mountPath: /etc/neutron
              name: empty-dir
            - mountPath: /etc/neutron/neutron.conf
              name: neutron-etc
              subPath: neutron.conf
              readOnly: true
            - mountPath: /etc/neutron/secrets/neutron-server-secrets.conf
              name: neutron-server-secrets
              subPath: neutron-server-secrets.conf
            - mountPath: /etc/neutron/secrets/neutron-common-secrets.conf
              name: neutron-common-secrets
              subPath: neutron-common-secrets.conf
            - mountPath: /etc/neutron/secrets/neutron-interconnection-secrets.conf
              name: neutron-interconnection-secrets
              subPath: neutron-interconnection-secrets.conf
            - mountPath: /etc/neutron/secrets/neutron-arista-secrets.conf
              name: neutron-arista-secrets
              subPath: neutron-arista-secrets.conf
            - mountPath: /etc/neutron/logging.conf
              name: neutron-etc
              subPath: logging.conf
              readOnly: true
{{- if .Values.cc_fabric.enabled }}
            - mountPath: /etc/neutron/plugins/ml2/ml2_conf_cc-fabric.ini
              name: neutron-etc-cc-fabric
              subPath: ml2_conf_cc-fabric.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/cc-fabric-driver-config.yaml
              name: neutron-etc-cc-fabric
              subPath: cc-fabric-driver-config.yaml
              readOnly: true
            - mountPath: /etc/neutron/cc-fabric-secrets/
              name: neutron-cc-fabric-secrets
{{- end }}
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf.ini
              name: neutron-etc
              subPath: ml2-conf.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-aci.ini
              name: neutron-etc-region
              subPath: ml2-conf-aci.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-arista.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-arista.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-manila.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-manila.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-asr1k.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-asr1k.ini
              readOnly: true
            {{- if .Values.bgp_vpn.enabled }}
            - mountPath: /etc/neutron/networking-bgpvpn.conf
              name: neutron-etc
              subPath: networking-bgpvpn.conf
              readOnly: true
            {{- end}}
            {{- if .Values.interconnection.enabled }}
            - mountPath: /etc/neutron/networking-interconnection.conf
              name: neutron-etc
              subPath: networking-interconnection.conf
              readOnly: true
            {{- end}}
            {{- if .Values.fwaas.enabled }}
            - mountPath: /etc/neutron/neutron-fwaas.ini
              name: neutron-etc
              subPath: neutron-fwaas.ini
              readOnly: true
            {{- end}}
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
            {{- include "utils.coordination.volume_mount"  . | indent 12 }}
        {{- tuple . (add .Values.rpc_workers .Values.rpc_state_workers)| include "utils.proxysql.container" | indent 8 }}
{{- include "jaeger_agent_sidecar" . | indent 8 }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-server-secrets
          secret:
            secretName: neutron-server-secrets
        - name: neutron-common-secrets
          secret:
            secretName: neutron-common-secrets
        - name: neutron-interconnection-secrets
          secret:
            secretName: neutron-interconnection-secrets
        - name: neutron-arista-secrets
          secret:
            secretName: neutron-arista-secrets
{{- if .Values.cc_fabric.enabled }}
        - name: neutron-etc-cc-fabric
          configMap:
            name: neutron-etc-cc-fabric
        - name: neutron-cc-fabric-secrets
          secret:
            secretName: neutron-cc-fabric-secrets
{{- end }}
        - name: neutron-etc-vendor
          configMap:
            name: neutron-etc-vendor
        - name: neutron-etc-region
          configMap:
            name: neutron-etc-region
        - name: neutron-bin
          configMap:
            name: neutron-bin
            defaultMode: 0755
        {{- include "utils.proxysql.volumes" . | indent 8 }}
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
        {{- include "utils.coordination.volumes" . | indent 8 }}
{{- end }}
