kind: Deployment
apiVersion: apps/v1

metadata:
  name: neutron-server
  labels:
    system: openstack
    type: api
    component: neutron
spec:
  replicas: {{ if not .Values.pod.debug.server }}{{ .Values.pod.replicas.server }}{{ else }} 1 {{ end }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      name: neutron-server
  template:
    metadata:
      labels:
        name: neutron-server
{{ tuple . "neutron" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") . | sha256sum }}
        configmap-etc-region-hash: {{ include (print $.Template.BasePath "/configmap-etc-region.yaml") . | sha256sum }}
        configmap-etc-vendor-hash: {{ include (print $.Template.BasePath "/configmap-etc-vendor.yaml") . | sha256sum }}
{{- if .Values.api.uwsgi }}
        configmap-etc-api-hash: {{ include (print $.Template.BasePath "/configmap-etc-api.yaml") . | sha256sum }}
{{- else }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/configmap-bin.yaml") . | sha256sum }}
{{- end }}
    spec:
{{ tuple . "neutron" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      containers:
        - name: neutron-server
          image: {{.Values.global.registry}}/loci-neutron:{{.Values.imageVersionServerAPI | default .Values.imageVersionServer | default .Values.imageVersion | required "Please set neutron.imageVersion or similar"}}
          imagePullPolicy: IfNotPresent
{{- if not .Values.pod.debug.server }}
{{- if not .Values.api.uwsgi }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.global.neutron_api_port_internal | default 9696}}
            initialDelaySeconds: 120
            timeoutSeconds: 5
            periodSeconds: 30
{{- end }}
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.global.neutron_api_port_internal | default 9696}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
{{- end }}
          command: ['dumb-init', 'kubernetes-entrypoint']
          env:
            - name: COMMAND
{{- if .Values.api.uwsgi }}
              value: "uwsgi --ini /etc/neutron/uwsgi.ini"
{{- else }}
              value: "/container.init/neutron-server-start"
{{- end }}
            - name: DEBUG_CONTAINER
            {{- if .Values.pod.debug.server }}
              value: "true"
            {{- else}}
              value: "false"
            {{- end }}
{{- if .Values.api.uwsgi }}
            - name: OS_OSLO_MESSAGING_RABBIT__HEARTBEAT_IN_PTHREAD
              value: "true"
{{- end }}
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: "neutron-migration-{{ .Values.imageVersion }}"
            - name: DEPENDENCY_SERVICE
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq"
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: STATSD_PREFIX
              value: "openstack"
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: PGAPPNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: PYTHONWARNINGS
              value: "ignore:Unverified HTTPS request"
          resources:
{{- if .Values.api.uwsgi }}
{{ toYaml .Values.pod.resources.uwsgi_server | indent 12 }}
{{- else }}
{{ toYaml .Values.pod.resources.server | indent 12 }}
{{- end }}
          ports:
            - name: neutron-api
              containerPort: {{.Values.global.neutron_api_port_internal | default 9696}}
          volumeMounts:
{{- if .Values.api.uwsgi }}
            - mountPath: /etc/neutron
              name: empty-dir
            - mountPath: /etc/neutron/neutron.conf
              name: neutron-etc
              subPath: neutron.conf
              readOnly: true
            - mountPath: /etc/neutron/plugins/asr1k-global.ini
              name: neutron-etc
              subPath: asr1k-global.ini
              readOnly: true
            - mountPath: /etc/neutron/policy.json
              name: neutron-etc
              subPath: neutron-policy.json
              readOnly: true
            - mountPath: /etc/neutron/rootwrap.conf
              name: neutron-etc
              subPath: rootwrap.conf
              readOnly: true
            - mountPath: /etc/neutron/api-paste.ini
              name: neutron-etc
              subPath: api-paste.ini
              readOnly: true
            - mountPath: /etc/neutron/logging.conf
              name: neutron-etc
              subPath: logging.conf
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf.ini
              name: neutron-etc
              subPath: ml2-conf.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-aci.ini
              name: neutron-etc-region
              subPath: ml2-conf-aci.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-arista.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-arista.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-manila.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-manila.ini
              readOnly: true
            - mountPath: /etc/neutron/plugins/ml2/ml2-conf-asr1k.ini
              name: neutron-etc-vendor
              subPath: ml2-conf-asr1k.ini
              readOnly: true
            {{- if .Values.bgp_vpn.enabled }}
            - mountPath: /etc/neutron/networking-bgpvpn.conf
              name: neutron-etc
              subPath: networking-bgpvpn.conf
              readOnly: true
            {{- end}}
            {{- if .Values.interconnection.enabled }}
            - mountPath: /etc/neutron/networking-interconnection.conf
              name: neutron-etc
              subPath: networking-interconnection.conf
              readOnly: true
            {{- end}}
            {{- if .Values.fwaas.enabled }}
            - mountPath: /etc/neutron/neutron-fwaas.ini
              name: neutron-etc
              subPath: neutron-fwaas.ini
              readOnly: true
            {{- end}}
            {{- if .Values.audit.enabled }}
            - mountPath: /etc/neutron/neutron_audit_map.yaml
              name: neutron-etc
              subPath: neutron_audit_map.yaml
              readOnly: true
            {{- end }}
            {{- if .Values.watcher.enabled }}
            - mountPath: /etc/neutron/watcher.yaml
              name: neutron-etc
              subPath: watcher.yaml
              readOnly: true
            {{- end }}
            {{- if .Values.pod.debug.server }}
            - mountPath: /development
              name: development
            {{- end }}
            {{- if .Values.api.uwsgi }}
            - mountPath: /etc/neutron/uwsgi.ini
              name: neutron-etc-api
              subPath: uwsgi.ini
              readOnly: true
            {{- end }}
{{- else }}
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /neutron-etc-vendor
              name: neutron-etc-vendor
            - mountPath: /neutron-etc-region
              name: neutron-etc-region
            - mountPath: /container.init
              name: container-init
            {{- if .Values.pod.debug.server }}
            - mountPath: /development
              name: development
            {{- end }}

{{- end }}
        - name: statsd
          image: {{.Values.global.dockerHubMirror}}/prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.port_metrics}}
          volumeMounts:
            - name: neutron-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
      volumes:
        - name: empty-dir
          emptyDir: {}
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-etc-vendor
          configMap:
            name: neutron-etc-vendor
        - name: neutron-etc-region
          configMap:
            name: neutron-etc-region
{{- if .Values.pod.debug.server }}
        - name: development
          persistentVolumeClaim:
            claimName: development-pvclaim
{{- end }}
{{- if .Values.api.uwsgi }}
        - name: neutron-etc-api
          configMap:
            name: neutron-etc-api
{{- end }}
        - name: container-init
          configMap:
            name: neutron-bin
            defaultMode: 0755
