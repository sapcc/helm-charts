{{- if and (.Values.agent.multus | default false) .Values.agent.controlplane }}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: neutron-metadata-agent
  labels:
    system: openstack
    application: neutron
    component: metadata-agent
spec:
  updateStrategy:
{{- if or (eq .Values.global.region "qa-de-1") (eq .Values.global.region "staging") }}
    type: RollingUpdate
{{- else }}
    type: OnDelete
{{- end }}
  selector:
    matchLabels:
      name: neutron-metadata-agent
  template:
    metadata:
      annotations:
        configmap-etc-hash: {{ include (print .Template.BasePath "/configmap-etc.yaml") $ | sha256sum }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
      labels:
        name: neutron-metadata-agent
{{ tuple . "neutron" "metadata-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.cloud.sap/apod
                operator: DoesNotExist
      nodeSelector:
        multus: bond1
      containers:
        - name: neutron-metadata-agent
          image: {{.Values.global.registry}}/loci-neutron:{{$.Values.imageVersionNetworkAgentMetadata | default $.Values.imageVersionNetworkAgent | default $.Values.imageVersion | required "Please set neutron.imageVersionNetworkAgentMetadata or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "bash", "-c", "echo -e \"[DEFAULT]\\nhost = $NODE_NAME\\n\" > /run/hostname.conf && exec neutron-metadata-agent --config-file /etc/neutron/neutron.conf --config-dir /etc/neutron/secrets/ --config-file /etc/neutron/metadata-agent.ini --config-file /run/hostname.conf"]
          env:
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
            - name: DEBUG_CONTAINER
              value: "false"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- include "utils.trust_bundle.env" . | indent 12 }}
          livenessProbe:
            exec:
              command: ["neutron-agent-liveness", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/secrets/neutron-common-secrets.conf", "--config-file", "/run/hostname.conf", "--agent-type", "Metadata agent"]
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          resources:
{{  toYaml .Values.pod.resources.metadata_agent | indent 12 }}
          volumeMounts:
            - name: metadata-proxy
              mountPath: /run/metadata_proxy
            - name: etc-neutron
              mountPath: /etc/neutron
              readOnly: true
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
      volumes:
        - name: metadata-proxy
          hostPath:
            path: /run/metadata-proxy
        - name: etc-neutron
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: neutron-etc
                items:
                - key: neutron.conf
                  path: neutron.conf
                - key: logging.conf
                  path: logging.conf
                - key: metadata-agent.ini
                  path: metadata-agent.ini
            - secret:
                name: neutron-common-secrets
                items:
                  - key: neutron-common-secrets.conf
                    path: secrets/neutron-common-secrets.conf
            - secret:
                name: neutron-metadata-secrets
                items:
                  - key: neutron-metadata-secrets.conf
                    path: secrets/neutron-metadata-secrets.conf
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
  {{- end }}
