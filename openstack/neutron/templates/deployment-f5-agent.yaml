{{- if contains ",f5" .Values.ml2_mechanismdrivers }}
{{- $envAll := . }}
{{- range $lb := .Values.new_f5.loadbalancers }}
---
kind: Deployment
apiVersion: apps/v1

metadata:
  name: neutron-f5-agent-{{ $lb.name }}
  labels:
    system: openstack
    type: backend
    component: neutron
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: neutron-f5-{{ $lb.name }}
  template:
    metadata:
      labels:
        name: neutron-f5-{{ $lb.name }}
{{ tuple $envAll "neutron" "f5-agent" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        pod.beta.kubernetes.io/hostname: neutron-f5-{{ $lb.name }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" $.Values.alerts.prometheus | quote }}
        configmap-etc-hash: {{ include (print $.Template.BasePath "/configmap-etc.yaml") $ | sha256sum }}
        configmap-f5-agent: {{ include (print $.Template.BasePath "/configmap-f5-agent.yaml") $ | sha256sum }}
    spec:
      hostname: neutron-f5-{{ $lb.name }}
      containers:
        - name: neutron-f5-agent
          image: {{$envAll.Values.global.registry}}/loci-neutron:{{ $.Values.imageVersion | required "Please set neutron.imageVersion or similar"}}
          imagePullPolicy: IfNotPresent
          command: ["dumb-init", "neutron-f5-agent", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/plugins/ml2/f5-agent.conf.ini"]
          livenessProbe:
            exec:
              command: ["neutron-agent-liveness", "--config-file", "/etc/neutron/neutron.conf", "--config-file", "/etc/neutron/plugins/ml2/f5-agent.conf.ini", "--agent-type", "F5 Agent"]
            initialDelaySeconds: 300
            periodSeconds: 60
            timeoutSeconds: 15
          env:
            - name: DEBUG_CONTAINER
              value: "false"
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: neutron.DSN.python
          volumeMounts:
            - name: etc-neutron
              mountPath: /etc/neutron
              readOnly: true
      volumes:
        - name: etc-neutron
          projected:
            defaultMode: 420
            sources:
            - configMap:
                name: neutron-etc
                items:
                - key: neutron.conf
                  path: neutron.conf
                - key: logging.conf
                  path: logging.conf
            - configMap:
                name: neutron-f5-agent-{{ $lb.name }}
                items:
                - key: f5-agent.conf.ini
                  path: plugins/ml2/f5-agent.conf.ini
{{- end }}
{{- end -}}
