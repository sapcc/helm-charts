logLevel: info

# Required:
# keystoneEndpoint:
# region:
# ca:
#   certificate:
#   privateKey:
#
# agentUpdateURL:
# agentEndpointURL:

owner-info:
  support-group: containers
  service: automation # optional
  maintainers:
    - Arturo Reuschenbach Puncernau
    - Fabian Ruff
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/openstack/arc

global:
  domain_seeds:
    skip_hcm_domain: false

api:
  replicaCount: 2
  image:
    repository: sapcc/arc
    tag: latest
    pullPolicy: IfNotPresent
  service:
    name: arc
    type: LoadBalancer
    externalPort: 80
    internalPort: 80
    externalTLSPort: 443
    internalTLSPort: 443
    # externalIP: 8.8.8.8
  tls:
    enabled: false
  ingress:
    enabled: false
    #tlsCertificate:
    #tlsKey:

updatesProxy:
  cache: true
  createContainers: false
  replicaCount: 2
  #storageUrl: https://objectstore.example.com/v1/AUTH_asdadadad/
  #ingress:
  #  - tlsCertificate:
  #    privateKey:
  #    hosts: []
  #channels:
  #  - name: stable.arc.example.con
  #    container: arc-releases-stable

postgresql:
  enabled: true

pgbackup:
  database:
    name: arc_production
  alerts:
    support_group: containers

pgmetrics:
  db_name: arc_production
  alerts:
    support_group: containers

  customMetrics:
    arc:
      query: "select split_part(facts->>'arc_version', ' ', 1) as arc_version, facts->>'platform_family' as os, count(*) AS active_agents FROM agents where facts->>'online'='true' AND updated_at > now() - INTERVAL '1 hour' group by 1, facts->>'platform_family' order by arc_version;"
      metrics:
        - active_agents:
            usage: GAUGE
            description: "Online agents"
        - arc_version:
            usage: LABEL
        - os:
            usage: LABEL

mosquitto:
  alerts:
    prometheus: openstack

# Deploy Arc Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack
