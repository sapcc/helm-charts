{{ if .Values.hermes.deploy_kibana }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: hermes
  labels:
    system: openstack
    service: audit

spec:
  replicas: 1
  selector:
    matchLabels:
      component: kibana
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        component: kibana
      annotations:
        checksum/hermes-templates-kibana-etc-configmap.yaml: {{ include "hermes/templates/kibana-etc-configmap.yaml" . | sha256sum }}
    spec:
      nodeSelector:
        zone: farm
      volumes:
        - name: hermes-etc
          configMap:
            name: kibana-etc
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:{{.Values.hermes_image_version_kibana}}
          imagePullPolicy: IfNotPresent
          args:
            - "/bin/bash"
            - "/usr/local/bin/kibana-docker"
          env:
            - name: COMMAND
              value: "/opt/kibana/bin/kibana -c /hermes-etc/kibana.yml"
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: nodejs
              containerPort: {{.Values.hermes_kibana_port_public}}
          volumeMounts:
            - mountPath: /hermes-etc
              name: hermes-etc
          resources:
            requests:
              memory: {{.Values.resources_requests_memory_ki}}
              cpu: {{.Values.resources_requests_cpu_ki}}
{{ end }}
