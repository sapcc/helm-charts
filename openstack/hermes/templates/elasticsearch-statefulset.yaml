{{- if .Values.elasticsearch.statefulSet.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch
  namespace: hermes
  labels:
    system: openstack
    service: audit
    component: elasticsearch
#  annotations:
#    kubernetes.io/change-cause: {{.Values.cluster_deployment_reason}}
spec:
  selector:
    matchLabels:
      component: elasticsearch
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  template:
    metadata:
      labels:
        component: elasticsearch
      annotations:
        checksum/elasticsearch-etc-configmap.yaml: {{ include "hermes/templates/elasticsearch-etc-configmap.yaml" . | sha256sum }}
        descheduler.alpha.kubernetes.io/evict : "false"

    spec:
      initContainers:
        - name: esinit
          image: keppel.eu-de-1.cloud.sap/ccloud-dockerhub-mirror/library/busybox
          imagePullPolicy: IfNotPresent
          command:
            - /bin/sh
            - -c
            - chown -R 1000:1000 /data &&
              mkdir -p /data/es-config &&
              chown -R 1000:1000 /data/es-config &&
              cp /hermes-etc/* /data/es-config &&
              mkdir -p /data/es-config/scripts &&
              mkdir -p /data/snapshots &&
              chown -R 1000:1000 /data/snapshots &&
              touch /data/es-config/elasticsearch.keystore && rm /data/es-config/elasticsearch.keystore
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /data
            - name: hermes-etc
              mountPath: /hermes-etc
      nodeSelector:
        zone: farm
      volumes:
        - name: hermes-etc
          configMap:
            name: elasticsearch-etc
      containers:
        - name: elasticsearch
          image: {{.Values.global.elasticCoMirror}}/elasticsearch/elasticsearch:{{.Values.hermes_image_version_elasticsearch}}
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
          #command: ["/bin/bash", "-c", "while true; do sleep 1000; done"]
          command: [elasticsearch]
          env:
            # tell elasticsearch where to find jvm.options
            - name: ES_JVM_OPTS
              value: "/data/es-config/jvm.options"
            - name: ES_PATH_CONF
              value: "/data/es-config/"
            - name: discovery.seed_hosts
              value: "{{- range $i := until (int .Values.elasticsearch.statefulSet.replicas) -}}{{- if $i -}},{{- end -}}elasticsearch-{{ $i -}}{{- end -}}"
            - name: cluster.initial_master_nodes
              value: "{{- range $i := until (int .Values.elasticsearch.statefulSet.replicas) -}}{{- if $i -}},{{- end -}}elasticsearch-{{ $i -}}{{- end -}}"
          volumeMounts:
            - name: elasticsearch-data
              mountPath: /data
          resources:
            requests:
              memory: {{required ".Values.resources_requests_memory_es is missing" .Values.resources_requests_memory_es}}
              cpu: {{required ".Values.resources_requests_cpu_es is missing" .Values.resources_requests_cpu_es}}
          ports:
            - name: transport
              containerPort: 9300
              protocol: TCP
            - name: http
              containerPort: 9200
              protocol: TCP
  volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 100Gi
{{- end }}