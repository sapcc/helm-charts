kind: Deployment
apiVersion: apps/v1

metadata:
  name: castellum-api
  labels:
    release: "{{.Release.Name}}"

spec:
  minReadySeconds: 10 # to capture errors from config parsing
  revisionHistoryLimit: 5
  replicas: 2
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      name: castellum-api
  template:
    metadata:
      labels:
        name: castellum-api
        app: castellum-api
        alert-tier: os
        alert-service: castellum
      annotations:
        checksum/configmap: {{ include "castellum/templates/configmap.yaml" $ | sha256sum }}
        checksum/secrets: {{ include "castellum/templates/secret.yaml" $ | sha256sum }}
        kubectl.kubernetes.io/default-container: api
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: name
                  operator: In
                  values:
                  - castellum-api
              topologyKey: "kubernetes.io/hostname"
            weight: 10
      volumes:
        - name: config
          configMap:
            name: castellum
        - name: certs
          secret:
            secretName: castellum-certs
      containers:
        - name: api
          image: {{ include "castellum_image" . }}
          imagePullPolicy: IfNotPresent
          args:
            - api
            - /etc/castellum/castellum.yaml
          env: {{ include "castellum_common_envvars" . | indent 12 }}
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /etc/castellum
              name: config
            - mountPath: /etc/castellum-certs
              name: certs
          ports:
            - name: http
              containerPort: 8080
          {{- include "castellum_liveness_readiness_probes" . | indent 10 }}
          # NOTE: observed usage in eu-de-2 (as of 2021-08)
          # - CPU: 20m baseline, plus spikes when there are actual requests
          # - RAM: levels off around 30-50 Mi
          resources:
            requests:
              cpu: "30m"
              memory: "100Mi"
            limits:
              cpu: "200m"
              memory: "100Mi"
