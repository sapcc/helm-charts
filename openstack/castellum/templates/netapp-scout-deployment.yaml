{{- if .Values.castellum.asset_managers | has "nfs-shares" }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: castellum-netapp-scout
  labels:
    release: "{{.Release.Name}}"

spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  selector:
    matchLabels:
      name: castellum-netapp-scout
  template:
    metadata:
      labels:
        name: castellum-netapp-scout
        app: castellum-netapp-scout
        alert-tier: os
        alert-service: castellum
      annotations:
        checksum/configmap: {{ include "castellum/templates/configmap.yaml" $ | sha256sum }}
        checksum/secrets: {{ include "castellum/templates/secret.yaml" $ | sha256sum }}
    spec:
      volumes:
        - name: config
          configMap:
            name: castellum
        - name: certs
          secret:
            secretName: castellum-certs
      containers:
        - name: scout
          image: {{ include "castellum_image" . }}
          imagePullPolicy: {{ .Values.castellum.image_pull_policy }}
          command: [ /usr/bin/castellum-netapp-scout ]
          args: [ /etc/castellum/netapp-scout.yaml ]
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /etc/castellum
              name: config
            - mountPath: /etc/castellum-certs
              name: certs
          ports:
            - name: http
              containerPort: 8080
          {{- include "castellum_liveness_readiness_probes" . | indent 10 }}
          startupProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            # This pod is afforded more time to start up because it needs to load up all NetApp metrics first. The
            # healthcheck will fail until the first round of data collection is complete. Note that 3 minutes is
            # EXTREMELY generous. Usually the data collection is done in under a second for small regions, or under 10
            # seconds for large regions.
            initialDelaySeconds: 10
            periodSeconds: 1
            failureThreshold: 180
            successThreshold: 1
          # NOTE: observed usage in eu-de-1 as of 2023-03
          # - CPU: 90-130m
          # - RAM: 80-90Mi
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
            limits:
              cpu: '1'
              memory: 200Mi
{{- end }}
