# Default values for barbican.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value
#
#
global:
  imageNamespace: monsoon
  master_password: ""
  dbUser: barbican

pod:
  lifecycle:
    upgrades:
      deployments:
        revisionHistory: 5
        podReplacementStrategy: RollingUpdate
        rollingUpdate:
          maxUnavailable: 0
          maxSurge: 1

api_port_internal: '9311'
debug: "True"

statsd:
  port: 9102
  image:
    repository:  prom/statsd-exporter
    tag: v0.20.1

db_name: barbican

postgresql:
  enabled: false

mariadb:
  enabled: true
  name: barbican
  initdb_configmap: barbican-initdb
  persistence_claim:
    name: db-barbican-pvclaim
  backup_v2:
    enable_init_restore: true

mysql_metrics:
  db_name: barbican
  db_user: barbican
  customMetrics:
    - help: Barbican container count by type
      labels:
      - "id"
      - "status"
      - "container_name"
      - "project_id"
      - "type"
      name: openstack_barbican_containers_count_gauge
      query: |
        SELECT
          containers.name  AS container_name,
          containers.type,
          containers.id,
          containers.status,
          projects.external_id  AS project_id,
          COUNT(*) AS count_gauge
        from containers
        INNER JOIN
          projects
        on
          containers.project_id=projects.id
        where
          containers.deleted='false'
        GROUP BY
          containers.name,
          containers.type,
          containers.id,
          containers.status,
          projects.external_id;
      values:
      - "count_gauge"
    - help: Barbican secret count by type
      labels:
      - "id"
      - "status"
      - "secret_name"
      - "expiration"
      - "project_id"
      - "secret_type"
      name: openstack_barbican_secrets_count_gauge
      query: |
        SELECT
          secrets.id,
          secrets.status,
          COALESCE(secrets.name, "No Secret Name") AS secret_name,
          UNIX_TIMESTAMP(STR_TO_DATE(IFNULL(secrets.expiration,'1970-01-01 00:00:00'), '%Y-%c-%e %T')) AS expiration,
          projects.external_id  AS project_id,
          secrets.secret_type ,
          COUNT(*)  AS count_gauge
        from secrets
        INNER JOIN projects
        on secrets.project_id=projects.id
        where secrets.deleted='false'
        GROUP BY secrets.id, secrets.status, secrets.name, projects.external_id, secrets.secret_type, secrets.expiration;
      values:
      - "count_gauge"
    - help: Barbican container expiration date
      labels:
      - "expiration_date"
      - "certificate_name"
      - "project_id"
      - "creator_id"
      name: openstack_barbican_certificate_expiration_date
      query: |
        SELECT
          UNIX_TIMESTAMP(STR_TO_DATE(IFNULL(secrets.expiration,'1970-01-01 00:00:00'), '%Y-%c-%e %T')) AS expiration_date,
          secrets.name  AS certificate_name,
          creator_id,
          projects.external_id  AS project_id,
          COUNT(*)  AS count_gauge
        from secrets
        INNER JOIN projects
        on secrets.project_id=projects.id
        where secrets.deleted='false' AND secret_type='certificate' AND expiration!='0'
        GROUP BY secrets.creator_id, secrets.name, projects.external_id, secrets.expiration;
      values:
      - "expiration_date"


rabbitmq:
  persistence:
    enabled: false

logging:
  formatters:
    context:
      class: oslo_log.formatters.ContextFormatter
    default:
      format: "%(message)s"
  handlers:
    stdout:
      class: StreamHandler
      args: "(sys.stdout,)"
      formatter: context
    "null":
      class: logging.NullHandler
      formatter: default
      args: "()"
    sentry:
      class: raven.handlers.logging.SentryHandler
      level: ERROR
      args: "()"
  loggers:
    root:
      handlers: stdout, sentry
      level: WARNING
    barbican:
      handlers: stdout, sentry
      level: INFO
    eventlet.wsgi.server:
      handlers: stdout, sentry
      level: INFO
    sqlalchemy.engine.base.Engine:
      handlers: stdout, sentry
      level: WARNING

sentry:
  enabled: true

tlsacme: true

# sapcc/openstack-rate-limit-middleware
sapcc_rate_limit:
  enabled: true
  persistence:
    enabled: false
    
# sapcc/openstack-watcher-middleware
watcher:
  enabled: true

# sapcc/openstack-audit-middleware
audit:
  enabled: true

# Deploy Barbican Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack
