apiVersion: batch/v1
kind: Job
metadata:
  # since this name changes with every image change, removal and creation of
  # this Job happens on nearly every deployment. Check the helm-chart changes
  # to see if this needs more review.
  name: {{ tuple . "migration-job" | include "job_name" }}
  labels:
    app: {{ template "name" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    component: glance
spec:
  template:
    metadata:
      labels:
        alert-tier: os
        alert-service: glance
{{ tuple . "glance" "migration" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        chart-version: {{.Chart.Version}}
        checksum/etc-configmap.conf: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        secrets-hash: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
{{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
      restartPolicy: OnFailure
      {{- include "utils.proxysql.job_pod_settings" . | indent 6 }}
      initContainers:
      {{- tuple . (dict "service" (print .Release.Name "-mariadb" )) | include "utils.snippets.kubernetes_entrypoint_init_container" | indent 6 }}
      containers:
      - name: glance-migration
        image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-glance:{{ required "Please set glance.imageVersion or similar" .Values.imageVersion }}
        imagePullPolicy: IfNotPresent
        command:
        - dumb-init
        - bash
        - -c
        - |
          glance-manage db_sync
          {{- include "utils.script.job_finished_hook" . | nindent 10 }}
        env:
        {{- include "utils.trust_bundle.env" . | indent 8 }}
        {{- if .Values.migration_job_resources.enabled }}
        resources:
          limits:
            cpu: {{ .Values.api.resources.limits.cpu | quote }}
            memory: {{ .Values.api.resources.limits.memory | quote }}
          requests:
            cpu: {{ .Values.api.resources.requests.cpu | quote }}
            memory: {{ .Values.api.resources.requests.memory | quote }}
        {{- end }}
        volumeMounts:
          - mountPath: /etc/glance
            name: etcglance
          - mountPath: /etc/glance/glance.conf
            name: glance-etc
            subPath: glance-api.conf
            readOnly: true
          - name: glance-etc-confd
            mountPath: /etc/glance/glance.conf.d
            readOnly: true
          {{- if not .Values.swift.multi_tenant }}
          - mountPath: /etc/glance/swift-store.conf
            name: glance-etc
            subPath: swift-store.conf
            readOnly: true
          {{- end }}
          - mountPath: /etc/glance/logging.ini
            name: glance-etc
            subPath: logging.ini
            readOnly: true
          {{- include "utils.proxysql.volume_mount" . | indent 10 }}
      {{- include "utils.proxysql.container" . | indent 6 }}
      volumes:
      - name: etcglance
        emptyDir: {}
      - name: glance-etc
        configMap:
          name: glance-etc
      - name: glance-etc-confd
        secret:
          secretName: {{ .Release.Name }}-secrets
      {{- include "utils.proxysql.volumes" . | indent 6 }}
      {{- include "utils.trust_bundle.volumes" . | indent 6 }}
