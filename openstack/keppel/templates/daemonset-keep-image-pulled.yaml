{{- if not .Values.keppel.slim }}

# Because Keppel is instrumental for the continued availability of many other
# Docker images, we want to be able to start it reliably and fast. To ensure this,
# this daemonset (through its existence) keeps the Keppel image permanently
# pulled on all nodes.

kind: DaemonSet
apiVersion: apps/v1

metadata:
  name: keep-image-pulled

spec:
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1000 # allow updating all pods at once
  selector:
    matchLabels:
      app: keep-image-pulled
  template:
    metadata:
      labels:
        app: keep-image-pulled
    spec:
      # NOTE: observed resource usage in eu-de-1 (as of 2020-02-26)
      # - no measurable CPU usage once started
      # - RAM max. 1.5 MiB (but it turns out that k8s itself runs into OOM when
      #   starting a container with less than 16-24 MiB RAM limit)
      containers:
        - name: keppel
          image: {{ include "keppel_image" . }}
          imagePullPolicy: IfNotPresent
          command: [ '/bin/sleep', 'inf' ]
          resources:
            requests:
              cpu: "1m"
              memory: "24Mi"
            limits:
              cpu: "1m"
              memory: "24Mi"
        - name: postgres
          image: "{{.Values.postgresql.image}}:{{.Values.postgresql.imageTag}}"
          imagePullPolicy: IfNotPresent
          command: [ '/bin/sleep', 'inf' ]
          resources:
            requests:
              cpu: "1m"
              memory: "24Mi"
            limits:
              cpu: "1m"
              memory: "24Mi"
        - name: pgbackup # runs inside the postgres pod, so we also need this image to start the postgres pod at all
          image: "{{.Values.postgresql.backup.image}}:{{.Values.postgresql.backup.imageTag}}"
          imagePullPolicy: IfNotPresent
          command: [ '/bin/sleep', 'inf' ]
          resources:
            requests:
              cpu: "1m"
              memory: "24Mi"
            limits:
              cpu: "1m"
              memory: "24Mi"
        - name: redis # NOTE: redis-metrics is a separate pod, so we don't need to care about it
          image: "{{.Values.redis.image.repository}}:{{.Values.redis.image.tag}}"
          imagePullPolicy: IfNotPresent
          command: [ '/bin/sleep', 'inf' ]
          resources:
            requests:
              cpu: "1m"
              memory: "24Mi"
            limits:
              cpu: "1m"
              memory: "24Mi"
      # sleep(1) doesn't seem to react to SIGTERM at all, so skip right ahead to SIGKILL
      terminationGracePeriodSeconds: 1

{{- end }}
