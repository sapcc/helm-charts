kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-api
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"

spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.apiReplicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
      #We scrape the request metrics via annotion on the lyra service
      #This annotation is for the puma metrics exporter
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath  "/secrets.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
    spec:
      containers:
        - name: api
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPollicy }}
          env:
            - name: PORT
              value: "{{.Values.service.internalPort}}"
{{ include "env.vars" . | indent 12 }}
          ports:
            - name: automation
              containerPort: {{.Values.service.internalPort}}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.service.internalPort}}
            timeoutSeconds: 60
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.service.internalPort}}
            timeoutSeconds: 5
            initialDelaySeconds: 5
{{- if and (ne $.Values.global.region "qa-de-2") (ne $.Values.global.region "qa-de-3") }}
          # NOTE: observed resource usage (vpa upperBound) in eu-de-1 (as of 2022-10)
          # - CPU: 12m with 2 replicas
          # - RAM: levels off around 176Mi (185211091)
          resources:
            requests:
              cpu: "120m"
              memory: "250Mi"
            limits:
              cpu: "120m"
              memory: "250Mi" 
{{- end }}
        - name: puma-metrics
          image: {{.Values.global.registry}}/puma-exporter:1.0.1
          ports:
            - name: metrics
              containerPort: 9235
{{- if and (ne $.Values.global.region "qa-de-2") (ne $.Values.global.region "qa-de-3") }}
          # NOTE: observed resource usage (vpa upperBound) in eu-de-1 (as of 2022-10)
          # - CPU: 12m with 2 replicas
          # - RAM: levels off around 128Mi (131072k)
          resources:
            requests:
              cpu: "120m"
              memory: "200Mi"
            limits:
              cpu: "120m"
              memory: "200Mi"
{{- end }}
