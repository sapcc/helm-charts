kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}-worker
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"

spec:
  revisionHistoryLimit: 3
  replicas: {{ .Values.workerReplicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 2
  selector:
    matchLabels:
      app: {{ .Release.Name }}-worker
  template:
    metadata:
      labels:
        app: {{.Release.Name}}-worker
      annotations:
        checksum/secrets: {{ include (print $.Template.BasePath  "/secrets.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
    spec:
      containers:
        - name: worker
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPollicy }}
          args: [ que, ./config/environment-with-metrics.rb ]
          ports:
            - name: metrics
              containerPort: 9100
          # NOTE: observed resource usage (vpa upperBound) in eu-de-1 (as of 2022-10)
          # - CPU: 25m with 2 replicas
          # - RAM: levels off around 1.2Gi (1327541392)
          resources:
            requests:
              cpu: "250m"
              memory: "1.5Gi"
            limits:
              cpu: "250m"
              memory: "1.5Gi" 
          env:
            - name: QUE_QUEUE
              value: default
            - name: QUE_WORKER_COUNT
              value: "10"
{{ include "env.vars" . | indent 12 }}
          #TODO: liveness checks
          #TODO: adjust grace period
