# Default values for lyra.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
railsEnv: production
# secretKey:
# sentryDSN:
auth:
  #  endpoint:
  userID: automation
  userDomainName: Default
  #  password:
  swift:
    projectName: master
    projectDomainName: ccadmin
#    tempURLKey:

# postgresql:
#   postgresPassword:

apiReplicaCount: 2
workerReplicaCount: 2
image:
  repository: sapcc/lyra
  tag: latest
  pullPolicy: IfNotPresent
service:
  name: nginx
  type: ClusterIP
  externalPort: 80
  internalPort: 80

ingress:
  enabled: false
  hosts: []
#  tlsCertificate:
#  tlsKey:

# When to delete old runs every day
session_cleanup_time: "0415" #4:15 UTC

omnitruck:
  enabled: false
  image:
    repository: sapcc/omnitruck-cache
    tag: "0.6.0"
    pullPolicy: IfNotPresent
  internalPort: 8080
  #host:

postgresql:
  image: keppel.global.cloud.sap/ccloud/postgres
  imageTag: "12.11"
  enabled: true
  alerts:
    prometheus: openstack
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 10Gi
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
  backup:
    enabled: true
    image: keppel.global.cloud.sap/ccloud/backup-tools
    imageTag: v0.6.5

# Deploy Lyra Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack

pgmetrics:
  db_name: monsoon-automation_production
  customMetrics:
    pg_database:
      query: "SELECT d.datname AS datname, CASE WHEN pg_catalog.has_database_privilege(d.datname, 'CONNECT') THEN pg_catalog.pg_database_size(d.datname) ELSE 0 END AS size_bytes FROM pg_catalog.pg_database d where datname not in ('template0', 'template1', 'postgres')"
      metrics:
        - datname:
            usage: "LABEL"
            description: "Name of the database"
        - size_bytes:
            usage: "GAUGE"
            description: "Size of the database in bytes"
