{{- $proxysql := lookup "v1" "Secret" .Release.Namespace (print .Release.Name "-proxysql-etc") -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: octavia-migration
  labels:
    system: openstack
    type: configuration
    component: octavia
    # hooks are not annotated as belonging to the Helm release, so we cannot rely on owner-info injection
    ccloud/support-group: network-api
    ccloud/service: octavia
  annotations:
    # post-install is necessary so that we can be sure when deploying to a
    # region for the first time that the DB pod is already running.
    "helm.sh/hook": "post-install,pre-upgrade"
    "helm.sh/hook-weight": "-1"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    spec:
      restartPolicy: OnFailure
    {{- if $proxysql }}
      {{- include "utils.proxysql.job_pod_settings" . | nindent 6 }}
    {{- end }}
      initContainers:
        - name: wait-for-dependencies
          image: {{required ".Values.global.registry is missing" .Values.global.registry}}/loci-octavia:{{required "Values.imageVersion is missing" .Values.imageVersion}}
          imagePullPolicy: IfNotPresent
          command: ['dumb-init', 'kubernetes-entrypoint']
          env:
            - name: COMMAND
              value: "true"
            - name: DEPENDENCY_SERVICE
              value: "{{ .Release.Name }}-mariadb"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
      containers:
        - name: octavia-migration
          image: {{required ".Values.global.registry is missing" .Values.global.registry}}/loci-octavia:{{required "Values.imageVersion is missing" .Values.imageVersion}}
          imagePullPolicy: IfNotPresent
          command:
            - dumb-init
            - bash
            - -c
            - |
              set -euo pipefail
              octavia-db-manage upgrade head
              {{ include "utils.proxysql.proxysql_signal_stop_script" . | trim }}
          env:
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: octavia.DSN.python
            {{- end }}
          volumeMounts:
            - name: octavia-etc
              mountPath: /etc/octavia/octavia.conf
              subPath: octavia.conf
              readOnly: true
            - name: octavia-etc-confd
              mountPath: /etc/octavia/octavia.conf.d
              readOnly: true
            - name: octavia-etc
              mountPath: /etc/octavia/logging.ini
              subPath: logging.ini
              readOnly: true
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
    {{- if $proxysql }}
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
        {{- include "utils.proxysql.container" . | indent 8 }}
    {{- end }}
      volumes:
        - name: octavia-etc
          configMap:
            name: octavia-etc
        - name: octavia-etc-confd
          secret:
            secretName: {{ .Release.Name }}-secrets
    {{- if $proxysql}}
        {{- include "utils.proxysql.volumes" . | indent 8 }}
    {{- end }}
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
