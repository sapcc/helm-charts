apiVersion: v1
kind: ConfigMap

metadata:
  name: keppel-auto-managed-accounts

data:
  config.json: {{ include "build_managed_accounts" $ | fromYaml | toJson | quote }}

{{- define "build_managed_accounts" }}
# Keppel takes a JSON config here, but YAML is way easier to template,
# so we generate YAML here and then convert it to JSON up above.
{{- $region := .Values.global.region | required "missing required config value: .Values.global.region" }}
{{- $tld    := .Values.global.tld    | required "missing required config value: .Values.global.tld" }}

accounts:
  {{- range $account := .Values.accounts }}
  {{- $is_primary := eq $account.primary_region $region }}
  {{- $project_id := index $.Values.project_refs $account.project_ref $region }}
  {{- if $project_id }}

  - name: {{ quote $account.name }}
    auth_tenant_id: {{ $project_id }}

    {{- if and $is_primary $account.gc_policies }}
    gc_policies: {{ toJson $account.gc_policies }}
    {{- end }}

    rbac_policies:
      {{- range $policy := $account.rbac_policies }}
      {{- $only_valid_on_primary := $policy.permissions | has "anonymous_first_pull" }}
      {{- if or $is_primary (not $only_valid_on_primary) }}
      - {{ toJson $policy }}
      {{- end }}
      {{- end }}

    {{- if and $is_primary $account.replication }}
    replication: {{ toJson $account.replication }}
    {{- else if not $is_primary }}
    replication:
      strategy: on_first_use
      upstream: keppel.{{ $account.primary_region }}.{{ $tld }}
    {{- end }}

    {{- if $account.security_scan_policies }}
    security_scan_policies: {{ toJson $account.security_scan_policies }}
    {{- end }}

    {{- if and $is_primary $account.validation }}
    validation: {{ toJson $account.validation }}
    {{- end }}

    {{- if $account.platform_filter }}
    platform_filter: {{ toJson $account.platform_filter }}
    {{- end }}

  {{- end }}
  {{- end }}

{{- end }}
