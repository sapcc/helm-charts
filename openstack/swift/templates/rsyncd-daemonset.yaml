kind: DaemonSet
apiVersion: apps/v1

metadata:
  name: swift-rsyncd
  labels:
    release: "{{ .Release.Name }}"
    on-upgrade: recreate

spec:
  minReadySeconds: 15
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: '20%' # these pods can be rolled rather quickly since they are not in the hot path
  selector:
    matchLabels:
      component: swift-rsyncd
      from: daemonset
      restart: directly
  template:
    metadata:
      labels:
        component: swift-rsyncd
        from: daemonset
        restart: directly
      annotations:
        {{- include "swift_conf_annotations" . | indent 8 }}
    spec:
      {{- include "swift_daemonset_tolerations" . | indent 6 }}
      hostNetwork: true
      nodeSelector:
        species: {{ .Values.species }}
      volumes:
        - name: swift-etc
          configMap:
            name: swift-etc
        - name: swift-drives
          hostPath:
            path: /srv/node
        - name: swift-drive-state
          hostPath:
            path: /run/swift-storage/state
      containers:
        - name: server
          image: {{ include "swift_image" . }}
          command:
            - /usr/bin/dumb-init
          args:
            - /bin/bash
            - /usr/bin/rsyncd-start
          # privileged access required for /usr/bin/unmount-helper (TODO: use shared/slave mount namespace instead)
          securityContext:
            runAsUser: 0
            privileged: true
          env:
            - name: DEBUG_CONTAINER
              value: "false"
          volumeMounts:
            - mountPath: /swift-etc
              name: swift-etc
            - mountPath: /srv/node
              name: swift-drives
            - mountPath: /swift-drive-state
              name: swift-drive-state

---
{{ include "swift_vpa_no_autoupdates" "swift-rsyncd" }}
