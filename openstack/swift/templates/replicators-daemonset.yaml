kind: DaemonSet
apiVersion: apps/v1

metadata:
  name: swift-replicators
  labels:
    release: "{{ .Release.Name }}"
    on-upgrade: recreate

spec:
  minReadySeconds: 15
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      component: swift-replicators
  template:
    metadata:
      labels:
        component: swift-replicators
        alert-tier: os
        alert-service: swift
        from: daemonset
        restart: directly
      annotations:
        {{- include "swift_conf_annotations" . | indent 8 }}
        {{- include "swift_ring_annotations" . | indent 8 }}
    spec:
      {{- include "swift_daemonset_tolerations" . | indent 6 }}
      # replicators need to discover their own IP, and it needs to match the
      # node IP in the ring file (this extra permission is why the replicators
      # form a separate daemonset)
      hostNetwork: true
      nodeSelector:
        species: {{ .Values.species }}
      volumes: {{ include "swift_daemonset_volumes" . | indent 8 }}
      containers:
        {{- tuple "account"   "account-replicator"   . | include "swift_standard_container" | indent 8 }}
        {{- tuple "container" "container-replicator" . | include "swift_standard_container" | indent 8 }}
        {{- tuple "object"    "object-replicator"    . | include "swift_standard_container" | indent 8 }}

---
{{ include "swift_vpa_no_autoupdates" "swift-replicators" }}
