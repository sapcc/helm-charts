groups:
- name: cc3test-arc.alerts
  rules:
  - alert: CCloudArcApiDown
    expr: |
        cc3test_status{type="api",
            name=~"TestArc_api.+",
            phase="call"
        } == 0
    for: 16m
    labels:
      severity: critical
      support_group: containers
      tier: os
      service: '{{ $labels.service }}'
      context: '{{ $labels.service }}'
      meta: 'CCloud Arc API is down'
      dashboard: 'cc3test-api-status?var-service={{ $labels.service }}'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-arc-api/'
      report: 'cc3test/admin/object-storage/swift/containers/cc3test/objects/{{ $labels.base64path }}'
    annotations:
      description: 'CCloud Arc API is down'
      summary: 'CCloud Arc API is down'

  - alert: CCloudArcApiFlapping
    expr: |
        changes(cc3test_status{type="api",
            name=~"TestArc_api.+",
            phase="call"
        }[30m]) > 8
    labels:
      severity: warning
      support_group: containers
      tier: os
      service: '{{ $labels.service }}'
      context: '{{ $labels.service }}'
      meta: 'CCloud Arc API is flapping'
      dashboard: 'cc3test-api-status?var-service={{ $labels.service }}'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-arc-api/'
      report: 'cc3test/admin/object-storage/swift/containers/cc3test/objects/{{ $labels.base64path }}'
    annotations:
      description: 'CCloud Arc API is flapping'
      summary: 'CCloud Arc API is flapping'

  - alert: ArcBrokerCertificateExpiresInLessThan1Week
    expr: cc3test_cert_expires_in_days{type="arc-broker"} < 8
    # we want a critical alert 7 days before (fixing during business hours is sufficient -> warning)
    labels:
      severity: warning
      tier: os
      support_group: containers
      service: arc
      context: arc-broker
      meta: 'Certificate on {{ $labels.host }} expires in less than 8 days'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-arc-broker-cert/'
    annotations:
      description: Certificate on {{ $labels.host }} expires in less than 8 days
      summary: Certificate expires

  - alert: ArcBrokerCertificateExpiresInLessThan2Weeks
    expr: cc3test_cert_expires_in_days{type="arc-broker"} < 15
    # we want a warning alert 14 days before
    labels:
      severity: warning
      tier: os
      support_group: containers
      service: arc
      context: arc-broker
      meta: 'Certificate on {{ $labels.host }} expires in less than 15 days'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-arc-broker-cert/'
    annotations:
      description: Certificate on {{ $labels.host }} expires in less than 15 days
      summary: Certificate expires

- name: cc3test-lyra.alerts
  rules:
  - alert: CCloudLyraApiDown
    expr: |
        cc3test_status{type="api",
            name=~"TestLyra_.api+",
            phase="call"
        } == 0
    for: 10m
    labels:
      severity: critical
      tier: os
      support_group: containers
      service: '{{ $labels.service }}'
      context: '{{ $labels.service }}'
      meta: 'CCloud Lyra API is down'
      dashboard: 'cc3test-api-status?var-service={{ $labels.service }}'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-lyra-api/'
      report: 'cc3test/admin/object-storage/swift/containers/cc3test/objects/{{ $labels.base64path }}'
    annotations:
      description: 'CCloud Lyra API is down'
      summary: 'CCloud Lyra API is down'

  - alert: CCloudLyraApiFlapping
    expr: |
        changes(cc3test_status{type="api",
            name=~"TestArc_api.+",
            phase="call"
        }[30m]) > 8
    labels:
      severity: warning
      tier: os
      support_group: containers
      service: '{{ $labels.service }}'
      context: '{{ $labels.service }}'
      meta: 'CCloud Lyra API is flapping'
      dashboard: 'cc3test-api-status?var-service={{ $labels.service }}'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-lyra-api/'
      report: 'cc3test/admin/object-storage/swift/containers/cc3test/objects/{{ $labels.base64path }}'
    annotations:
      description: 'CCloud Lyra API is flapping'
      summary: 'CCloud Lyra API is flapping'

  - alert: CCloudAutomationFailed
    expr: |
        cc3test_status{service="lyra",
            type="lyra_and_canary",
            name=~"TestLyra_automation-.*",
            phase="call"
        } == 0
    for: 1h
    labels:
      severity: warning
      tier: os
      support_group: containers
      service: '{{ $labels.service }}'
      context: '{{ $labels.service }}'
      meta: 'CCloud (Arc/Lyra) automation run failed'
      dashboard: 'cc3test-canary-status?var-service={{ $labels.service }}'
      playbook: 'docs/support/playbook/automation/alerts/cc3test-alert-automation/'
      report: 'cc3test/admin/object-storage/swift/containers/cc3test/objects/{{ $labels.base64path }}'
    annotations:
      description: 'CCloud (Arc/Lyra) automation run failed'
      summary: 'CCloud (Arc/Lyra) automation run failed'
