{{- if or (.Capabilities.APIVersions.Has "vcenter-operator.stable.sap.cc/v1") (.Values.isImageTransportTemplating | default false) }}
apiVersion: vcenter-operator.stable.sap.cc/v1
kind: VCenterTemplate
metadata:
  name: 'vcenter-cluster-nova-compute-configmap'
options:
  scope: 'cluster'
  jinja2_options:
    variable_start_string: '{='
    variable_end_string: '=}'
template: |
  apiVersion: v1
  kind: ConfigMap
  metadata:
    name: nova-compute-vmware-{= name =}
    labels:
      system: openstack
      type: configuration
      component: nova
      vcenter: {= host =}
      datacenter: {= availability_zone =}
      vccluster: {= cluster_name =}
  data:
    nova-compute.conf: |
      [DEFAULT]
      host = nova-compute-{= name =}
      graceful_shutdown_timeout = 900
      compute_driver = vmwareapi.VMwareVCDriver
      reserved_host_memory_mb = 0
      resize_confirm_window = {{ .Values.compute.defaults.default.resize_confirm_window }}
      {{- if .Values.compute.defaults.default.max_concurrent_builds_per_project }}
      max_concurrent_builds_per_project = {{ .Values.compute.defaults.default.max_concurrent_builds_per_project }}
      {{- end }}
      max_concurrent_builds = {{ .Values.compute.defaults.default.max_concurrent_builds }}
      ram_allocation_ratio = {{ .Values.compute.defaults.default.ram_allocation_ratio }}
      cpu_allocation_ratio = {{ .Values.compute.defaults.default.cpu_allocation_ratio }}
      block_device_allocate_retries = {{ .Values.compute.defaults.default.block_device_allocate_retries }}
      statsd_port = {{ .Values.compute.defaults.default.rpc_statsd_port }}
      statsd_enabled = {{ .Values.compute.defaults.default.rpc_statsd_enabled }}

      scheduler_instance_sync_interval = {{ .Values.scheduler.scheduler_instance_sync_interval }}

      [filter_scheduler]
      # Needs to be same on hypervisor and scheduler
      track_instance_changes = {{ .Values.scheduler.track_instance_changes }}

      [vmware]
      # integration_bridge = {= bridge | quote =}
      cache_prefix= "{= name | ini_escape =}-images"
      host_ip = {= host =}
      {{- if .Values.compute.defaults.host_username | default "" }}
      host_username = {{ .Values.compute.defaults.host_username }}
      host_password = {= "{{ .Values.compute.defaults.host_username }}" | derive_password | quote =}
      {{- else }}
      host_username = {= username | quote =}
      host_password = {= password | quote =}
      {{- end }}
      cluster_name = {= cluster_name | quote =}
      {{- range $key, $value := .Values.compute.defaults.vmware }}
      {{ $key }} = {{ $value }}
      {{- end }}
      {{- if (or (not (hasKey .Values.compute.defaults.vmware "pbm_enabled")) (not .Values.compute.defaults.vmware.pbm_enabled)) }}
      datastore_regex = {= datastore_regex | quote =}
      {{- end }}
      {%- if datastore_hagroup_regex %}
      datastore_hagroup_regex = {= datastore_hagroup_regex | quote =}
      {%- endif %}
      image_as_template = {{ .Values.compute.defaults.enable_image_as_template | default "False" }}
      {{- if .Values.vspc.nodeIP }}
      serial_port_service_uri = vmware-vspc
      serial_port_proxy_uri = telnet://{{ .Values.vspc.nodeIP }}:{{ .Values.vspc.telnet.portExternal }}
      serial_log_uri = http://{{ .Values.vspc.nodeIP }}:{{ .Values.vspc.web.portExternal }}
      {{- end }}
      hostgroup_reservations_json_file = /etc/nova/hostgroup-reservations.json

      {{"\n"}}
      {{- include "util.helpers.valuesToIni" .Values.compute.vmware | indent 6 }}
    hostgroup-reservations.json: |
      {"__default__": {"memory_percent": 5} }
  {{ end }}
