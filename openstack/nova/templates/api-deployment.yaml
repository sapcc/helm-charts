kind: Deployment
apiVersion: apps/v1

metadata:
  name: nova-api
  labels:
    system: openstack
    type: api
    component: nova
  {{- if .Values.vpa.set_main_container }}
  annotations:
    vpa-butler.cloud.sap/main-container: nova-api
  {{- end }}
spec:
  replicas: {{ if not .Values.pod.debug.api }}{{ .Values.pod.replicas.api }}{{ else }} 1 {{ end }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.podReplacementStrategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rollingUpdate.maxSurge }}
    {{ end }}
  selector:
    matchLabels:
      name: nova-api
  template:
    metadata:
      labels:
        name: nova-api
        alert-tier: os
        alert-service: nova
        {{- tuple . "nova" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | nindent 8 }}
        {{- include "utils.topology.pod_label" . | indent 8 }}
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        {{- if or .Values.conductor.config_file.DEFAULT.statsd_enabled .Values.proxysql.mode }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus missing" .Values.alerts.prometheus | quote }}
        {{- end }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
      terminationGracePeriodSeconds: {{ .Values.defaults.default.graceful_shutdown_timeout | add 5 }}
      {{- tuple . (dict "name" "nova-api") | include "utils.topology.constraints" | indent 6 }}
      {{- if .Values.pod.debug.api }}
      securityContext:
        runAsUser: 0
      {{- end }}
      {{- tuple . "nova" "api" | include "kubernetes_pod_anti_affinity" | nindent 6 }}
      {{- include "utils.proxysql.pod_settings" . | nindent 6 }}
      hostname: nova-api
      initContainers:
      {{- tuple . (dict "service" (include "nova.helpers.cell01_services" .) "jobs" (tuple . "db-migrate" | include "job_name")) | include "utils.snippets.kubernetes_entrypoint_init_container" | indent 6 }}
      containers:
        - name: nova-api
          image: {{ tuple . "api" | include "container_image_nova" }}
          imagePullPolicy: IfNotPresent
          command:
          - dumb-init
          {{- if .Values.api.use_uwsgi }}
          - uwsgi
          - --ini
          - /etc/nova/api_uwsgi.ini
          {{- else }}
          - nova-api
          {{- end }}
          env:
          - name: STATSD_HOST
            value: "localhost"
          - name: STATSD_PORT
            value: "9125"
          {{- if .Values.api.use_uwsgi }}
          - name: OS_OSLO_MESSAGING_RABBIT__HEARTBEAT_IN_PTHREAD
            value: "true"
          {{- end }}
          {{- if .Values.sentry.enabled }}
          - name: SENTRY_DSN
            valueFrom:
              secretKeyRef:
                name: sentry
                key: {{ .Chart.Name }}.DSN.python
          {{- end }}
          {{- if .Values.python_warnings }}
          - name: PYTHONWARNINGS
            value: {{ .Values.python_warnings | quote }}
          {{- end }}
          lifecycle:
            preStop:
              {{- include "utils.snippets.pre_stop_graceful_shutdown" . | indent 14 }}
          {{- if not .Values.pod.debug.api }}
          livenessProbe:
            httpGet:
              path: /
              port: {{.Values.global.novaApiPortInternal}}
            initialDelaySeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.global.novaApiPortInternal}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          {{- end }}
          {{- if .Values.pod.resources.api }}
          resources:
{{ toYaml .Values.pod.resources.api | indent 12 }}
          {{- end }}
          ports:
            - name: nova-api
              containerPort: {{.Values.global.novaApiPortInternal}}
          volumeMounts:
          - mountPath: /etc/nova
            name: nova-etc
            {{- include "utils.proxysql.volume_mount" . | indent 10 }}
            {{- include "utils.trust_bundle.volume_mount" . | indent 10 }}
        {{- tuple . .Values.api.config_file.DEFAULT.osapi_compute_workers | include "utils.proxysql.container" | indent 8 }}
        - name: statsd
          image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror}}/prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
          - name: statsd
            containerPort: 9125
            protocol: UDP
          - name: metrics
            containerPort: 9102
          volumeMounts:
          - name: statsd-etc
            mountPath: /etc/statsd/statsd-exporter.yaml
            subPath: statsd-exporter.yaml
            readOnly: true
      volumes:
      - name: nova-etc
        projected:
          sources:
          - configMap:
              name: nova-etc
              items:
              - key:  nova.conf
                path: nova.conf
              - key:  nova-api.conf
                path: nova-api.conf
              - key:  api-paste.ini
                path: api-paste.ini
              - key:  policy.yaml
                path: policy.yaml
              - key:  logging.ini
                path: logging.ini
              - key:  rootwrap.conf
                path: rootwrap.conf
              - key:  api-metadata.filters
                path: rootwrap.d/api-metadata.filters
              - key:  release
                path: release
              {{- if .Values.api.use_uwsgi }}
              - key:  api_uwsgi.ini
                path: api_uwsgi.ini
              {{- end }}
              {{- if .Values.audit.enabled }}
              - key:  nova_audit_map.yaml
                path: nova_audit_map.yaml
              {{- end }}
              {{- if .Values.watcher.enabled }}
              - key:  watcher.yaml
                path: watcher.yaml
              {{- end }}
          - secret:
              name: nova-etc
              items:
              - key: api-db.conf
                path: nova.conf.d/api-db.conf
              - key: cell1.conf
                path: nova.conf.d/cell1.conf
              - key: keystoneauth-secrets.conf
                path: nova.conf.d/keystoneauth-secrets.conf
              {{- if .Values.audit.enabled }}
              - key: audit-middleware.conf
                path: nova.conf.d/audit-middleware.conf
              {{- end }}
      - name: statsd-etc
        projected:
          sources:
          - configMap:
              name: nova-etc
              items:
              - key:  statsd-exporter.yaml
                path: statsd-exporter.yaml
      - name: nova-bin
        configMap:
          name: nova-bin
          defaultMode: 0755
      {{- include "utils.proxysql.volumes" . | indent 6 }}
      {{- include "utils.trust_bundle.volumes" . | indent 6 }}
