{{- if .Values.ingress.enabled }}
{{- if .Values.ingress.ca }}
kind: Secret
apiVersion: v1

metadata:
  name: elektra-x509-ca
data:
  ca.crt: {{ .Values.ingress.ca | b64enc }}
---
{{- end }}

kind: Ingress
apiVersion: networking.k8s.io/v1

metadata:
  name: elektra
  annotations:
    {{- if .Values.ingress.ca }}
    ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: {{ default true .Values.ingress.pass_certificate_to_upstream | quote }}
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: {{ default true .Values.ingress.pass_certificate_to_upstream | quote }}
    ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    nginx.ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    ingress.kubernetes.io/auth-tls-verify-client: "optional"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
    ingress.kubernetes.io/auth-tls-verify-depth: "3"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
    {{- end }}
    {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
    ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
    {{- end }}
    disco: "true"
    kubernetes.io/tls-acme: {{ default false .Values.ingress.vice_president | quote }}
    prometheus.io/probe: {{ default false .Values.ingress.probe | quote }}
    {{- if .Values.ingress.oauth_proxy }}
    ingress.kubernetes.io/auth-url: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-url: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/auth"
    ingress.kubernetes.io/auth-signin: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/start"
    nginx.ingress.kubernetes.io/auth-signin: "https://auth.{{ .Values.global.region}}.{{ .Values.global.tld}}/oauth2/start"
    ingress.kubernetes.io/auth-request-redirect: $escaped_request_uri
    nginx.ingress.kubernetes.io/auth-request-redirect: $escaped_request_uri
    ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-Email, X-Auth-Request-User, X-Forwarded-Access-Token"
    nginx.ingress.kubernetes.io/auth-response-headers: "Authorization, X-Auth-Request-Email, X-Auth-Request-User, X-Forwarded-Access-Token"
    {{- end }}
spec:
  tls:
    - secretName: elektra
      hosts: [{{ .Values.ingress.host }}]
  rules:
  - host: {{ .Values.ingress.host }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: elektra
            port:
              number: 80
# additional domain for e2e tests
{{- if .Values.ingress.e2e_domain }}
---
kind: Ingress
apiVersion: networking.k8s.io/v1

metadata:
  name: elektra-e2e
  annotations:
    {{- if .Values.ingress.ca }}
    ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: {{ default true .Values.ingress.pass_certificate_to_upstream | quote }}
    nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: {{ default true .Values.ingress.pass_certificate_to_upstream | quote }}
    ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    nginx.ingress.kubernetes.io/auth-tls-secret: kube-system/ingress-cacrt
    ingress.kubernetes.io/auth-tls-verify-client: "optional"
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
    ingress.kubernetes.io/auth-tls-verify-depth: "3"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "3"
    {{- end }}
    {{- if and $.Values.global.linkerd_enabled $.Values.global.linkerd_requested }}
    ingress.kubernetes.io/service-upstream: "true"
    nginx.ingress.kubernetes.io/service-upstream: "true"
    {{- end }}
    disco: "true"
    kubernetes.io/tls-acme: {{ default false .Values.ingress.vice_president | quote }}
    prometheus.io/probe: {{ default false .Values.ingress.probe | quote }}
    dns-manager: "true"
    dns-manager/zone-name: "dashboard-e2e.{{.Values.global.region}}.{{ .Values.global.tld }}"
spec:
  tls:
    - secretName: elektra-e2e
      hosts: [dashboard-e2e.{{ .Values.global.region }}.{{ .Values.global.tld }}]
  rules:
  - host: dashboard-e2e.{{ .Values.global.region }}.{{ .Values.global.tld }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: elektra
            port:
              number: 80
{{- end }}

{{- end }}
