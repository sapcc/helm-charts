# Default values for elektra.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
replica_count: 2
image:
  tag: latest
  pullPolicy: IfNotPresent

rails_env: production
has_keystone_router: 1
#monsoon_dashboard_region: staging
#monsoon_dashboard_landscape: staging
monsoon_dashboard_mail_server: defined_in_secrets
monsoon_dashboard_mail_server_port: defined_in_secrets
monsoon_dashboard_mail_domain: defined_in_secrets
monsoon_dashboard_mail_sender: defined_in_secrets
monsoon_dashboard_mail_authentication: defined_in_secrets
monsoon_dashboard_mail_user: defined_in_secrets
monsoon_dashboard_mail_password: defined_in_secrets

monsoon_dashboard_avatar_url: https://avatars.wdf.sap.corp/avatar/#{current_user.name}?size=24x24
monsoon_dashboard_cam_url: https://spc.ondemand.com/sap/bc/webdynpro/a1sspc/cam_wd_central
#monsoon_openstack_auth_api_endpoint:
monsoon_openstack_auth_api_userid: dashboard
monsoon_openstack_auth_api_domain: Default
two_factor_authentication: "off"
two_factor_auth_domains: "hcp03,cp,s4,wbs,fsn"
# When to delete old sessions every day
session_cleanup_time: "0415" #4:15 UTC

global:
  # No Linkerd annotations will be rendered unless this flag is set to true. This allows you to control when to add your service to the mesh.
  linkerd_requested: true

ingress:
  enabled: false
  probe: true
  oauth_proxy: true

tempest:
  enabled: false

# Deploy Elektra Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack

galvani: DEFINED_IN_VALUES_FILE

bedrock: DEFINED_IN_VALUES_FILE

postgresql:
  log_min_duration_statement: 250
  # less than the postgresql chart's default; I want to know early when connections start getting out of hand
  max_connections: 128
  
  # Please update following imageTag witgh the latest version of the postgresql (see in elektras keppel plugin under path ccloud/postgres-ng)
  # It may happen in the future that PostgreSQL versions are removed, causing PostgreSQL to crash when deploying. In such cases, a rollback should suffice.
  imageTag: "20240312034735"
  persistence:
    enabled: true
    accessMode: ReadWriteMany
    size: 10Gi
  resources:
    # observed on qa-de-1: 10m-15m CPU usage, 75-90 Mi RAM usage
    limits:
      memory: "1.5Gi"
      cpu: "400m"
    requests:
      memory: "1.5Gi"
      cpu: "400m"
  user: elektra
  postgresDatabase: monsoon-dashboard_production
  users:
    elektra: {}
  tableOwner: elektra

  probe_timeout_secs: 10 # instead of 3

  alerts:
    support_group: containers
    service: elektra

pgbackup:
  isPostgresNG: true
  database:
    name: monsoon-dashboard_production
  alerts:
    support_group: containers
    service: elektra

pgmetrics:
  isPostgresNG: true
  db_name: monsoon-dashboard_production
  alerts:
    support_group: containers
    service: elektra

owner-info:
  support-group: containers
  service: elektra
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/openstack/elektra
  maintainers:
    - Esther Schmitz
    - Hans-Georg Winkler
    - Arturo Reuschenbach
    - Andreas Pfau
    - Hoda Noori

# Annotate the entire namespace instead of each individual pod and service. The annotation on the namespace level to make Linkerd inject itself into all pods and services at once
# The annotations cause Linkerd to add a sidecar container to all respective pods
linkerd-support:
  annotate_namespace: true
