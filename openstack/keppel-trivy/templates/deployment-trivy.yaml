kind: Deployment
apiVersion: apps/v1

metadata:
  name: trivy-server

spec:
  revisionHistoryLimit: 5
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      name: trivy-server
  template:
    metadata:
      labels:
        name: trivy-server
        alert-tier: os
        alert-service: keppel
      annotations:
        checksum/secret: {{ include "keppel-trivy/templates/secret.yaml" . | sha256sum }}
    spec:
      containers:
        - name: trivy-server
          image: {{ $.Values.global.registry }}/trivy:{{ $.Values.trivy.image_version | required ".Values.trivy.image_version is not set!" }}
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            # NOTE: TTL = 1 week = 7 days = 168 hours
            - "trivy server \
                --db-repository {{ $.Values.global.ghcrIoMirror }}/aquasecurity/trivy-db \
                --java-db-repository {{ $.Values.global.ghcrIoMirror }}/aquasecurity/trivy-java-db \
                --cache-backend redis://:$REDIS_PASSWORD@{{ .Release.Name }}-redis:6379 \
                --cache-ttl 168h \
                --listen 0.0.0.0:8080 \
                --token $TRIVY_TOKEN"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trivy-secret
                  key: redis_password
            - name: TRIVY_TOKEN
              valueFrom:
                secretKeyRef:
                  name: trivy-secret
                  key: trivy_token
          # TODO: upstream image runs as root
          # securityContext:
          #   runAsNonRoot: true
          # livenessProbe: {} # TODO:
          # readinessProbe: {} # TODO:
          # resources: {} # TODO: configure once we have some data
