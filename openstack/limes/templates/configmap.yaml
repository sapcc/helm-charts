apiVersion: v1
kind: ConfigMap

metadata:
  name: limes

data:
  empty.rego: |
{{ .Files.Get "files/empty.rego" | indent 4 }}
  project.rego: |
{{ .Files.Get "files/project.rego" | indent 4 }}
  limes.yaml: |
{{ toYaml .Values.limes.clusters.ccloud | indent 4 }}
  constraints-ccloud.yaml: |
{{ toYaml .Values.limes.constraints.ccloud | indent 4 }}

  policy.yaml: |
    project_scope: project_domain_id:%(domain_id)s and project_id:%(project_id)s
    domain_scope: domain_id:%(domain_id)s

    cluster_editor: role:cloud_resource_admin or (role:cloud_dns_resource_admin and 'dns':%(service_type)s)
    cluster_viewer: role:cloud_resource_admin or role:cloud_dns_resource_admin or role:cloud_resource_viewer
    domain_editor: rule:cluster_editor or (rule:domain_scope and role:resource_admin)
    domain_viewer: rule:cluster_viewer or (rule:domain_scope and role:resource_viewer) or rule:domain_editor
    project_editor: rule:domain_editor or (rule:project_scope and role:resource_admin)
    project_viewer: rule:domain_viewer or (rule:project_scope and (role:member or role:_member_ or role:Member or role:resource_viewer)) or rule:project_editor
    is_compute_ram: "'compute':%(service_type)s and 'ram':%(resource_name)s"

    project:list: rule:domain_viewer
    project:show: rule:project_viewer
    project:edit: rule:project_editor
    project:sync: rule:project_editor
    project:raise: rule:domain_editor
    project:raise_lowpriv: rule:project_editor
    project:raise_centralized: rule:cluster_editor
    project:lower: rule:project_editor
    project:lower_centralized: rule:cluster_editor
    project:discover: rule:domain_editor

    domain:list: rule:cluster_viewer
    domain:show: rule:domain_viewer
    domain:sync: rule:domain_editor
    domain:raise: rule:cluster_editor
    domain:raise_lowpriv: rule:domain_editor
    # For compute/ram, we forbid domain quota lowering without approval from the cloud admin level to enable tighter control over capacity distribution.
    domain:lower: rule:cluster_editor or (rule:domain_editor and (not rule:is_compute_ram))
    domain:discover: rule:cluster_editor

    cluster:show: rule:cluster_viewer
    cluster:show_basic: rule:cluster_viewer or role:admin or role:resource_admin or role:resource_viewer or role:member or role:_member_ or role:Member
    cluster:show_subcapacity: "'compute':%(service)s and ('cores':%(resource)s or 'instances':%(resource)s or 'ram':%(resource)s)"
    cluster:show_errors: rule:cluster_viewer or role:cloud_support_tools_viewer
