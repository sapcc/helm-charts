kind: Deployment
apiVersion: apps/v1

metadata:
  name: limes-data-metrics
  labels:
    app: limes-data-metrics
    release: "{{.Release.Name}}"

spec:
  revisionHistoryLimit: 5
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      name: limes-data-metrics
  template:
    metadata:
      labels:
        name: limes-data-metrics
      annotations:
        checksum/configmap: {{ include "limes/templates/configmap.yaml" . | sha256sum }}
        checksum/secret: {{ include "limes/templates/secret.yaml" . | sha256sum }}
        kubectl.kubernetes.io/default-container: metrics
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.alerts.prometheus.openstack missing" .Values.alerts.prometheus.openstack | quote }}
    spec:
      volumes:
        - name: config
          configMap:
            name: limes
      containers:
        - name: metrics
          image: {{ include "limes_image" . }}
          imagePullPolicy: IfNotPresent
          args:
            - serve-data-metrics
            - /etc/limes/limes.yaml
          env:
            {{ include "limes_common_envvars" . | indent 12 }}
            - name: LIMES_DATA_METRICS_SKIP_ZERO
              value: "true"
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: 8080
            timeoutSeconds: 10
            periodSeconds: 60
            initialDelaySeconds: 60
          securityContext:
            runAsNonRoot: true
          volumeMounts:
            - mountPath: /etc/limes
              name: config
          ports:
            - name: metrics
              containerPort: 8080
          {{- if .Values.limes.resources.enabled }}
          resources:
            limits:
                cpu: '1'
                memory: '500Mi'
            requests:
                cpu: '100m'
                memory: '500Mi'
          {{- end }}
