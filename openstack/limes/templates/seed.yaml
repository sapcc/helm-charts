{{- $vbase  := .Values.global.vaultBaseURL | required "missing value for .Values.global.vaultBaseURL" -}}
{{- $region := .Values.global.region       | required "missing value for .Values.global.region"       -}}
{{- $is_global := $.Values.limes.clusters.ccloud.catalog_url | contains "global" -}}

{{- $domains := list "bs" "btp_fp" "cc3test" "cp" "cis" "fsn" "hcm" "hcp03" "hda" "hec" "kyma" "monsoon3" "neo" "s4" "wbs" -}}
{{- /* WARNING: When adding a new domain, also increment the domain count in the OpenstackLimesUnexpectedCloudDnsAdminRoleAssignments alert. */ -}}
{{- if $is_global -}}
  {{- $domains = list "cc3test" "global" -}}
{{- end -}}

{{- $liquid_roles := list -}}
{{- if not $is_global -}}{{/* TODO: use "if not .Values.limes.local_liquids.nova.skip" here once we have liquid-nova */}}
  {{- /* NOTE: cloud_image_admin is required to determine the OS type for images of running instances */ -}}
  {{- $liquid_roles = concat $liquid_roles (list "cloud_compute_admin" "cloud_image_admin" "cloud_keymanager_admin") -}}
{{- end -}}
{{- if not .Values.limes.local_liquids.cinder.skip -}}
  {{- $liquid_roles = append $liquid_roles "cloud_volume_admin" -}}
{{- end -}}
{{- if not .Values.limes.local_liquids.designate.skip -}}
  {{- $liquid_roles = append $liquid_roles "cloud_dns_admin" -}}
{{- end -}}
{{- if not .Values.limes.local_liquids.neutron.skip -}}
  {{- $liquid_roles = append $liquid_roles "cloud_network_admin" -}}
{{- end -}}
{{- if not .Values.limes.local_liquids.manila.skip -}}
  {{- $liquid_roles = append $liquid_roles "cloud_sharedfilesystem_admin" -}}
{{- end -}}
{{- if not .Values.limes.local_liquids.swift.skip -}}
  {{- $liquid_roles = append $liquid_roles "cloud_objectstore_admin" -}}
{{- end -}}

apiVersion: "openstack.stable.sap.cc/v1"
kind: OpenstackSeed
metadata:
  name: limes-seed

spec:
  requires:
  {{- $base_seed_namespace := $is_global | ternary "monsoon3global" "monsoon3" }}
  - {{ $base_seed_namespace }}/{{ $is_global | ternary "keystone-global-seed" "keystone-seed" }}
  - {{ $base_seed_namespace }}/domain-ccadmin-seed
  - {{ $base_seed_namespace }}/domain-default-seed
  {{- range $domains }}
  - {{ $base_seed_namespace }}/domain-{{replace "_" "-" .}}-seed
  {{- end }}

  roles:
    # our own roles
    - name: cloud_resource_admin
    - name: cloud_resource_viewer
    - name: resource_admin
    - name: resource_viewer
    - name: resource_service
    # roles defined by other services (instead of adding complicated seed
    # dependencies between services, we just redefine these roles here)
    {{- range (sortAlpha $liquid_roles) }}
    - name: {{ . }}
    {{- end }}

  domains:
    - name: Default
      users:
        - name: limes
          description: Limes Service
          password: '{{.Values.limes.passwords.ccloud.os_password}}'
          role_assignments:
            - project: service
              role:    service
        - name: limes-validation
          description: User account for pre-deployment validation in CI
          {{- $vault_path := printf "%s/limes" $region }}
          {{- if $is_global }}
            {{- $vault_path = printf "%s/limes-global" (($region | contains "qa") | ternary $region "global") }}
          {{- end }}
          password: {{ printf "%s/%s/keystone-user/validation/password" $vbase $vault_path | quote }}
          role_assignments:
            - project: service
              role:    resource_viewer # needs to be able to run `limesctl project show`

    - name: ccadmin
      projects:
      - name: cloud_admin
        role_assignments:
          # permission to enumerate all projects and domains
          - user: limes@Default
            role: admin
          # (new-style) permission to manage all services' quotas
          - user: limes@Default
            role: resource_service
          # (old-style) permission to manage all services' quotas
          {{- range $liquid_roles }}
          - user: limes@Default
            role: {{ . }}
          {{- end }}
      groups:
      - name: CCADMIN_CLOUD_ADMINS
        role_assignments:
        - project: cloud_admin
          role: cloud_resource_admin
        - project: cloud_admin
          role: cloud_resource_viewer # technically unnecessary, but allows creating application credentials with read-only permissions
      - name: CCADMIN_DOMAIN_RESOURCE_ADMINS
        role_assignments:
        - domain: ccadmin
          role: resource_admin
        - domain: ccadmin
          role: resource_viewer # technically unnecessary, but allows creating application credentials with read-only permissions

    {{- range $domains }}
    - name: {{ . | lower }}
      groups:
      - name: {{ . | upper }}_DOMAIN_RESOURCE_ADMINS
        role_assignments:
        - domain: {{ . | lower }}
          role: resource_admin
        - domain: {{ . | lower }}
          role: resource_viewer # technically unnecessary, but allows creating application credentials with read-only permissions
    {{- end }}
