kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}-api
  labels:
    system: openstack
    application: designate
    type: api
    component: api
  {{- if .Values.vpa.set_main_container }}
  annotations:
    vpa-butler.cloud.sap/main-container: designate-api
  {{- end }}
spec:
  replicas: {{ .Values.pod.replicas.api }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}-api
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-api
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
        secrets-hash: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.proxysql.mode }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.metrics.prometheus missing" .Values.metrics.prometheus | quote }}
        {{- end }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
{{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Release.Name }}
{{- end }}
{{ tuple . "designate" "api" | include "kubernetes_pod_anti_affinity" | indent 6 }}
      {{- include "utils.proxysql.pod_settings" . | indent 6 }}
      initContainers:
      - name: kubernetes-entrypoint
        image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-designate:{{ required ".Values.image_version_designate is missing" .Values.image_version_designate }}
        imagePullPolicy: IfNotPresent
        command:
          - kubernetes-entrypoint
        env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: {{ include "migration_job_name" . }}
            - name: DEPENDENCY_SERVICE
{{- if .Values.percona_cluster.enabled }}
              value: "{{ .Release.Name }}-percona-pxc,{{ .Release.Name }}-rabbitmq,{{ .Release.Name }}-memcached"
{{- else if .Values.rabbitmq_cluster.enabled }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq-cluster,{{ .Release.Name }}-memcached"
{{- else }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq,{{ .Release.Name }}-memcached"
{{- end }}
            - name: COMMAND
              value: "true"
      containers:
        - name: designate-api
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-designate:{{ required ".Values.image_version_designate is missing" .Values.image_version_designate }}
          imagePullPolicy: IfNotPresent
          command:
            - /container.init/designate-api.sh
            - start
          resources:
{{ toYaml .Values.resources.api | indent 12 }}
          env:
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: STATSD_HOST
              value: "localhost"
            - name: STATSD_PORT
              value: "9125"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: {{ .Release.Name }}.DSN.python
            {{- end }}
          lifecycle:
            preStop:
              {{- include "utils.snippets.pre_stop_graceful_shutdown" . | indent 14 }}
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: {{.Values.global.designate_api_port_internal}}
            initialDelaySeconds: 15
            periodSeconds: 15
            timeoutSeconds: 10
          readinessProbe:
            exec:
              command:
              - bash
              - -c
{{- if .Values.global_setup }}
              - "set -e; curl --fail 127.0.0.1:{{.Values.global.designate_api_port_internal}}/healthcheck; nc -zvw3 designate-global-percona-pxc 3306"
{{- else }}
              - "set -e; curl --fail 127.0.0.1:{{.Values.global.designate_api_port_internal}}/healthcheck; nc -zvw3 designate-mariadb 3306"
{{- end }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          ports:
            - name: designate-api
              containerPort: {{.Values.global.designate_api_port_internal}}
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
            - name: wsgi-designate
              mountPath: /var/www/cgi-bin/designate
{{- if .Values.global_setup }}
            - mountPath: /var/www/html/test.html
              name: designate-etc
              subPath: test.html
{{- end }}
            - name: designate-etc-wsgi
              mountPath: /etc/apache2/conf-enabled/wsgi-designate.conf
              subPath: wsgi-designate.conf
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
        {{- include "utils.proxysql.container" . | indent 8 }}
        - name: statsd
          image: {{ required ".Values.global.dockerHubMirror is missing" .Values.global.dockerHubMirror }}/prom/statsd-exporter:v0.8.1
          imagePullPolicy: IfNotPresent
          args: [ --statsd.mapping-config=/etc/statsd/statsd-exporter.yaml ]
          ports:
            - name: statsd
              containerPort: 9125
              protocol: UDP
            - name: metrics
              containerPort: {{.Values.global.designate_metrics_port}}
          volumeMounts:
            - name: designate-etc
              mountPath: /etc/statsd/statsd-exporter.yaml
              subPath: statsd-exporter.yaml
              readOnly: true
 {{- include "jaeger_agent_sidecar" . | indent 8 }}
      volumes:
        - name: designate-etc
          projected:
            sources:
            - configMap:
                name: designate-etc
            - secret:
                name: designate-secrets
                items:
                  - key: secrets.conf
                    path: secrets.conf
{{- range $rndc := .Values.rndc_keys }}
                  - key: {{ $rndc.name }}.key
                    path: {{ $rndc.name }}.key
{{- end }}
        - name: designate-etc-wsgi
          configMap:
            name: designate-etc-wsgi
        - name: wsgi-designate
          emptyDir: {}
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
        {{- include "utils.proxysql.volumes" . | indent 8 }}
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
