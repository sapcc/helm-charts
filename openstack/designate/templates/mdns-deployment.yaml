kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}-mdns
  labels:
    system: openstack
    application: designate
    type: backend
    component: mdns
  {{- if .Values.vpa.set_main_container }}
  annotations:
    vpa-butler.cloud.sap/main-container: designate-mdns
  {{- end }}
spec:
  replicas: {{ .Values.pod.replicas.mdns }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: designate-mdns
  template:
    metadata:
      labels:
        app: designate-mdns
      annotations:
        kubectl.kubernetes.io/default-container: designate-mdns
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
        secrets-hash: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}
        {{- if .Values.proxysql.mode }}
        prometheus.io/scrape: "true"
        prometheus.io/targets: {{ required ".Values.metrics.prometheus missing" .Values.metrics.prometheus | quote }}
        {{- end }}
        {{- include "utils.linkerd.pod_and_service_annotation" . | indent 8 }}
    spec:
{{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Release.Name }}
{{- end }}
{{ tuple . "designate" "mdns" | include "kubernetes_pod_anti_affinity" | indent 6 }}
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
{{- include "kubernetes_maintenance_affinity" . }}
      {{- include "utils.proxysql.pod_settings" . | indent 6 }}
      containers:
        - name: designate-mdns
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-designate:{{ required ".Values.image_version_designate is missing" .Values.image_version_designate }}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          resources:
{{ toYaml .Values.resources.mdns | indent 12 }}
          env:
            - name: COMMAND
              value: "/container.init/designate-mdns-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_JOBS
              value: {{ include "migration_job_name" . }}
            - name: DEPENDENCY_SERVICE
{{- if .Values.percona_cluster.enabled }}
              value: "{{ .Release.Name }}-percona-pxc,{{ .Release.Name }}-rabbitmq"
{{- else if .Values.rabbitmq_cluster.enabled }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq-cluster"
{{- else }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq"
{{- end }}
            - name: DEBUG_CONTAINER
              value: "false"
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: {{ .Release.Name }}.DSN.python
            {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{.Values.global.designate_mdns_port_public}}
            initialDelaySeconds: 15
            timeoutSeconds: 5
          ports:
            - name: designate-mdns
              containerPort: {{.Values.global.designate_mdns_port_public}}
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
            {{- include "utils.proxysql.volume_mount" . | indent 12 }}
            {{- include "utils.trust_bundle.volume_mount" . | indent 12 }}
        {{- include "utils.proxysql.container" . | indent 8 }}
      volumes:
        - name: designate-etc
          projected:
            sources:
            - configMap:
                name: designate-etc
            - secret:
                name: {{ .Release.Name }}-secrets
                items:
                  - key: secrets.conf
                    path: secrets.conf
                  - key: pools.yaml
                    path: pools.yaml
            - secret:
                name: {{ .Release.Name }}-secrets-rndc
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
        {{- include "utils.proxysql.volumes" . | indent 8 }}
        {{- include "utils.trust_bundle.volumes" . | indent 8 }}
