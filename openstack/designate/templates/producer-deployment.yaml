{{- if .Values.worker_enabled }}
kind: Deployment
apiVersion: apps/v1

metadata:
  name: {{ .Release.Name }}-producer
  labels:
    system: openstack
    type: backend
    component: designate
spec:
  replicas: {{ .Values.pod.replicas.producer }}
  revisionHistoryLimit: {{ .Values.pod.lifecycle.upgrades.deployments.revision_history }}
  strategy:
    type: {{ .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy }}
    {{ if eq .Values.pod.lifecycle.upgrades.deployments.pod_replacement_strategy "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_unavailable }}
      maxSurge: {{ .Values.pod.lifecycle.upgrades.deployments.rolling_update.max_surge }}
    {{ end }}
  selector:
    matchLabels:
      app: designate-producer
  template:
    metadata:
      labels:
        app: designate-producer
      annotations:
        configmap-etc-hash: {{ include (print $.Template.BasePath "/etc-configmap.yaml") . | sha256sum }}
        configmap-bin-hash: {{ include (print $.Template.BasePath "/bin-configmap.yaml") . | sha256sum }}
    spec:
{{- if .Values.rbac.enabled }}
      serviceAccountName: {{ .Release.Name }}
{{- end }}
      containers:
        - name: designate-producer
          image: {{ required ".Values.global.registry is missing" .Values.global.registry }}/loci-designate:{{ required ".Values.global.image_version_designate is missing" .Values.image_version_designate }}
          imagePullPolicy: IfNotPresent
          command:
            - kubernetes-entrypoint
          resources:
             requests:
               memory: "128Mi"
               cpu: "100m"
             limits:
               memory: "512Mi"
               cpu: "500m"
          env:
            - name: COMMAND
              value: "/container.init/designate-producer-start"
            - name: NAMESPACE
              value: {{ .Release.Namespace }}
            - name: DEPENDENCY_SERVICE
{{- if .Values.percona_cluster.enabled }}
              value: "{{ .Release.Name }}-percona-pxc,{{ .Release.Name }}-rabbitmq,{{ .Release.Name }}-memcached"
{{- else if .Values.percona_cluster.enabled }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq-cluster,{{ .Release.Name }}-memcached"
{{- else }}
              value: "{{ .Release.Name }}-mariadb,{{ .Release.Name }}-rabbitmq,{{ .Release.Name }}-memcached"
{{- end }}
            - name: DEBUG_CONTAINER
              value: "false"
            {{- if .Values.sentry.enabled }}
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: sentry
                  key: {{ .Release.Name }}.DSN.python
            {{- end }}
          volumeMounts:
            - mountPath: /designate-etc
              name: designate-etc
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: designate-etc
          configMap:
            name: designate-etc
        - name: container-init
          configMap:
            name: designate-bin
            defaultMode: 0755
{{- end }}
