# Default values for ironic.
# This is a YAML-formatted file.
# Declare name/value pairs to be passed into your templates.
# name: value

owner-info:
  support-group: foundation
  service: ironic
  maintainers:
    - Stefan Hipfel
    - Bernd Kuespert
    - Jens Sandmann
  helm-chart-url: https://github.com/sapcc/helm-charts/tree/master/openstack/ironic

global:
  ironicApiPortInternal: "6385"
  #ironic_tftp_ip: null
  ironictftpPortPublic: "69"
  ironic_pxe_port_public: "69"
  osprofiler: {}
  dbUser: ironic
  fernetRouter:
    image: "monsoon/fernet-router:latest"
  domain_seeds:
    skip_hcm_domain: false
  linkerd_requested: false

imageVersion: rocky-20200214123740
imageVersionStaticdhcpd: rocky-20201012110713

debug: "True"

kos_conductor: true

cert_robot:
  image_tag: "latest"
  schedule: "0 8 * * 1,3,5" # Monday, Wednesday, and Friday at 8:00 (am)
  env:
    issuer:
    designate:
      polling_interval: 5
      propagation_timeout: 1200
    dns_resolvers:
    acme_server:
    csr:
      country:
      state:
      city:
      organization:
      organizational_unit:
    os_cloud: default  # Needs to match the name of the cloud in cloud_common and cloud_secure
  cloud_common:
    clouds:
      default:
        auth:
          auth_url: http://keystone:5000/v3
          username:
          password:
          user_domain_name: ccadmin
          project_name: master
          project_domain_name: ccadmin
  cloud_sdk:
    clouds:
      default:
        auth:
          project_name: cloud_admin

tempest:
  enabled: false

osprofiler:
  enabled: false

statsd:
  port: 9102
  image:
    repository: prom/statsd-exporter
    tag: v0.8.1

hpa:
  enabled: false

oslo_metrics:
  enabled: false

pod:
  replicas:
    api: 2
    inspector: 1
    pxe: 1
  resources:
    api:
      limits:
        memory: 3Gi
        cpu: "4500m"
      requests:
        memory: 2Gi
        cpu: 4000m
    inspector:
      limits:
        memory: 1Gi
        cpu: 1000m
      requests:
        memory: 512Mi
        cpu: 500m
    conductor:
      limits:
        memory: 1.5Gi
        cpu: 2000m
      requests:
        memory: 1Gi
        cpu: 1500m
    pxe:
      limits:
        memory: 256Mi
        cpu: 50m
      requests:
        memory: 64Mi
        cpu: 10m
    statsd:
      limits:
        memory: 128Mi
        cpu: 50m
      requests:
        memory: 64Mi
        cpu: 10m
    console:
      limits:
        memory: 64Mi
        cpu: 50m
      requests:
        memory: 24Mi
        cpu: 10m
    dhcp:
      limits:
        memory: 64Mi
        cpu: 50m
      requests:
        memory: 24Mi
        cpu: 10m

  lifecycle:
    upgrades:
      deployments:
        revisionHistory: 5
        podReplacementStrategy: RollingUpdate
        rollingupdate:
          maxUnavailable: 0
          maxSurge: 1

swift_multi_tenant: true

api:
  override: {}
  api_workers: 4

inspector:
  standalone: true
  port_internal: "5050"
  rpc_statsd_port: 9125
  # enables collecting metrics for rpc calls
  rpc_statsd_enabled: true
  dhcp:
    port: "67"
    proxy_port: "4011"
    ip: null
    range: null
    options:
      router: null

conductor:
  hosts: []
  deploy:
    protocol: "http"
    port: 8088
    erase_devices_priority: 0
  defaults:
    default:
      enabled_hardware_types: ipmi, idrac, redfish
      enabled_boot_interfaces: pxe, ipxe, idrac-redfish-virtual-media, redfish-virtual-media
      enabled_bios_interfaces: no-bios, idrac-redfish, redfish
      enabled_deploy_interfaces: direct
      enabled_inspect_interfaces: inspector, no-inspect
      enabled_management_interfaces: ipmitool, idrac-redfish, redfish
      enabled_power_interfaces: ipmitool, idrac-redfish, redfish
      enabled_console_interfaces: no-console, ipmitool-shellinabox, idrac-redfish-kvm
      enabled_raid_interfaces: no-raid, agent, idrac-redfish, redfish
      enabled_vendor_interfaces: no-vendor, ipmitool, idrac-redfish, redfish
      enabled_network_interfaces: neutron
      enabled_storage_interfaces: cinder,noop

      # enables collecting metrics for rpc calls
      statsd_enabled: false
      statsd_port: 9125

      # That depends on os version used in the bootloader image / inspector
      # Since the our loci images are based on ubuntu default to that for now
      # Cross-check os name with `esp_image_path`
      grub_config_path: 'EFI/ubuntu/grub.cfg'
    dhcp: {}
    pxe:
      kernel_append_params: "ipa-hardware-initialization-delay=120 console=tty0 console=ttyS0,115200 nofb nomodeset vga=normal"

      ipxe_use_swift: true
      pxe_bootfile_name: "undionly.kpxe"
      ipxe_bootfile_name: "undionly.kpxe"
      uefi_pxe_bootfile_name: "ipxe.efi"
      uefi_ipxe_bootfile_name: "ipxe.efi"
    redfish:
      swift_object_expiry_timeout: "5400"

agent:
  deploy_logs:
    collect: "on_failure"
    storage_backend: "local"
    swift_days_to_expire: 30

console:
  ssh_loglevel: error

tftp_ip: null
tftp_files:
  undionly.kpxe: https://repo.eu-de-1.cloud.sap/ironic-tftp/undionly.kpxe
  ipxe.efi: https://repo.eu-de-1.cloud.sap/ironic-tftp/ipxe.efi

portmetrics: "9102"

#network_management_uuid: DEFINE_IN_REGION_CHART
#network_cleaning_uuid: DEFINE_IN_REGION_CHART
neutron_url_timeout: 210
neutron_port_setup_delay: 0
neutron_connect_retries: 3

#swift_account: null
#swift_tempurl: null

mysql_metrics:
  enabled: true
  db_name: ironic
  db_user: ironic
  customMetrics:
    - name: openstack_ironic_nodes_list_gauge
      help: Ironic Node list
      labels:
        - "uuid"
        - "name"
        - "instance_uuid"
        - "power_state"
        - "provision_state"
        - "retired"
        - "last_error"
      query: |
        SELECT
          uuid,
          name,
          COALESCE(instance_uuid, "") AS instance_uuid,
          COALESCE(power_state, 'unknown') AS power_state,
          provision_state,
          COALESCE(retired, 'unknown') AS retired,
          COALESCE(last_error, 'unknown') AS last_error,
          COUNT(*) AS gauge
        FROM nodes
        GROUP BY uuid;
      values:
        - "gauge"
    - name: openstack_ironic_nodes_updated_in_24hrs_gauge
      help: Ironic updated nodes
      labels:
        - "uuid"
        - "name"
        - "provision_state"
      query: |
        SELECT 
          uuid, 
          name, 
          provision_state,
          COUNT(*) AS in_24hrs_gauge
        FROM nodes 
        WHERE updated_at >= NOW() - INTERVAL 1 DAY 
        GROUP BY uuid, provision_state, name;
      values:
        - "in_24hrs_gauge"
    - name: openstack_ironic_nodes_nodenotinmaint
      help: Ironic nodes not in maintenance
      labels:
        - "maintenance_reason"
        - "uuid"
        - "name"
      values:
        - "node_not_in_maint"
      query: |
        SELECT 
          COUNT(case when maintenance = 0 then 1 end) AS node_not_in_maint, 
          uuid, 
          name, 
          COALESCE(maintenance_reason,'reason unknown') AS maintenance_reason
        FROM nodes
        GROUP BY
          maintenance_reason,
          uuid,
          name;
    - name: openstack_ironic_nodes_nodeinmaint
      help: Ironic nodes in maintenance
      labels:
        - "maintenance_reason"
        - "uuid"
        - "name"
      values:
        - "node_in_maint"
      query: |
        SELECT 
          COUNT(case when maintenance = 1 then 1 end) AS node_in_maint, 
          uuid, 
          name, 
          COALESCE(maintenance_reason,'reason unknown') AS maintenance_reason
        FROM nodes
        GROUP BY
          maintenance_reason,
          uuid,
          name;
    - name: openstack_ironic_nodes_conductor_group
      help: Ironic updated nodes
      labels:
        - "uuid"
        - "name"
        - "conductor_group"
      query: |
        SELECT 
          uuid, 
          name, 
          conductor_group,
          COUNT(conductor_group) AS groups
        FROM nodes
        GROUP BY 
          name, 
          uuid, 
          conductor_group;
      values:
        - "groups"

proxysql:
  mode: ""

mariadb:
  enabled: true
  name: ironic
  databases:
    - ironic
    - ironic_inspector
  users:
    backup:
      name: backup
    ironic:
      name: ironic
      grants:
        - "ALL PRIVILEGES on ironic.*"
    ironic_inspector:
      name: ironic_inspector
      grants:
        - "ALL PRIVILEGES on ironic_inspector.*"
  alerts:
    service: ironic
    support_group: foundation
  backup_v2:
    enabled: true
    backup_dir: ./backup
    databases:
      - ironic
      - ironic_inspector
    verify_tables:
      - ironic.nodes
      - ironic_inspector.nodes

  root_password: "AHardPa55w0rd!"
  initdb_secret: true
  ccroot_user:
    enabled: true
  persistence_claim:
    name: db-ironic-pvclaim

dbName: ironic
#dbPassword: null
max_pool_size: 1
max_overflow: 50

sentry:
  enabled: true

rabbitmq:
  name: ironic
  persistence:
    enabled: false
  resources:
    requests:
      memory: 756Mi
      cpu: 1000m
  alerts:
    support_group: foundation
  metrics:
    enabled: true
    sidecar:
      enabled: false

logging:
  formatters:
    context:
      class: oslo_log.formatters.ContextFormatter
  handlers:
    stdout:
      class: StreamHandler
      args: "(sys.stdout,)"
      formatter: context
    sentry:
      class: raven.handlers.logging.SentryHandler
      level: ERROR
      args: "()"
  loggers:
    root:
      handlers: stdout, sentry
      level: WARNING
    ironic:
      handlers: stdout, sentry
      level: DEBUG
    eventlet.wsgi.server:
      handlers: stdout, sentry
      level: INFO
    auditmiddleware:
      handlers: stdout, sentry
      level: INFO

memcached:
  alerts:
    support_group: foundation

watcher:
  enabled: false

audit:
  central_service:
    user: rabbitmq
    password: DEFINED-IN-SECRETS
  enabled: false
  # how many messages to buffer before dumping to log (when rabbit is down or too slow)
  mem_queue_size: 100
  record_payloads: false
  metrics_enabled: true

# Deploy Ironic Prometheus alerts.
alerts:
  enabled: true
  # Name of the Prometheus to which the alerts should be assigned to.
  prometheus: openstack
  support_group: foundation

utils:
  trust_bundle:
    enabled: true

ironic-exporter:
  enabled: true
  notifications: false
  image:
    tag: cd8c3866
