apiVersion: apps/v1
kind: Deployment

metadata:
  name: git-cert-shim

spec:
  replicas: 1
  selector:
    matchLabels:
      app: git-cert-shim
  template:
    metadata:
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/targets: kubernetes
      labels:
        app: git-cert-shim
    spec:
      terminationGracePeriodSeconds: 20
      volumes:
      - name: git-cert-shim
        secret:
          secretName: git-cert-shim
      containers:
      - name: manager
        image: {{ .Values.global.registry | required "need .Values.global.registry" }}/git-cert-shim:v{{ required ".Chart.AppVersion missing" .Chart.AppVersion }}
        imagePullPolicy: IfNotPresent
        args:
        - --enable-leader-election
        - --default-issuer-name=digicert-issuer
        - --default-issuer-kind=DigicertIssuer
        - --default-issuer-group=certmanager.cloud.sap
        - --git-push-certs={{ .Values.git.push_certs }}
        - --vault-push-certs={{ .Values.vault.push_certs }}
        - --vault-update-metadata={{ .Values.vault.update_metadata }}
        - --vault-kv-engine={{ .Values.vault.kv_engine }}
        command:
        - /git-cert-shim
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: GIT_REMOTE_URL
          value: {{ quote .Values.git.repository }}
        - name: GIT_SSH_PRIVKEY_FILE
          value: '/git-cert-shim.key'
        - name: VAULT_ADDR
          value: {{ quote .Values.vault.addr }}
        - name: VAULT_ROLE_ID
          valueFrom:
            secretKeyRef:
              name: git-cert-shim
              key:  vault_role_id
        - name: VAULT_SECRET_ID
          valueFrom:
            secretKeyRef:
              name: git-cert-shim
              key:  vault_secret_id
        ports:
        - containerPort: 8080
          name: metrics
        resources:
          limits:
            cpu: 200m
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 20Mi
        volumes:
        - name: known_hosts
          configMap: 
            name: {{ .Release.Name }}-github-wdf-ssh-key
            items:
              - key: known_hosts
                path: known_hosts
        volumeMounts:
        - mountPath: /git-cert-shim.key
          name: git-cert-shim
          readOnly: true
          subPath: git-cert-shim.key
        - mountPath: /root/.ssh/
          name: known-hosts
          subPath: known_hosts
