---
{{ if .Values.gardenlet.enabled -}}
apiVersion: seedmanagement.gardener.cloud/v1alpha1
kind: Gardenlet
metadata:
  name: soil-{{ .Values.global.region }}
  namespace: garden
spec:
  deployment:
    image:
      tag: {{ .Chart.AppVersion }}
    podLabels:
      networking.resources.gardener.cloud/to-virtual-garden-kube-apiserver-tcp-443: allowed
    helm:
      ociRepository:
        ref: keppel.global.cloud.sap/ccloud-europe-docker-pkg-dev-mirror/gardener-project/releases/charts/gardener/gardenlet:{{ .Chart.AppVersion }}
  config:
    gardenClientConnection:
      kubeconfigSecret:
        name: gardenlet-kubeconfig
        namespace: garden
      kubeconfigValidity:
        validity: 72h
    seedConfig:
      metadata:
        labels:
          environment: production
      spec:
        backup:
          provider: openstack          
          region: {{ .Values.global.region }}
          secretRef:
            name: ingress-secret
            namespace: garden
        dns:
          provider:
            type: openstack-designate
            secretRef:
              name: ingress-secret
              namespace: garden
        ingress: # see prerequisites
          domain: {{ required ".Values.global.cluster missing" .Values.global.cluster }}.soil-garden.{{ required ".Values.global.region missing" .Values.global.region }}.cloud.sap
          controller:
            kind: nginx
        networks: {{ toYaml .Values.garden.runtimeCluster.networking | nindent 10 }}
        provider:
          region: {{ .Values.global.region }}
          type: openstack
        settings:
          excessCapacityReservation:
            enabled: false
          dependencyWatchdog:
            # The prober can start a vicious downscaling cycle from which a shoot cannot recover itself.
            # Let's assume there is healthy shoot and a machine is added.
            # This machine now fails to join the cluster temporarly for whatever reason.
            # This causes the prober to kick in and it will scale down the controller-manager as well as the MCM.
            # The node now gains network and it's kubelet tries the TLS bootstap.
            # The bootstrap does not go through, because the kubelets CertificateSigningRequest is never approved, because the controller-manager is scaled down.
            # Joining the node successfully is unfortunately required to scale up the controller-manager, which is a loop that cannot self-heal.
            prober:
              enabled: false    
{{ end -}}
