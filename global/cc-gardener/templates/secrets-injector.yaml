---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secrets-injector-watcher
  labels:
    app: secrets-injector-watcher
spec:
  selector:
    matchLabels:
      app: secrets-injector-watcher
  replicas: {{ .Values.secretsInjector.replicaCount }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: secrets-injector-watcher
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-public-networks: allowed
        networking.resources.gardener.cloud/to-virtual-garden-kube-apiserver-tcp-443: allowed
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/secrets-injector-config.yaml") . | sha256sum }}
        kubectl.kubernetes.io/default-container: secrets-injector-watcher
        prometheus.io/scrape: "true"
        prometheus.io/targets: kubernetes
    spec:
      containers:
      - image: "{{required ".Values.global.registry is missing" .Values.global.registry }}/{{ .Values.secretsInjector.image.repository }}:{{required ".Values.secretsInjector.image.tag is missing" .Values.secretsInjector.image.tag }}"
        imagePullPolicy: {{ .Values.secretsInjector.image.pullPolicy }}
        name: secrets-injector-watcher
        command: ["/secrets-injector-watcher"]
        args:
        - -kubeconfig=/kubeconfig/kubeconfig
        env:
        {{ range $index, $account := .Values.secretsInjector.config.accounts -}}
        - name: VAULT_ROLE_ID_{{- $index }}
          valueFrom:
            secretKeyRef:
              name: secrets-injector-watcher
              key: VAULT_ROLE_ID_{{- $index }}
        - name: VAULT_SECRET_ID_{{- $index }}
          valueFrom:
            secretKeyRef:
              name: secrets-injector-watcher
              key: VAULT_SECRET_ID_{{- $index }}
        {{ end -}}
        volumeMounts:
        - name: config
          mountPath: "/config"
          readOnly: true
        - name: kubeconfig
          mountPath: "/kubeconfig"
        ports:
        - name: metrics
          containerPort: 8080
      {{ if ne .Values.secretsInjector.topologyKey "" -}}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - secrets-injector-watcher
            topologyKey: {{ .Values.secretsInjector.topologyKey }}
      {{ end -}}
      volumes:
        - name: config
          configMap:
            name: secrets-injector-watcher
        - name: kubeconfig
          secret:
            secretName: secrets-injector-watcher-kubeconfig
---
apiVersion: v1
kind: Secret
metadata:
  name: secrets-injector-watcher
  namespace: {{ .Release.Namespace }}
type: Opaque
data:
  {{ range $index, $account := .Values.secretsInjector.config.accounts -}}
  VAULT_ROLE_ID_{{- $index -}}: {{ required "no roleID given" $account.approle.roleID | b64enc | quote }}
  VAULT_SECRET_ID_{{- $index -}}: {{ required "no secretID given" $account.approle.secretID | b64enc | quote }}
  {{ end }}
---
apiVersion: v1
kind: Secret
metadata:
  name: secrets-injector-watcher-kubeconfig
  labels:
    resources.gardener.cloud/purpose: token-requestor
    resources.gardener.cloud/class: shoot
  annotations:
    serviceaccount.resources.gardener.cloud/name: secrets-injector-watcher
    serviceaccount.resources.gardener.cloud/namespace: garden
# cannot use lookup for CA because names from operator are hashed randomly
stringData:
  kubeconfig: |
    apiVersion: v1
    clusters:
    - cluster:
        certificate-authority-data: {{ .Values.secretsInjector.virtualGardenCA }}
        server: https://virtual-garden-kube-apiserver.garden
      name: virtual-garden
    contexts:
    - context:
        cluster: virtual-garden
        user: secrets-injector-watcher
      name: virtual-garden
    current-context: virtual-garden
    kind: Config
    preferences: {}
    users:
    - name: secrets-injector-watcher
      user:
        token: ""
