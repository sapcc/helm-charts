apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "andromeda.fullname" . }}-server
  labels:
{{ include "andromeda.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "andromeda.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "andromeda.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
      annotations:
        checksum/etc: {{ include (print $.Template.BasePath  "/configmap.yaml") . | sha256sum }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "andromeda.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: wait-for-migration
          image: "{{ .Values.global.registry }}/kubernetes-entrypoint:{{ .Values.image.kubernetes_entrypoint_version }}"
          env:
            - name: NAMESPACE
              value: "{{ .Release.Namespace }}"
            - name: DEPENDENCY_JOBS
              value: {{ include "andromeda.fullname" . }}-migration-{{ .Values.image.tag | required ".Values.image.tag is required" }}
            - name: COMMAND
              value: "true"
      containers:
        - name: {{ .Chart.Name }}-server
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args: ["--config-file", "/etc/andromeda/andromeda.yaml", "--port", "8000"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: HOST
              value: 0.0.0.0
            - name: MICRO_BROKER
              value: nats
            - name: MICRO_REGISTRY
              value: nats
            - name: MICRO_TRANSPORT
              value: nats
            - name: MICRO_LOG_LEVEL
              value: debug
            - name: GOMEMLIMIT
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}-server
                  resource: limits.memory
            - name: GOMAXPROCS
              valueFrom:
                resourceFieldRef:
                  containerName: {{ .Chart.Name }}-server
                  resource: limits.cpu
          ports:
            - name: http
              containerPort: 8000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthcheck
              port: http
          readinessProbe:
            httpGet:
              path: /healthcheck
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: etc-andromeda
              mountPath: /etc/andromeda
              readOnly: true
      volumes:
        - name: etc-andromeda
          projected:
            defaultMode: 420
            sources:
              - configMap:
                  name: andromeda-etc
                  items:
                    - key: andromeda.yaml
                      path: andromeda.yaml
                    - key: policy.json
                      path: policy.json
