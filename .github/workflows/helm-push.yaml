name: Package Helm Chart and publish to GitHub Packages

on:
  push:
    branches:
        - master

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  ACTIONS_RUNNER_DEBUG: false

jobs:
  helm-release:
    runs-on: [ ubuntu-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
            fetch-depth: 0
            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - uses: actions/setup-python@v5
        with:
            python-version: 3.9
            check-latest: true
            token: ${{ secrets.GITHUB_TOKEN }}

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
            registry: ${{ env.REGISTRY }}
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up chart-testing
        uses: helm/chart-testing-action@v2.6.1

      - name: Run chart-testing (list-changed)
        id: list-changed
        run: |
            changed=$(ct list-changed --config ci/config.yaml --target-branch ${{ github.event.repository.default_branch }})
            if [[ -n "$changed" ]]; then
            echo "changed=true" >> "$GITHUB_OUTPUT"
            fi

      - name: Run chart-testing (lint)
        if: steps.list-changed.outputs.changed == 'true'
        run: ct lint --chart-yaml-schema ci/chart_schema.yaml --lint-conf ci/lintconf.yaml --config ci/config.yaml --target-branch ${{ github.event.repository.default_branch }}
    
      - name: Check if Helm chart with same version already exists
        id: check-chart
        if: steps.list-changed.outputs.changed == 'true'
        run: |
            for chart in $(ct list-changed --config ci/config.yaml --target-branch ${{ github.event.repository.default_branch }}); do
              chart_version=$(yq .version "$chart/Chart.yaml")
              if helm pull "oci://${{ env.REGISTRY }}/${{ github.repository }}/charts/$(basename $chart)" --version $chart_version; then
                echo "chart=$(basename $chart)" >> "$GITHUB_OUTPUT"
                echo "chart_version=${chart_version}" >> "$GITHUB_OUTPUT"
                echo "needsbump=true" >> "$GITHUB_OUTPUT"
                exit 1
              fi
            done

      - name: Chart needs version bump
        if: steps.check-chart.outputs.bump == 'true'
        env:
          CHART_VERSION: ${{ steps.check-chart.outputs.chart_version }}
        run: |
          echo "Chart ${{ matrix.chartDir }}:${{ env.CHART_VERSION }} already exists in OCI registry. Skipping upload. Please increment the chart version."
          exit 1

      - name: Push Charts to GHCR
        if: steps.list-changed.outputs.changed == 'true' && steps.check-chart.outputs.bump != 'true'
        run: |
            for chart in $(ct list-changed --config ci/config.yaml --target-branch ${{ github.event.repository.default_branch }}); do
                helm dependency update $chart
                helm package $chart -d $chart
                PKG_NAME=`ls $chart/*.tgz`
                helm push ${PKG_NAME} oci://${{ env.REGISTRY }}/${{ github.repository }}/
            done
